{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Components/ast/ast.component.ts","./src/app/Components/ast/ast.component.html","./src/app/Components/editor/editor.component.ts","./src/app/Components/editor/editor.component.html","./src/app/Components/editor/parser/Abstract/Nodo.ts","./src/app/Components/editor/parser/Error.ts","./src/app/Components/editor/parser/Errores.ts","./src/app/Components/editor/parser/Grammar/XmlGrammarASC.js","./src/app/Components/editor/parser/Nodes/NodoXml.ts","./src/app/Components/editor/parser/Report/Table.ts","./src/app/Components/editor/parser/Report/plotter.ts","./src/app/Components/editor/parser/Util/Salida.ts","./src/app/Components/footer/footer.component.ts","./src/app/Components/footer/footer.component.html","./src/app/Components/toolbar/toolbar.component.ts","./src/app/Components/toolbar/toolbar.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/dot.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAClD,2BAA2B;AACA;;;AASpB,MAAM,YAAY;IAEvB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE/C,QAAQ;QACN,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;QACtC,gBAAgB;QAChB,IAAI,UAAU,GAAG,2CAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,IAAI,GAAG;YACT,KAAK,EAAE,UAAU,CAAC,KAAK;YACvB,KAAK,EAAE,UAAU,CAAC,KAAK;SACxB,CAAC;QACF,IAAI,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;QACjC,IAAI,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QACjD,IAAI,OAAO,GAAG,IAAI,2CAAW,CAAC,SAAS,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IAC1D,CAAC;;wEAfU,YAAY;4FAAZ,YAAY;QCTzB,gEAAI;QAAA,gEACJ;QAAA,gEAAI;QAAA,gEACJ;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,wEACI;QAAA,iFAAqB;QAAA,iEAAK;QAAA,qFAC9B;QAAA,4DAAK;QACT,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,qEAEM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,iEAAI;QAAA,iEACJ;QAAA,iEAAI;QAAA,iEAAI;;6FDVK,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAIb;AAChD,4BAA4B;AACsB;AACJ;AAG9C,0BAA0B;AACK;AAC/B,0BAA0B;AAciB;AAEA;;;;;;;;;;AAK3C,MAAM,SAAS,GAAG,mBAAO,CAAC,sGAAmC,CAAC,CAAC;AAQxD,MAAM,eAAe;IAyB1B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAxB1C,YAAY;QACZ,UAAK,GAAG,cAAc,CAAC;QACvB,eAAU,GAAG,6BAA6B,CAAC;QAC3C,iBAAY,GAAG,aAAa,CAAC;QAC7B,WAAM,GAAG,qBAAqB,CAAC;QAM/B,SAAS;QACT,cAAS,GAAG,2EAAS,CAAC;QACtB,aAAQ,GAAG,0EAAQ,CAAC;QACpB,kBAAa,GAAG,+EAAa,CAAC;QAC9B,YAAO,GAAG,yEAAO,CAAC;QAClB,cAAS,GAAG,2EAAS,CAAC;QACtB,eAAU,GAAG,4EAAU,CAAC;QACxB,aAAQ,GAAG,0EAAQ,CAAC;QACpB,WAAM,GAAG,wEAAM,CAAC;QAChB,WAAM,GAAG,wEAAM,CAAC;QAChB,sBAAiB,GAAG,mFAAiB,CAAC;QACtC,mBAAc,GAAG,gFAAc,CAAC;QAChC,WAAM,GAAG,wEAAM,CAAC;IAE6B,CAAC;IAC9C,QAAQ;QACN,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,eAAe;IACf,wBAAwB;IACxB,2CAA2C;IAC3C,uBAAuB;IACvB,IAAI;IACJ,UAAU;IACV,KAAK;QACH,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,8BAA8B,CAAC;QAC7C,4DAAQ,CAAC,MAAM,GAAG,EAAE,CAAC;QACrB,4DAAQ,CAAC,KAAK,GAAG,CAAC,CAAC;QACnB,4DAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QACpB,4DAAQ,CAAC,YAAY,GAAG,CAAC,CAAC;QAC1B,4DAAQ,CAAC,WAAW,GAAG,CAAC,CAAC;QACzB,4DAAQ,CAAC,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;QAC7B,uDAAO,CAAC,MAAM,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,OAAO,CAAC,IAAY;QAClB,wBAAwB;QACxB,IAAI,CAAC,MAAM,GAAG,yBAAyB,CAAC;QACxC,IAAI,CAAC,MAAM,IAAI,sBAAsB,CAAC;QACtC,IAAI,CAAC,MAAM,IAAI,wBAAwB,CAAC;QACxC,IAAI,CAAC,MAAM,IAAI,aAAa,CAAC;QAC7B,IAAI,CAAC,MAAM,IAAI,aAAa,CAAC;QAC7B,IAAI,CAAC,MAAM,IAAI,QAAQ,CAAC;QACxB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,4DAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;YACnD,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE;gBAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC/D,IAAI,CAAC,MAAM,IAAI,WAAW,CAAC;aAC5B;YACD,IAAI,CAAC,MAAM,IAAI,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC;SACnC;QACD,IAAI,CAAC,MAAM;YACT,4DAAQ,CAAC,KAAK,IAAI,CAAC;gBACjB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;gBAClD,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,IAAI,4DAAQ,CAAC,MAAM,CAAC;QAC/B,IAAI,CAAC,MAAM,IAAI,iBAAiB,CAAC;QACjC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;QACpB,IAAI,CAAC,MAAM,IAAI,aAAa,CAAC;QAC7B,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC;IACzB,CAAC;IAED,0BAA0B;IAC1B,8CAA8C;IAC9C,gBAAgB;IAChB,qCAAqC;IACrC,kBAAkB;IAClB,uEAAuE;IACvE,8BAA8B;IAC9B,gCAAgC;IAChC,qCAAqC;IACrC,kCAAkC;IAClC,gDAAgD;IAChD,6BAA6B;IAC7B,qBAAqB;IACrB,4BAA4B;IAC5B,kCAAkC;IAClC,kCAAkC;IAClC,qDAAqD;IACrD,aAAa;IACb,mCAAmC;IACnC,UAAU;IACV,oCAAoC;IACpC,kCAAkC;IAClC,sDAAsD;IACtD,aAAa;IACb,mCAAmC;IACnC,UAAU;IACV,UAAU;IACV,MAAM;IACN,IAAI;IAEJ,eAAe;IACf,mCAAmC;IACnC,gBAAgB;IAChB,oDAAoD;IACpD,4BAA4B;IAC5B,8BAA8B;IAC9B,mCAAmC;IACnC,gCAAgC;IAChC,8CAA8C;IAC9C,2BAA2B;IAC3B,mBAAmB;IACnB,0BAA0B;IAC1B,gCAAgC;IAChC,qEAAqE;IACrE,sDAAsD;IACtD,6CAA6C;IAC7C,sBAAsB;IACtB,mCAAmC;IACnC,0BAA0B;IAC1B,mBAAmB;IACnB,QAAQ;IACR,kCAAkC;IAClC,sEAAsE;IACtE,sDAAsD;IACtD,6CAA6C;IAC7C,sBAAsB;IACtB,mCAAmC;IACnC,0BAA0B;IAC1B,mBAAmB;IACnB,QAAQ;IACR,QAAQ;IACR,IAAI;IAEJ,UAAU,CAAC,OAAe;QACxB,QAAQ;QACR,yCAAyC;QACzC,gCAAgC;QAChC,UAAU;QACV,yCAAyC;QACzC,2BAA2B;QAC3B,QAAQ;QACR,kBAAkB;QAClB,sBAAsB;QACtB,MAAM;QACN,8BAA8B;QAC9B,6CAA6C;QAC7C,8BAA8B;QAC9B,4BAA4B;QAC5B,8BAA8B;QAC9B,UAAU;QACV,yCAAyC;QACzC,2BAA2B;QAC3B,QAAQ;QACR,kBAAkB;QAClB,sBAAsB;QACtB,MAAM;QACN,8BAA8B;QAC9B,6CAA6C;QAC7C,8BAA8B;QAC9B,4BAA4B;QAC5B,8BAA8B;QAC9B,UAAU;QACV,yCAAyC;QACzC,2BAA2B;QAC3B,QAAQ;QACR,kBAAkB;QAClB,sBAAsB;QACtB,MAAM;QACN,8BAA8B;QAC9B,6CAA6C;QAC7C,8BAA8B;QAC9B,4BAA4B;QAC5B,8BAA8B;QAC9B,UAAU;QACV,yCAAyC;QACzC,2BAA2B;QAC3B,QAAQ;QACR,kBAAkB;QAClB,sBAAsB;QACtB,MAAM;QACN,8BAA8B;QAC9B,6CAA6C;QAC7C,8BAA8B;QAC9B,4BAA4B;QAC5B,8BAA8B;QAC9B,UAAU;QACV,yCAAyC;QACzC,2BAA2B;QAC3B,QAAQ;QACR,kBAAkB;QAClB,sBAAsB;QACtB,MAAM;QACN,8BAA8B;QAC9B,gBAAgB;QAChB,sBAAsB;QACtB,sEAAsE;QACtE,uBAAuB;QACvB,sCAAsC;QACtC,8CAA8C;QAC9C,2BAA2B;QAC3B,oBAAoB;QACpB,gCAAgC;QAChC,QAAQ;QACR,gBAAgB;QAChB,oBAAoB;QACpB,gBAAgB;QAChB,sBAAsB;QACtB,wDAAwD;QACxD,qBAAqB;QACrB,sCAAsC;QACtC,8CAA8C;QAC9C,2BAA2B;QAC3B,QAAQ;QACR,IAAI;IACN,CAAC;IAED,SAAS;QACP,cAAc;QACd,2DAA2D;QAC3D,0BAA0B;QAC1B,4BAA4B;QAC5B,kCAAkC;QAClC,8BAA8B;QAC9B,4CAA4C;QAC5C,yBAAyB;QACzB,kBAAkB;QAClB,wBAAwB;QACxB,sEAAsE;QACtE,uEAAuE;QACvE,MAAM;IACR,CAAC;IACD,cAAc;QACZ,IAAI,CAAC,KAAK,EAAE,CAAC;QAChB,IAAI;YACC,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YACvD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;SAC1B;QACD,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACpB,CAAC;IAED,QAAQ;QACN,gBAAgB;QAChB,QAAQ;QACR,4DAA4D;QAC5D,2BAA2B;QAC3B,gBAAgB;QAChB,8BAA8B;QAC9B,IAAI;QACJ,qBAAqB;QACrB,QAAQ;QACR,4DAA4D;QAC5D,2BAA2B;QAC3B,gBAAgB;QAChB,8BAA8B;QAC9B,IAAI;QACJ,qBAAqB;QACrB,QAAQ;QACR,yDAAyD;QACzD,sCAAsC;QACtC,oCAAoC;QACpC,YAAY;QACZ,gEAAgE;QAChE,wBAAwB;QACxB,4BAA4B;QAC5B,QAAQ;QACR,MAAM;QACN,oCAAoC;QACpC,kEAAkE;QAClE,YAAY;QACZ,iCAAiC;QACjC,8DAA8D;QAC9D,wBAAwB;QACxB,4BAA4B;QAC5B,QAAQ;QACR,MAAM;QACN,+BAA+B;QAC/B,2CAA2C;QAC3C,sCAAsC;QACtC,aAAa;QACb,iCAAiC;QACjC,qCAAqC;QACrC,yBAAyB;QACzB,uBAAuB;QACvB,8BAA8B;QAC9B,0BAA0B;QAC1B,+BAA+B;QAC/B,4BAA4B;QAC5B,iCAAiC;QACjC,oBAAoB;QACpB,qCAAqC;QACrC,qBAAqB;QACrB,YAAY;QACZ,QAAQ;QACR,MAAM;QACN,oBAAoB;QACpB,wBAAwB;QACxB,IAAI;QACJ,qBAAqB;IACvB,CAAC;IAED,SAAS;QACP,gBAAgB;QAChB,QAAQ;QACR,sDAAsD;QACtD,sCAAsC;QACtC,sBAAsB;QACtB,UAAU;QACV,sCAAsC;QACtC,kDAAkD;QAClD,QAAQ;QACR,kBAAkB;QAClB,sBAAsB;QACtB,MAAM;QACN,+BAA+B;QAC/B,iCAAiC;QACjC,aAAa;QACb,iCAAiC;QACjC,qCAAqC;QACrC,yBAAyB;QACzB,uBAAuB;QACvB,8BAA8B;QAC9B,0BAA0B;QAC1B,+BAA+B;QAC/B,4BAA4B;QAC5B,iCAAiC;QACjC,oBAAoB;QACpB,qCAAqC;QACrC,qBAAqB;QACrB,YAAY;QACZ,QAAQ;QACR,MAAM;QACN,oBAAoB;QACpB,wBAAwB;QACxB,IAAI;QACJ,qBAAqB;QACrB,yBAAyB;IAC3B,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,kCAAkC;gBACxC,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,WAAW;gBAC9B,kBAAkB,EAAE,kBAAkB;gBACtC,UAAU,EAAE,OAAO;aACpB,CAAC,CAAC;SACJ;aAAM,IAAI,uDAAO,CAAC,MAAM,IAAI,CAAC,EAAE;YAC9B,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,UAAU;gBACjB,IAAI,EAAE,wDAAwD;gBAC9D,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,WAAW;gBAC9B,kBAAkB,EAAE,kBAAkB;gBACtC,UAAU,EAAE,OAAO;aACpB,CAAC,CAAC;SACJ;aAAM;YACL,0CAA0C;YAC1C,SAAS;YACT,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,8DAAO,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACxD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACpB,OAAO;SACR;IACH,CAAC;IAED,UAAU;QACR,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,kCAAkC;gBACxC,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,WAAW;gBAC9B,kBAAkB,EAAE,kBAAkB;gBACtC,UAAU,EAAE,OAAO;aACpB,CAAC,CAAC;SACJ;aAAM,IAAI,4DAAQ,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,EAAE;YACrC,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,oDAAoD;gBAC1D,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,WAAW;gBAC9B,kBAAkB,EAAE,kBAAkB;gBACtC,UAAU,EAAE,OAAO;aACpB,CAAC,CAAC;SACJ;aAAM,IAAI,uDAAO,CAAC,MAAM,IAAI,CAAC,EAAE;YAC9B,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,UAAU;gBACjB,IAAI,EAAE,0EAA0E;gBAChF,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,WAAW;gBAC9B,kBAAkB,EAAE,kBAAkB;gBACtC,UAAU,EAAE,OAAO;aACpB,CAAC,CAAC;SACJ;aAAM;YACL,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,mBAAmB;gBAC1B,IAAI,EAAE,IAAI,0DAAK,EAAE,CAAC,OAAO,CAAC,4DAAQ,CAAC,OAAO,CAAC;gBAC3C,iBAAiB,EAAE,WAAW;gBAC9B,kBAAkB,EAAE,kBAAkB;gBACtC,UAAU,EAAE,OAAO;gBACnB,KAAK,EAAE,GAAG;aACX,CAAC,CAAC;SACJ;IACH,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,MAAM,IAAI,SAAS,EAAE;YAC5B,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,kCAAkC;gBACxC,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,WAAW;gBAC9B,kBAAkB,EAAE,kBAAkB;gBACtC,UAAU,EAAE,OAAO;aACpB,CAAC,CAAC;SACJ;aAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;YAClC,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,+CAA+C;gBACrD,IAAI,EAAE,SAAS;gBACf,iBAAiB,EAAE,WAAW;gBAC9B,kBAAkB,EAAE,kBAAkB;gBACtC,UAAU,EAAE,OAAO;aACpB,CAAC,CAAC;SACJ;aAAM;YACL,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,iBAAiB;gBACxB,IAAI,EAAE,IAAI,0DAAK,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;gBACpC,iBAAiB,EAAE,WAAW;gBAC9B,kBAAkB,EAAE,kBAAkB;gBACtC,UAAU,EAAE,OAAO;gBACnB,KAAK,EAAE,GAAG;aACX,CAAC,CAAC;SACJ;IACH,CAAC;IAED,UAAU;QACR,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,kCAAkC;gBACxC,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,WAAW;gBAC9B,kBAAkB,EAAE,kBAAkB;gBACtC,UAAU,EAAE,OAAO;aACpB,CAAC,CAAC;SACJ;aAAM,IAAI,uDAAO,CAAC,MAAM,IAAI,CAAC,EAAE;YAC9B,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,wCAAwC;gBAC9C,IAAI,EAAE,SAAS;gBACf,iBAAiB,EAAE,WAAW;gBAC9B,kBAAkB,EAAE,kBAAkB;gBACtC,UAAU,EAAE,OAAO;aACpB,CAAC,CAAC;SACJ;aAAM;YACL,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,kBAAkB;gBACzB,IAAI,EAAE,IAAI,0DAAK,EAAE,CAAC,MAAM,CAAC,uDAAO,CAAC;gBACjC,iBAAiB,EAAE,WAAW;gBAC9B,kBAAkB,EAAE,kBAAkB;gBACtC,UAAU,EAAE,OAAO;gBACnB,KAAK,EAAE,GAAG;aACX,CAAC,CAAC;SACJ;IACH,CAAC;IAED,MAAM;QACJ,UAAU;QACV,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACvB,CAAC;IAED,QAAQ;QACN,UAAU;QACV,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;IAED,OAAO;QACL,WAAW;QACX,IAAI,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACnD,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAC1C,YAAY,CAAC,QAAQ,GAAG,CAAC,CAAC,EAAE,EAAE;YAC5B,IAAI,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,IAAI;gBAAE,OAAO,KAAK,CAAC;YACxB,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAC9B,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,EAAE;gBACxC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACnD,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC,CAAC;QAEF,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,OAAO,KAAK,CAAC;IACf,CAAC;IAED,SAAS;QACP,WAAW;QACX,IAAI,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACnD,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAC1C,YAAY,CAAC,QAAQ,GAAG,CAAC,CAAC,EAAE,EAAE;YAC5B,IAAI,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,IAAI;gBAAE,OAAO,KAAK,CAAC;YACxB,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAC9B,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,EAAE;gBACxC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACrD,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC,CAAC;QAEF,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,OAAO,KAAK,CAAC;IACf,CAAC;IAED,OAAO;QACL,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC1C,OAAO,CAAC,YAAY,CAClB,MAAM,EACN,gCAAgC,GAAG,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CACvE,CAAC;QACF,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QAE/C,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QAC/B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAEnC,OAAO,CAAC,KAAK,EAAE,CAAC;QAEhB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,SAAS;QACP,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC1C,OAAO,CAAC,YAAY,CAClB,MAAM,EACN,gCAAgC,GAAG,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CACzE,CAAC;QACF,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;QAEjD,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QAC/B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAEnC,OAAO,CAAC,KAAK,EAAE,CAAC;QAEhB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,YAAY;QACV,IAAI,CAAC,MAAM,GAAG,8BAA8B,CAAC;IAC/C,CAAC;;8EA7iBU,eAAe;+FAAf,eAAe;QCxC5B,yEACE;QAAA,yEACE;QACA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,4EAME;QAAA,wEAAmC;QACnC,gEACF;QAAA,4DAAS;QACT,yEAME;QAAA,4EAKE;QAJA,uIAAS,oBAAgB,IAAC;QAI1B,yEAAmC;QACnC,iFACF;QAAA,4DAAS;QACT,6EACE;QADM,wIAAS,cAAU,IAAC;QAC1B,yEAAmC;QACnC,kFACF;QAAA,4DAAS;QACT,6EACE;QADM,wIAAS,YAAQ,IAAC;QACxB,yEAAmC;QACnC,mEACF;QAAA,4DAAS;QACT,6EACE;QADM,wIAAS,aAAS,IAAC;QACzB,yEAA8C;QAC9C,mEACF;QAAA,4DAAS;QACT,6EACE;QADM,wIAAS,aAAS,IAAC;QACzB,yEAA2C;QAC3C,qEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACN,oEACA;QAAA,0EACE;QAAA,6EAME;QAAA,yEAAmC;QACnC,mEACF;QAAA,4DAAS;QACT,0EAME;QAAA,6EACE;QADM,wIAAS,cAAU,IAAC;QAC1B,yEAAmC;QACnC,iFACF;QAAA,4DAAS;QACT,6EACE;QADM,wIAAS,cAAU,IAAC;QAC1B,yEAAmC;QACnC,kFACF;QAAA,4DAAS;QACT,6EACE;QADM,wIAAS,cAAU,IAAC;QAC1B,yEAAmC;QACnC,mEACF;QAAA,4DAAS;QACT,6EACE;QADM,wIAAS,eAAW,IAAC;QAC3B,yEAA8C;QAC9C,mEACF;QAAA,4DAAS;QACT,6EACE;QADM,wIAAS,eAAW,IAAC;QAC3B,yEAA2C;QAC3C,qEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACN,oEACA;QAAA,6EAME;QALA,wIAAS,eAAW,IAAC;QAKrB,yEAAoC;QACpC,oEACF;QAAA,4DAAS;QACT,oEACA;QAAA,6EAME;QALA,wIAAS,eAAW,IAAC;QAKrB,yEAAsC;QACtC,uEACF;QAAA,4DAAS;QACT,oEACA;QAAA,0EACE;QAAA,6EAME;QAAA,yEAAsC;QACtC,sEACF;QAAA,4DAAS;QACT,0EAME;QAAA,6EACE;QADM,wIAAS,cAAU,IAAC;QAC1B,yEAA0C;QAC1C,iEACF;QAAA,4DAAS;QACT,6EACE;QADM,wIAAS,cAAU,IAAC;QAC1B,yEAA0C;QAC1C,iEACF;QAAA,4DAAS;QACT,6EACE;QADM,wIAAS,cAAU,IAAC;QAC1B,yEAA0C;QAC1C,iEACF;QAAA,4DAAS;QACT,6EACE;QADM,wIAAS,gBAAY,IAAC;QAC5B,yEAAuC;QACvC,+EACF;QAAA,4DAAS;QACT,6EACE;QADM,wIAAS,gBAAY,IAAC;QAC5B,yEAAqC;QACrC,8EACF;QAAA,4DAAS;QACT,6EACE;QADM,wIAAS,cAAU,IAAC;QAC1B,yEAAsC;QACtC,mFACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACN,oEACA;QAAA,6EAME;QALA,wIAAS,kBAAc,IAAC;QAKxB,yEAAqC;QACrC,6EACF;QAAA,4DAAS;QACT,oEACF;QAAA,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,2EACE;QAAA,2EACE;QAAA,0EAAuB;QAAA,+DAAG;QAAA,4DAAK;QAC/B,sFAOkB;QANhB,iMAAwB;QAMzB,4DAAiB;QACpB,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,0EAAuB;QAAA,iEAAK;QAAA,4DAAK;QACjC,sFAMkB;QALhB,mMAA0B;QAK3B,4DAAiB;QACpB,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,2EACE;QAAA,0EAAuB;QAAA,kEAAM;QAAA,4DAAK;QAClC,sFAOkB;QALhB,6LAAoB;QAKrB,4DAAiB;QACpB,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,uEAAoD;QACtD,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,uEAA+C;;QAvM1B,0DAAe;QAAf,4EAAe;QAcb,0DAAe;QAAf,4EAAe;QAIf,0DAAe;QAAf,4EAAe;QAIf,0DAAe;QAAf,4EAAe;QAIf,0DAA0B;QAA1B,uFAA0B;QAI1B,0DAAuB;QAAvB,oFAAuB;QAazB,0DAAe;QAAf,4EAAe;QAUb,0DAAe;QAAf,4EAAe;QAIf,0DAAe;QAAf,4EAAe;QAIf,0DAAe;QAAf,4EAAe;QAIf,0DAA0B;QAA1B,uFAA0B;QAI1B,0DAAuB;QAAvB,oFAAuB;QAY3B,0DAAgB;QAAhB,6EAAgB;QAUhB,0DAAkB;QAAlB,+EAAkB;QAWhB,0DAAkB;QAAlB,+EAAkB;QAUhB,0DAAsB;QAAtB,mFAAsB;QAItB,0DAAsB;QAAtB,mFAAsB;QAItB,0DAAsB;QAAtB,mFAAsB;QAItB,0DAAmB;QAAnB,gFAAmB;QAInB,0DAAiB;QAAjB,8EAAiB;QAIjB,0DAAkB;QAAlB,+EAAkB;QAYtB,0DAAiB;QAAjB,8EAAiB;QAYxB,0DAAwB;QAAxB,mFAAwB;QAaxB,0DAA0B;QAA1B,qFAA0B;QAe1B,0DAAoB;QAApB,+EAAoB;;6FD5JnB,eAAe;cAN3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;gBACrC,aAAa,EAAE,+DAAiB,CAAC,IAAI;aACtC;;;;;;;;;;;;;;AExCD;AAAA;AAAO,MAAe,IAAI;IAOxB,YAAY,IAAY,EAAE,IAAY,EAAE,IAAY,EAAE,MAAc;QAClE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,EAAE,CAAC;IAChC,CAAC;CAOF;;;;;;;;;;;;;ACpBD;AAAA;AAAO,MAAM,MAAM;IAEf,YAAoB,KAAc,EAAU,OAAe,EAAU,IAAa,EAAU,OAAgB;QAAxF,UAAK,GAAL,KAAK,CAAS;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAS;QAAU,YAAO,GAAP,OAAO,CAAS;IAE5G,CAAC;IAED,QAAQ,KAAK,OAAO,IAAI,CAAC,KAAK,EAAC,CAAC;IAChC,UAAU,KAAK,OAAO,IAAI,CAAC,OAAO,EAAC,CAAC;IACpC,OAAO,KAAK,OAAO,IAAI,CAAC,IAAI,EAAC,CAAC;IAC9B,cAAc,KAAK,OAAO,IAAI,CAAC,OAAO,EAAC,CAAC;IAExC,OAAO;QACH,IAAI,MAAM,GAAG,MAAM,GAAC,IAAI,CAAC,IAAI,GAAC,OAAO,CAAC;QACtC,MAAM,IAAI,MAAM,GAAC,IAAI,CAAC,OAAO,GAAC,OAAO,CAAC;QACtC,MAAM,IAAI,MAAM,GAAC,IAAI,CAAC,KAAK,GAAC,OAAO,CAAC;QACpC,MAAM,IAAI,MAAM,GAAC,IAAI,CAAC,OAAO,GAAC,OAAO,CAAC;QACtC,OAAO,MAAM,CAAC;IAClB,CAAC;CACJ;;;;;;;;;;;;;AChBD;AAAA;AAAO,IAAI,OAAO,GAAmB,IAAI,KAAK,EAAE,CAAC;;;;;;;;;;;;ACFjD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,eAAe,kCAAkC;AACjD,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA,qBAAqB,IAAI;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mJAAmJ;AACnJ,SAAS;;AAET;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,eAAe,KAAK;AAC1C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,OAAO,gDAAgD;AACvD,OAAO,SAAS;AAChB,OAAO,+BAA+B;AACtC,OAAO,YAAY;AACnB,OAAO,6CAA6C;AACpD,OAAO,UAAU;AACjB,OAAO,UAAU;AACjB,OAAO,aAAa;AACpB,OAAO,YAAY;AACnB,OAAO,uCAAuC;AAC9C;AACA;AACA,OAAO,uBAAuB;AAC9B,OAAO,uBAAuB;AAC9B,OAAO,+BAA+B;AACtC,OAAO,+BAA+B;AACtC,OAAO,YAAY;AACnB;AACA;AACA,OAAO,cAAc;AACrB,OAAO,cAAc;AACrB;AACA,OAAO,uBAAuB;AAC9B,OAAO,cAAc;AACrB;AACA,OAAO,uBAAuB;AAC9B,OAAO,cAAc;AACrB,OAAO,cAAc;AACrB;AACA,OAAO,cAAc;AACrB,OAAO,cAAc;AACrB;AACA;AACA;AACA,OAAO,cAAc;AACrB;AACA;AACA;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,SAAS,SAAS,GAAG,mBAAO,CAAC,6DAAU;AACvC,SAAS,UAAU,GAAG,mBAAO,CAAC,iEAAY;AAC1C,SAAS,UAAU,GAAG,mBAAO,CAAC,6EAAkB;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,yBAAyB;AACzB,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,SAAS;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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\n// Import para las graficas\r\nimport * as vis from \"vis\";\r\n// Import para el servicio\r\nimport { DotService } from \"../../services/dot.service\" \r\n\r\n@Component({\r\n  selector: 'app-ast',\r\n  templateUrl: './ast.component.html',\r\n  styleUrls: ['./ast.component.css']\r\n})\r\nexport class AstComponent implements OnInit {\r\n\r\n  constructor(private dotService: DotService) { }\r\n\r\n  ngOnInit(): void {\r\n    let dotRes = this.dotService.getDot();\r\n    //alert(dotRes);\r\n    var parsedData = vis.network.convertDot(dotRes);\r\n    var data = {\r\n      nodes: parsedData.nodes,\r\n      edges: parsedData.edges\r\n    };\r\n    var options = parsedData.options;\r\n    var container = document.getElementById(\"graph\");\r\n    var network = new vis.Network(container, data, options);\r\n  }\r\n\r\n}\r\n","\r\n<!-- Body -->\r\n<br><br>\r\n<br><br>\r\n<div class=\"content\" role=\"main\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 text-center\">\r\n                <h1 class=\"title\">\r\n                    Abstract Syntax Tree <br> ( Linea, Columna ) Tipo\r\n                </h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 text-center\" id=\"graph\">\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<br><br>\r\n<br><br>","import { Component, ViewEncapsulation } from '@angular/core';\r\n// Imports para el parser\r\nimport { Environment } from './parser/Symbol/Environment';\r\nimport { Function } from './parser/Instruction/Function';\r\nimport { _Console } from './parser/Util/Salida';\r\n// Imports para los reportes\r\nimport { Plotter } from './parser/Report/plotter';\r\nimport { Table } from './parser/Report/Table';\r\n// Import para el servicio\r\nimport { DotService } from '../../services/dot.service';\r\n// Import para las alertas\r\nimport Swal from 'sweetalert2';\r\n// Imports para los iconos\r\nimport {\r\n  faCoffee,\r\n  faPencilRuler,\r\n  faGlobe,\r\n  faFileAlt,\r\n  faLanguage,\r\n  faEraser,\r\n  faSpinner,\r\n  faList,\r\n  faFile,\r\n  faExternalLinkAlt,\r\n  faFileDownload,\r\n  faPlay,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { errores } from './parser/Errores';\r\nimport { _Optimizer } from './parser/Optimizer/Optimizer';\r\nimport { Rule } from './parser/Optimizer/Rule';\r\n\r\ndeclare var require: any;\r\nconst parserXML = require('./parser/Grammar/XmlGrammarASC.js');\r\n\r\n@Component({\r\n  selector: 'editor-root',\r\n  templateUrl: './editor.component.html',\r\n  styleUrls: ['./editor.component.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class EditorComponent {\r\n  // Variables\r\n  title = 'Compi2_Junio';\r\n  entradaXml = '<helloworld>\\n</helloworld>';\r\n  entradaXpath = '/helloworld';\r\n  salida = 'TytusX Output: \\n\\n';\r\n  ast: any;\r\n  reglas: Array<Rule>;\r\n  env: Environment;\r\n  flag: boolean;\r\n\r\n  // Iconos\r\n  faSpinner = faSpinner;\r\n  faCoffee = faCoffee;\r\n  faPencilRuler = faPencilRuler;\r\n  faGlobe = faGlobe;\r\n  faFileAlt = faFileAlt;\r\n  faLanguage = faLanguage;\r\n  faEraser = faEraser;\r\n  faList = faList;\r\n  faFile = faFile;\r\n  faExternalLinkAlt = faExternalLinkAlt;\r\n  faFileDownload = faFileDownload;\r\n  faPlay = faPlay;\r\n\r\n  constructor(private dotService: DotService) {}\r\n  ngOnInit() {\r\n    this.clean();\r\n  }\r\n\r\n  // cleanText(){\r\n  //   this.consulta = '';\r\n  //   this.salida = '[TytusX] Output: \\n\\n';\r\n  //   this.entrada = '';\r\n  // }\r\n  // Metodos\r\n  clean() {\r\n    this.ast = null;\r\n    this.env = null;\r\n    this.salida = '[Grupo18_TitusX]Output: \\n\\n';\r\n    _Console.salida = '';\r\n    _Console.count = 0;\r\n    _Console.labels = 0;\r\n    _Console.stackPointer = 0;\r\n    _Console.heapPointer = 0;\r\n    _Console.symbols = new Map();\r\n    errores.length = 0;\r\n    this.flag = true;\r\n  }\r\n\r\n  cOutput(body: string) {\r\n    // Muestra el encabezado\r\n    this.salida = '#include <stdio.h> \\n\\n';\r\n    this.salida += 'float Heap[16384];\\n';\r\n    this.salida += 'float Stack[16384]; \\n';\r\n    this.salida += 'float p; \\n';\r\n    this.salida += 'float h; \\n';\r\n    this.salida += 'float ';\r\n    for (let index = 0; index < _Console.count; index++) {\r\n      if (index > 0 && index % 8 == 0) {\r\n        this.salida = this.salida.substring(0, this.salida.length - 2);\r\n        this.salida += ';\\nfloat ';\r\n      }\r\n      this.salida += 't' + index + ', ';\r\n    }\r\n    this.salida =\r\n      _Console.count != 0\r\n        ? this.salida.substring(0, this.salida.length - 2)\r\n        : this.salida + 't0';\r\n    this.salida += ';\\n\\n';\r\n    this.salida += _Console.salida;\r\n    this.salida += 'void main() {\\n';\r\n    this.salida += body;\r\n    this.salida += '\\nreturn;\\n';\r\n    this.salida += '}\\n\\n';\r\n  }\r\n\r\n  // onFileSelected(event) {\r\n  //   const file: File = event.target.files[0];\r\n  //   if (file) {\r\n  //     var reader = new FileReader();\r\n  //     Swal.fire({\r\n  //       title: '¡Carga Correcta! ¿En que area de texto desea cargar?',\r\n  //       showDenyButton: true,\r\n  //       showCancelButton: true,\r\n  //       confirmButtonText: `Area 1`,\r\n  //       denyButtonText: `Area 2`,\r\n  //       confirmButtonColor: 'rgb(8, 101, 104)',\r\n  //       background: 'black',\r\n  //       icon: 'info'\r\n  //     }).then((result) => {\r\n  //       if (result.isConfirmed) {\r\n  //         reader.onload = () => {\r\n  //           this.entrada = reader.result.toString();\r\n  //         };\r\n  //         reader.readAsText(file);\r\n  //       }\r\n  //       else if (result.isDenied) {\r\n  //         reader.onload = () => {\r\n  //           this.consulta = reader.result.toString();\r\n  //         };\r\n  //         reader.readAsText(file);\r\n  //       }\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  // saveFile() {\r\n  //   var reader = new FileReader();\r\n  //   Swal.fire({\r\n  //     title: '¿Que area de texto desea descargar?',\r\n  //     showDenyButton: true,\r\n  //     showCancelButton: true,\r\n  //     confirmButtonText: `Area 1`,\r\n  //     denyButtonText: `Area 2`,\r\n  //     confirmButtonColor: 'rgb(8, 101, 104)',\r\n  //     background: 'black',\r\n  //     icon: 'info'\r\n  //   }).then((result) => {\r\n  //     if (result.isConfirmed) {\r\n  //       const blob = new Blob([this.entrada], { type: 'text/txt' });\r\n  //       const url = window.URL.createObjectURL(blob);\r\n  //       var a = document.createElement(\"a\");\r\n  //       a.href = url;\r\n  //       a.download = \"TytusX.txt\";\r\n  //       // start download\r\n  //       a.click();\r\n  //     }\r\n  //     else if (result.isDenied) {\r\n  //       const blob = new Blob([this.consulta], { type: 'text/txt' });\r\n  //       const url = window.URL.createObjectURL(blob);\r\n  //       var a = document.createElement(\"a\");\r\n  //       a.href = url;\r\n  //       a.download = \"TytusX.txt\";\r\n  //       // start download\r\n  //       a.click();\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  executeOpt(entrada: string) {\r\n    // try {\r\n    //   this.ast = optimizer.parse(entrada);\r\n    //   let env = new _Optimizer();\r\n    //   try {\r\n    //     for (const instr of this.ast[0]) {\r\n    //       instr.regla1(env);\r\n    //     }\r\n    //   } catch (e) {\r\n    //     console.log(e);\r\n    //   }\r\n    //   this.cOutput(env.salida);\r\n    //   this.ast = optimizer.parse(this.salida);\r\n    //   this.reglas = env.reglas;\r\n    //   env = new _Optimizer();\r\n    //   env.reglas = this.reglas;\r\n    //   try {\r\n    //     for (const instr of this.ast[0]) {\r\n    //       instr.regla2(env);\r\n    //     }\r\n    //   } catch (e) {\r\n    //     console.log(e);\r\n    //   }\r\n    //   this.cOutput(env.salida);\r\n    //   this.ast = optimizer.parse(this.salida);\r\n    //   this.reglas = env.reglas;\r\n    //   env = new _Optimizer();\r\n    //   env.reglas = this.reglas;\r\n    //   try {\r\n    //     for (const instr of this.ast[0]) {\r\n    //       instr.regla3(env);\r\n    //     }\r\n    //   } catch (e) {\r\n    //     console.log(e);\r\n    //   }\r\n    //   this.cOutput(env.salida);\r\n    //   this.ast = optimizer.parse(this.salida);\r\n    //   this.reglas = env.reglas;\r\n    //   env = new _Optimizer();\r\n    //   env.reglas = this.reglas;\r\n    //   try {\r\n    //     for (const instr of this.ast[0]) {\r\n    //       instr.regla4(env);\r\n    //     }\r\n    //   } catch (e) {\r\n    //     console.log(e);\r\n    //   }\r\n    //   this.cOutput(env.salida);\r\n    //   this.ast = optimizer.parse(this.salida);\r\n    //   this.reglas = env.reglas;\r\n    //   env = new _Optimizer();\r\n    //   env.reglas = this.reglas;\r\n    //   try {\r\n    //     for (const instr of this.ast[0]) {\r\n    //       instr.regla5(env);\r\n    //     }\r\n    //   } catch (e) {\r\n    //     console.log(e);\r\n    //   }\r\n    //   this.reglas = env.reglas;\r\n    //   Swal.fire({\r\n    //     title: 'Cool!',\r\n    //     text: 'Su codigo intermedio se ha optimizado correctamente...',\r\n    //     icon: 'success',\r\n    //     confirmButtonText: 'Entendido',\r\n    //     confirmButtonColor: 'rgb(8, 101, 104)',\r\n    //     background: 'black',\r\n    //   }).then(() => {\r\n    //     this.cOutput(env.salida);\r\n    //   });\r\n    // } catch (e) {\r\n    //   console.log(e);\r\n    //   Swal.fire({\r\n    //     title: 'Error',\r\n    //     text: 'Ocurrieron errores en la optimizacion...',\r\n    //     icon: 'error',\r\n    //     confirmButtonText: 'Entendido',\r\n    //     confirmButtonColor: 'rgb(8, 101, 104)',\r\n    //     background: 'black',\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  optimizar() {\r\n    // Swal.fire({\r\n    //   title: 'En donde se encuentra el codigo a optimizar?',\r\n    //   showDenyButton: true,\r\n    //   showCancelButton: true,\r\n    //   confirmButtonText: `Entrada`,\r\n    //   denyButtonText: `Salida`,\r\n    //   confirmButtonColor: 'rgb(8, 101, 104)',\r\n    //   background: 'black',\r\n    //   icon: 'info',\r\n    // }).then((result) => {\r\n    //   if (result.isConfirmed) this.executeOpt(this.entrada.toString());\r\n    //   else if (result.isDenied) this.executeOpt(this.salida.toString());\r\n    // });\r\n  }\r\n  ejecutarXmlAsc() {\r\n    this.clean();\r\n try {\r\n      this.ast = parserXML.parse(this.entradaXml.toString());\r\n      console.log(this.ast);\r\n    } catch (e) {\r\n      console.error(e.message);\r\n    }\r\n    this.flag = false;\r\n  }\r\n\r\n  ejecutar() {\r\n    // this.clean();\r\n    // try {\r\n    //   this.ast = parserXML.parse(this.entradaXml.toString());\r\n    //   console.log(this.ast);\r\n    // } catch (e) {\r\n    //   console.error(e.message);\r\n    // }\r\n    // this.flag = false;\r\n    // try {\r\n    //   this.ast = parserXML.parse(this.entradaXml.toString());\r\n    //   console.log(this.ast);\r\n    // } catch (e) {\r\n    //   console.error(e.message);\r\n    // }\r\n    // this.flag = false;\r\n    // try {\r\n    //   this.ast = parser.parse(this.entradaXml.toString());\r\n    //   this.env = new Environment(null);\r\n    //   for (const instr of this.ast) {\r\n    //     try {\r\n    //       if (instr instanceof Function) instr.execute(this.env);\r\n    //     } catch (error) {\r\n    //       console.log(error);\r\n    //     }\r\n    //   }\r\n    //   for (const instr of this.ast) {\r\n    //     if (instr instanceof Function || isString(instr)) continue;\r\n    //     try {\r\n    //       instr.execute(this.env);\r\n    //       // TODO validar return break continue fuera de ciclos\r\n    //     } catch (error) {\r\n    //       console.log(error);\r\n    //     }\r\n    //   }\r\n    //   if (errores.length == 0) {\r\n    //     // Muestra el resultado en la pagina\r\n    //     this.salida += _Console.salida;\r\n    //   } else {\r\n    //     if (errores.length != 0) {\r\n    //       errores.forEach((error) => {\r\n    //         this.salida +=\r\n    //           'Error ' +\r\n    //           error.getTipo() +\r\n    //           ' (linea: ' +\r\n    //           error.getLinea() +\r\n    //           ', columna: ' +\r\n    //           error.getColumna() +\r\n    //           '): ' +\r\n    //           error.getDescripcion() +\r\n    //           '.  \\n';\r\n    //       });\r\n    //     }\r\n    //   }\r\n    // } catch (error) {\r\n    //   console.log(error);\r\n    // }\r\n    // this.flag = false;\r\n  }\r\n\r\n  translate() {\r\n    // this.clean();\r\n    // try {\r\n    //   this.ast = parser.parse(this.entrada.toString());\r\n    //   this.env = new Environment(null);\r\n    //   this.salida = '';\r\n    //   try {\r\n    //     for (const instr of this.ast) {\r\n    //       this.salida += instr.translate(this.env);\r\n    //     }\r\n    //   } catch (e) {\r\n    //     console.log(e);\r\n    //   }\r\n    //   if (errores.length == 0) {\r\n    //     this.cOutput(this.salida);\r\n    //   } else {\r\n    //     if (errores.length != 0) {\r\n    //       errores.forEach((error) => {\r\n    //         this.salida +=\r\n    //           'Error ' +\r\n    //           error.getTipo() +\r\n    //           ' (linea: ' +\r\n    //           error.getLinea() +\r\n    //           ', columna: ' +\r\n    //           error.getColumna() +\r\n    //           '): ' +\r\n    //           error.getDescripcion() +\r\n    //           '.  \\n';\r\n    //       });\r\n    //     }\r\n    //   }\r\n    // } catch (error) {\r\n    //   console.log(error);\r\n    // }\r\n    // this.flag = false;\r\n    // _Console.showSystem();\r\n  }\r\n\r\n  printAst() {\r\n    if (this.flag) {\r\n      Swal.fire({\r\n        title: 'Oops...',\r\n        text: 'No se ha analizado el codigo aun',\r\n        icon: 'error',\r\n        confirmButtonText: 'Entendido',\r\n        confirmButtonColor: 'rgb(8, 101, 104)',\r\n        background: 'black',\r\n      });\r\n    } else if (errores.length != 0) {\r\n      Swal.fire({\r\n        title: 'Oops...!',\r\n        text: 'Se encontraron errores en su codigo, no puede graficar',\r\n        icon: 'error',\r\n        confirmButtonText: 'Entendido',\r\n        confirmButtonColor: 'rgb(8, 101, 104)',\r\n        background: 'black',\r\n      });\r\n    } else {\r\n      // alert(new Plotter().makeDot(this.ast));\r\n      //return;\r\n      this.dotService.setDot(new Plotter().makeDot(this.ast));\r\n      window.open('/ast');\r\n      return;\r\n    }\r\n  }\r\n\r\n  tokenTable() {\r\n    if (this.flag) {\r\n      Swal.fire({\r\n        title: 'Oops...',\r\n        text: 'No se ha analizado el codigo aun',\r\n        icon: 'error',\r\n        confirmButtonText: 'Entendido',\r\n        confirmButtonColor: 'rgb(8, 101, 104)',\r\n        background: 'black',\r\n      });\r\n    } else if (_Console.symbols.size == 0) {\r\n      Swal.fire({\r\n        title: 'Oops...',\r\n        text: 'No se encontro ninguna variable o funcion guardada',\r\n        icon: 'error',\r\n        confirmButtonText: 'Entendido',\r\n        confirmButtonColor: 'rgb(8, 101, 104)',\r\n        background: 'black',\r\n      });\r\n    } else if (errores.length != 0) {\r\n      Swal.fire({\r\n        title: 'Oops...!',\r\n        text: 'Se encontraron errores en su codigo, no puede mostrar tabla de variables',\r\n        icon: 'error',\r\n        confirmButtonText: 'Entendido',\r\n        confirmButtonColor: 'rgb(8, 101, 104)',\r\n        background: 'black',\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        title: 'Tabla de Simbolos',\r\n        html: new Table().symbols(_Console.symbols),\r\n        confirmButtonText: 'Entendido',\r\n        confirmButtonColor: 'rgb(8, 101, 104)',\r\n        background: 'black',\r\n        width: 800,\r\n      });\r\n    }\r\n  }\r\n\r\n  optTable() {\r\n    if (this.reglas == undefined) {\r\n      Swal.fire({\r\n        title: 'Oops...',\r\n        text: 'No se ha analizado el codigo aun',\r\n        icon: 'error',\r\n        confirmButtonText: 'Entendido',\r\n        confirmButtonColor: 'rgb(8, 101, 104)',\r\n        background: 'black',\r\n      });\r\n    } else if (this.reglas.length == 0) {\r\n      Swal.fire({\r\n        title: 'Cool!',\r\n        text: 'No se encontraron optimizaciones en su codigo',\r\n        icon: 'success',\r\n        confirmButtonText: 'Entendido',\r\n        confirmButtonColor: 'rgb(8, 101, 104)',\r\n        background: 'black',\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        title: 'Tabla de Reglas',\r\n        html: new Table().rules(this.reglas),\r\n        confirmButtonText: 'Entendido',\r\n        confirmButtonColor: 'rgb(8, 101, 104)',\r\n        background: 'black',\r\n        width: 800,\r\n      });\r\n    }\r\n  }\r\n\r\n  errorTable() {\r\n    if (this.flag) {\r\n      Swal.fire({\r\n        title: 'Oops...',\r\n        text: 'No se ha analizado el codigo aun',\r\n        icon: 'error',\r\n        confirmButtonText: 'Entendido',\r\n        confirmButtonColor: 'rgb(8, 101, 104)',\r\n        background: 'black',\r\n      });\r\n    } else if (errores.length == 0) {\r\n      Swal.fire({\r\n        title: 'Cool!',\r\n        text: 'No se encontraron errores en su codigo',\r\n        icon: 'success',\r\n        confirmButtonText: 'Entendido',\r\n        confirmButtonColor: 'rgb(8, 101, 104)',\r\n        background: 'black',\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        title: 'Tabla de Errores',\r\n        html: new Table().errors(errores),\r\n        confirmButtonText: 'Entendido',\r\n        confirmButtonColor: 'rgb(8, 101, 104)',\r\n        background: 'black',\r\n        width: 800,\r\n      });\r\n    }\r\n  }\r\n\r\n  newXML() {\r\n    //New File\r\n    this.entradaXml = '';\r\n  }\r\n\r\n  newXPath() {\r\n    //New File\r\n    this.entradaXpath = '';\r\n  }\r\n\r\n  openXML() {\r\n    //Open file\r\n    let fileSelector = document.createElement('input');\r\n    fileSelector.setAttribute('type', 'file');\r\n    fileSelector.onchange = (e) => {\r\n      let file = fileSelector.files[0];\r\n      if (!file) return false;\r\n      let reader = new FileReader();\r\n      reader.addEventListener('load', (event) => {\r\n        this.entradaXml = event.target.result.toString();\r\n      });\r\n      reader.readAsText(file);\r\n    };\r\n\r\n    fileSelector.click();\r\n    return false;\r\n  }\r\n\r\n  openXPath() {\r\n    //Open file\r\n    let fileSelector = document.createElement('input');\r\n    fileSelector.setAttribute('type', 'file');\r\n    fileSelector.onchange = (e) => {\r\n      let file = fileSelector.files[0];\r\n      if (!file) return false;\r\n      let reader = new FileReader();\r\n      reader.addEventListener('load', (event) => {\r\n        this.entradaXpath = event.target.result.toString();\r\n      });\r\n      reader.readAsText(file);\r\n    };\r\n\r\n    fileSelector.click();\r\n    return false;\r\n  }\r\n\r\n  saveXML() {\r\n    var element = document.createElement('a');\r\n    element.setAttribute(\r\n      'href',\r\n      'data:text/plain;charset=utf-8,' + encodeURIComponent(this.entradaXml)\r\n    );\r\n    element.setAttribute('download', 'Compi2.xml');\r\n\r\n    element.style.display = 'none';\r\n    document.body.appendChild(element);\r\n\r\n    element.click();\r\n\r\n    document.body.removeChild(element);\r\n  }\r\n\r\n  saveXPath() {\r\n    var element = document.createElement('a');\r\n    element.setAttribute(\r\n      'href',\r\n      'data:text/plain;charset=utf-8,' + encodeURIComponent(this.entradaXpath)\r\n    );\r\n    element.setAttribute('download', 'Compi2.xpath');\r\n\r\n    element.style.display = 'none';\r\n    document.body.appendChild(element);\r\n\r\n    element.click();\r\n\r\n    document.body.removeChild(element);\r\n  }\r\n\r\n  clearConsole() {\r\n    this.salida = '[Grupo18_TitusX]Output: \\n\\n';\r\n  }\r\n}\r\n","<!-- Body -->\r\n<div class=\"content\" role=\"main\">\r\n  <div class=\"container-fluid\">\r\n    <!-- Botones de Accion -->\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div ngbDropdown class=\"d-inline-block\">\r\n          <button\r\n            class=\"btn btn-dark\"\r\n            style=\"background-color: rgb(8, 101, 104)\"\r\n            id=\"dropdownBasic1\"\r\n            ngbDropdownToggle\r\n          >\r\n            <fa-icon [icon]=\"faList\"></fa-icon>\r\n            XML\r\n          </button>\r\n          <div\r\n            ngbDropdownMenu\r\n            aria-labelledby=\"dropdownBasic1\"\r\n            style=\"background-color: rgb(8, 101, 104)\"\r\n            class=\"btn btn-info dropdown-toggle\"\r\n          >\r\n            <button\r\n              (click)=\"ejecutarXmlAsc()\"\r\n              type=\"button\"\r\n              class=\"dropdown-item\"\r\n            >\r\n              <fa-icon [icon]=\"faPlay\"></fa-icon>\r\n              Ejecutar Ascendente\r\n            </button>\r\n            <button (click)=\"ejecutar()\" type=\"button\" class=\"dropdown-item\">\r\n              <fa-icon [icon]=\"faPlay\"></fa-icon>\r\n              Ejecutar Descendente\r\n            </button>\r\n            <button (click)=\"newXML()\" type=\"button\" class=\"dropdown-item\">\r\n              <fa-icon [icon]=\"faFile\"></fa-icon>\r\n              Nuevo\r\n            </button>\r\n            <button (click)=\"openXML()\" type=\"button\" class=\"dropdown-item\">\r\n              <fa-icon [icon]=\"faExternalLinkAlt\"></fa-icon>\r\n              Abrir\r\n            </button>\r\n            <button (click)=\"saveXML()\" type=\"button\" class=\"dropdown-item\">\r\n              <fa-icon [icon]=\"faFileDownload\"></fa-icon>\r\n              Guardar\r\n            </button>\r\n          </div>\r\n        </div>\r\n        &nbsp;\r\n        <div ngbDropdown class=\"d-inline-block\">\r\n          <button\r\n            class=\"btn btn-dark\"\r\n            style=\"background-color: rgb(8, 101, 104)\"\r\n            id=\"dropdownBasic1\"\r\n            ngbDropdownToggle\r\n          >\r\n            <fa-icon [icon]=\"faList\"></fa-icon>\r\n            XPath\r\n          </button>\r\n          <div\r\n            ngbDropdownMenu\r\n            aria-labelledby=\"dropdownBasic1\"\r\n            style=\"background-color: rgb(8, 101, 104)\"\r\n            class=\"btn btn-info dropdown-toggle\"\r\n          >\r\n            <button (click)=\"ejecutar()\" type=\"button\" class=\"dropdown-item\">\r\n              <fa-icon [icon]=\"faPlay\"></fa-icon>\r\n              Ejecutar Ascendente\r\n            </button>\r\n            <button (click)=\"ejecutar()\" type=\"button\" class=\"dropdown-item\">\r\n              <fa-icon [icon]=\"faPlay\"></fa-icon>\r\n              Ejecutar Descendente\r\n            </button>\r\n            <button (click)=\"newXPath()\" type=\"button\" class=\"dropdown-item\">\r\n              <fa-icon [icon]=\"faFile\"></fa-icon>\r\n              Nuevo\r\n            </button>\r\n            <button (click)=\"openXPath()\" type=\"button\" class=\"dropdown-item\">\r\n              <fa-icon [icon]=\"faExternalLinkAlt\"></fa-icon>\r\n              Abrir\r\n            </button>\r\n            <button (click)=\"saveXPath()\" type=\"button\" class=\"dropdown-item\">\r\n              <fa-icon [icon]=\"faFileDownload\"></fa-icon>\r\n              Guardar\r\n            </button>\r\n          </div>\r\n        </div>\r\n        &nbsp;\r\n        <button\r\n          (click)=\"translate()\"\r\n          type=\"button\"\r\n          class=\"btn btn-dark\"\r\n          style=\"background-color: rgb(8, 101, 104)\"\r\n        >\r\n          <fa-icon [icon]=\"faGlobe\"></fa-icon>\r\n          XQuery\r\n        </button>\r\n        &nbsp;\r\n        <button\r\n          (click)=\"optimizar()\"\r\n          type=\"button\"\r\n          class=\"btn btn-dark\"\r\n          style=\"background-color: rgb(8, 101, 104)\"\r\n        >\r\n          <fa-icon [icon]=\"faSpinner\"></fa-icon>\r\n          Optimizar\r\n        </button>\r\n        &nbsp;\r\n        <div ngbDropdown class=\"d-inline-block\">\r\n          <button\r\n            class=\"btn btn-dark\"\r\n            style=\"background-color: rgb(8, 101, 104)\"\r\n            id=\"dropdownBasic1\"\r\n            ngbDropdownToggle\r\n          >\r\n            <fa-icon [icon]=\"faFileAlt\"></fa-icon>\r\n            Reportes\r\n          </button>\r\n          <div\r\n            ngbDropdownMenu\r\n            aria-labelledby=\"dropdownBasic1\"\r\n            style=\"background-color: rgb(8, 101, 104)\"\r\n            class=\"btn btn-info dropdown-toggle\"\r\n          >\r\n            <button (click)=\"printAst()\" type=\"button\" class=\"dropdown-item\">\r\n              <fa-icon [icon]=\"faPencilRuler\"></fa-icon>\r\n              AST\r\n            </button>\r\n            <button (click)=\"printAst()\" type=\"button\" class=\"dropdown-item\">\r\n              <fa-icon [icon]=\"faPencilRuler\"></fa-icon>\r\n              CST\r\n            </button>\r\n            <button (click)=\"printAst()\" type=\"button\" class=\"dropdown-item\">\r\n              <fa-icon [icon]=\"faPencilRuler\"></fa-icon>\r\n              DAG\r\n            </button>\r\n            <button (click)=\"tokenTable()\" type=\"button\" class=\"dropdown-item\">\r\n              <fa-icon [icon]=\"faLanguage\"></fa-icon>\r\n              Tabla de Simbolos\r\n            </button>\r\n            <button (click)=\"errorTable()\" type=\"button\" class=\"dropdown-item\">\r\n              <fa-icon [icon]=\"faEraser\"></fa-icon>\r\n              Tabla de Errores\r\n            </button>\r\n            <button (click)=\"optTable()\" type=\"button\" class=\"dropdown-item\">\r\n              <fa-icon [icon]=\"faSpinner\"></fa-icon>\r\n              Tabla de Optimizacion\r\n            </button>\r\n          </div>\r\n        </div>\r\n        &nbsp;\r\n        <button\r\n          (click)=\"clearConsole()\"\r\n          type=\"button\"\r\n          class=\"btn btn-dark\"\r\n          style=\"background-color: rgb(8, 101, 104)\"\r\n        >\r\n          <fa-icon [icon]=\"faEraser\"></fa-icon>\r\n          Limpiar Consola\r\n        </button>\r\n        &nbsp;\r\n      </div>\r\n    </div>\r\n    <!-- Editores -->\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"terminal\">\r\n          <h2 class=\"term-title\">XML</h2>\r\n          <ngx-codemirror\r\n            [(ngModel)]=\"entradaXml\"\r\n            [options]=\"{\r\n              lineNumbers: true,\r\n              theme: 'material-ocean',\r\n              mode: 'xml'\r\n            }\"\r\n          ></ngx-codemirror>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"terminal\" id=\"output\">\r\n          <h2 class=\"term-title\">XPath</h2>\r\n          <ngx-codemirror\r\n            [(ngModel)]=\"entradaXpath\"\r\n            [options]=\"{\r\n              lineNumbers: true,\r\n              theme: 'material-ocean'\r\n            }\"\r\n          ></ngx-codemirror>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"terminal\">\r\n          <h2 class=\"term-title\">Result</h2>\r\n          <ngx-codemirror\r\n            disabled\r\n            [(ngModel)]=\"salida\"\r\n            [options]=\"{\r\n              lineNumbers: false,\r\n              theme: 'blackboard'\r\n            }\"\r\n          ></ngx-codemirror>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 text-center\" id=\"graph\"></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div id=\"temporal\" style=\"display: none\"></div>\r\n","export abstract class Nodo {\r\n  public line: number;\r\n  public column: number;\r\n  public name: string;\r\n  public type: string;\r\n  public listaNodos: Array<Nodo>;\r\n\r\n  constructor(name: string, type: string, line: number, column: number) {\r\n    this.name = name;\r\n    this.type = type;\r\n    this.line = line;\r\n    this.column = column;\r\n    this.listaNodos = new Array();\r\n  }\r\n\r\n  public abstract addHijo(nodo: any): void;\r\n\r\n  public abstract plotCst(count: number): string;\r\n\r\n  public abstract plotAst(count: number): string;\r\n}\r\n","export class Error_{\r\n    \r\n    constructor(private linea : number, private columna: number, private tipo : string, private mensaje : string){\r\n\r\n    }\r\n\r\n    getLinea() { return this.linea }\r\n    getColumna() { return this.columna }\r\n    getTipo() { return this.tipo }\r\n    getDescripcion() { return this.mensaje }\r\n\r\n    htmlRow() : string {\r\n        let result = \"<td>\"+this.tipo+\"</td>\";\r\n        result += \"<td>\"+this.mensaje+\"</td>\";\r\n        result += \"<td>\"+this.linea+\"</td>\";\r\n        result += \"<td>\"+this.columna+\"</td>\";\r\n        return result;\r\n    }\r\n}","import { Error_ } from \"./Error\";\r\n\r\nexport let errores : Array<Error_> = new Array();","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar XmlGrammarASC = (function () {\r\n  var o = function (k, v, o, l) {\r\n      for (o = o || {}, l = k.length; l--; o[k[l]] = v);\r\n      return o;\r\n    },\r\n    $V0 = [1, 5],\r\n    $V1 = [1, 6],\r\n    $V2 = [1, 12],\r\n    $V3 = [1, 13],\r\n    $V4 = [1, 14],\r\n    $V5 = [1, 15],\r\n    $V6 = [6, 10, 14],\r\n    $V7 = [10, 14],\r\n    $V8 = [1, 23],\r\n    $V9 = [1, 29],\r\n    $Va = [11, 12];\r\n  var parser = {\r\n    trace: function trace() {},\r\n    yy: {},\r\n    symbols_: {\r\n      error: 2,\r\n      S: 3,\r\n      tk_xmldec: 4,\r\n      I: 5,\r\n      EOF: 6,\r\n      OTAG: 7,\r\n      CONTENIDO: 8,\r\n      CTAG: 9,\r\n      tk_starttag: 10,\r\n      tk_id: 11,\r\n      tk_endtag: 12,\r\n      ARGUMENTOS: 13,\r\n      tk_valin: 14,\r\n      tk_igual: 15,\r\n      tk_tagval: 16,\r\n      tk_closetag: 17,\r\n      $accept: 0,\r\n      $end: 1,\r\n    },\r\n    terminals_: {\r\n      2: \"error\",\r\n      4: \"tk_xmldec\",\r\n      6: \"EOF\",\r\n      10: \"tk_starttag\",\r\n      11: \"tk_id\",\r\n      12: \"tk_endtag\",\r\n      14: \"tk_valin\",\r\n      15: \"tk_igual\",\r\n      16: \"tk_tagval\",\r\n      17: \"tk_closetag\",\r\n    },\r\n    productions_: [\r\n      0,\r\n      [3, 3],\r\n      [3, 2],\r\n      [5, 3],\r\n      [5, 2],\r\n      [7, 3],\r\n      [7, 4],\r\n      [7, 3],\r\n      [7, 4],\r\n      [13, 4],\r\n      [13, 3],\r\n      [8, 2],\r\n      [8, 1],\r\n      [9, 4],\r\n      [9, 4],\r\n    ],\r\n    performAction: function anonymous(\r\n      yytext,\r\n      yyleng,\r\n      yylineno,\r\n      yy,\r\n      yystate /* action[1] */,\r\n      $$ /* vstack */,\r\n      _$ /* lstack */\r\n    ) {\r\n      /* this == yyval */\r\n\r\n      var $0 = $$.length - 1;\r\n      switch (yystate) {\r\n        case 1:\r\n          var s = new NodoXML(\r\n            \"S\",\r\n            \"S\",\r\n            +yylineno + 1,\r\n            +_$[$0 - 2].first_column + 1,\r\n            null\r\n          );\r\n          var dec = new NodoXML(\r\n            \"DEC\",\r\n            \"DEC\",\r\n            +yylineno + 1,\r\n            +_$[$0 - 2].first_column + 1,\r\n            $$[$0 - 2]\r\n          );\r\n          // s.addHijo(dec);\r\n          // s.addHijo($$[$0-1]);\r\n          return s;\r\n\r\n          break;\r\n        case 2:\r\n          var s = new NodoXML(\r\n            \"S\",\r\n            \"S\",\r\n            +yylineno + 1,\r\n            +_$[$0 - 1].first_column + 1,\r\n            null\r\n          );\r\n          // s.addHijo($$[$0-1]);\r\n          return s;\r\n\r\n          break;\r\n        case 3:\r\n          var i = new NodoXML(\r\n            \"I\",\r\n            \"I\",\r\n            +yylineno + 1,\r\n            +_$[$0 - 2].first_column + 1,\r\n            null\r\n          );\r\n          i.addHijo($$[$0 - 2]);\r\n          i.addHijo($$[$0 - 1]);\r\n          i.addHijo($$[$0]);\r\n          this.$ = i;\r\n\r\n          break;\r\n        case 4:\r\n          var i = new NodoXML(\r\n            \"I\",\r\n            \"I\",\r\n            +yylineno + 1,\r\n            +_$[$0 - 1].first_column + 1,\r\n            null\r\n          );\r\n          i.addHijo($$[$0 - 1]);\r\n          i.addHijo($$[$0]);\r\n          this.$ = i;\r\n\r\n          break;\r\n        case 5:\r\n          this.$ = tag = new NodoXML(\r\n            $$[$0 - 2],\r\n            \"OTAG\",\r\n            +yylineno + 1,\r\n            +_$[$0 - 2].first_column + 1,\r\n            null\r\n          );\r\n\r\n          break;\r\n        case 6:\r\n          var tag = new NodoXML(\r\n            $$[$0 - 3],\r\n            \"OTAG\",\r\n            +yylineno + 1,\r\n            +_$[$0 - 3].first_column + 1,\r\n            null\r\n          );\r\n          tag.addHijo($$[$0 - 3]);\r\n          this.$ = tag;\r\n\r\n          break;\r\n      }\r\n    },\r\n    table: [\r\n      { 3: 1, 4: [1, 2], 5: 3, 7: 4, 10: $V0, 14: $V1 },\r\n      { 1: [3] },\r\n      { 5: 7, 7: 4, 10: $V0, 14: $V1 },\r\n      { 6: [1, 8] },\r\n      { 5: 11, 7: 4, 8: 9, 9: 10, 10: $V2, 14: $V3 },\r\n      { 11: $V4 },\r\n      { 11: $V5 },\r\n      { 6: [1, 16] },\r\n      { 1: [2, 2] },\r\n      { 5: 18, 7: 4, 9: 17, 10: $V2, 14: $V3 },\r\n      o($V6, [2, 4]),\r\n      o($V7, [2, 12]),\r\n      { 11: $V4, 17: [1, 19] },\r\n      { 11: $V5, 17: [1, 20] },\r\n      { 11: $V8, 12: [1, 21], 13: 22 },\r\n      { 11: $V8, 12: [1, 24], 13: 25 },\r\n      { 1: [2, 1] },\r\n      o($V6, [2, 3]),\r\n      o($V7, [2, 11]),\r\n      { 11: [1, 26] },\r\n      { 11: [1, 27] },\r\n      o($V7, [2, 5]),\r\n      { 11: $V9, 12: [1, 28] },\r\n      { 15: [1, 30] },\r\n      o($V7, [2, 7]),\r\n      { 11: $V9, 12: [1, 31] },\r\n      { 12: [1, 32] },\r\n      { 12: [1, 33] },\r\n      o($V7, [2, 6]),\r\n      { 15: [1, 34] },\r\n      { 16: [1, 35] },\r\n      o($V7, [2, 8]),\r\n      o($V6, [2, 13]),\r\n      o($V6, [2, 14]),\r\n      { 16: [1, 36] },\r\n      o($Va, [2, 10]),\r\n      o($Va, [2, 9]),\r\n    ],\r\n    defaultActions: { 8: [2, 2], 16: [2, 1] },\r\n    parseError: function parseError(str, hash) {\r\n      if (hash.recoverable) {\r\n        this.trace(str);\r\n      } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n      }\r\n    },\r\n    parse: function parse(input) {\r\n      var self = this,\r\n        stack = [0],\r\n        tstack = [],\r\n        vstack = [null],\r\n        lstack = [],\r\n        table = this.table,\r\n        yytext = \"\",\r\n        yylineno = 0,\r\n        yyleng = 0,\r\n        recovering = 0,\r\n        TERROR = 2,\r\n        EOF = 1;\r\n      var args = lstack.slice.call(arguments, 1);\r\n      var lexer = Object.create(this.lexer);\r\n      var sharedState = { yy: {} };\r\n      for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n          sharedState.yy[k] = this.yy[k];\r\n        }\r\n      }\r\n      lexer.setInput(input, sharedState.yy);\r\n      sharedState.yy.lexer = lexer;\r\n      sharedState.yy.parser = this;\r\n      if (typeof lexer.yylloc == \"undefined\") {\r\n        lexer.yylloc = {};\r\n      }\r\n      var yyloc = lexer.yylloc;\r\n      lstack.push(yyloc);\r\n      var ranges = lexer.options && lexer.options.ranges;\r\n      if (typeof sharedState.yy.parseError === \"function\") {\r\n        this.parseError = sharedState.yy.parseError;\r\n      } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n      }\r\n      function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n      }\r\n      _token_stack: var lex = function () {\r\n        var token;\r\n        token = lexer.lex() || EOF;\r\n        if (typeof token !== \"number\") {\r\n          token = self.symbols_[token] || token;\r\n        }\r\n        return token;\r\n      };\r\n      var symbol,\r\n        preErrorSymbol,\r\n        state,\r\n        action,\r\n        a,\r\n        r,\r\n        yyval = {},\r\n        p,\r\n        len,\r\n        newState,\r\n        expected;\r\n      while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n          action = this.defaultActions[state];\r\n        } else {\r\n          if (symbol === null || typeof symbol == \"undefined\") {\r\n            symbol = lex();\r\n          }\r\n          action = table[state] && table[state][symbol];\r\n        }\r\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\r\n          var errStr = \"\";\r\n          expected = [];\r\n          for (p in table[state]) {\r\n            if (this.terminals_[p] && p > TERROR) {\r\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\r\n            }\r\n          }\r\n          if (lexer.showPosition) {\r\n            errStr =\r\n              \"Parse error on line \" +\r\n              (yylineno + 1) +\r\n              \":\\n\" +\r\n              lexer.showPosition() +\r\n              \"\\nExpecting \" +\r\n              expected.join(\", \") +\r\n              \", got '\" +\r\n              (this.terminals_[symbol] || symbol) +\r\n              \"'\";\r\n          } else {\r\n            errStr =\r\n              \"Parse error on line \" +\r\n              (yylineno + 1) +\r\n              \": Unexpected \" +\r\n              (symbol == EOF\r\n                ? \"end of input\"\r\n                : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\r\n          }\r\n          this.parseError(errStr, {\r\n            text: lexer.match,\r\n            token: this.terminals_[symbol] || symbol,\r\n            line: lexer.yylineno,\r\n            loc: yyloc,\r\n            expected: expected,\r\n          });\r\n        }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n          throw new Error(\r\n            \"Parse Error: multiple actions possible at state: \" +\r\n              state +\r\n              \", token: \" +\r\n              symbol\r\n          );\r\n        }\r\n        switch (action[0]) {\r\n          case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n              yyleng = lexer.yyleng;\r\n              yytext = lexer.yytext;\r\n              yylineno = lexer.yylineno;\r\n              yyloc = lexer.yylloc;\r\n              if (recovering > 0) {\r\n                recovering--;\r\n              }\r\n            } else {\r\n              symbol = preErrorSymbol;\r\n              preErrorSymbol = null;\r\n            }\r\n            break;\r\n          case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n              first_line: lstack[lstack.length - (len || 1)].first_line,\r\n              last_line: lstack[lstack.length - 1].last_line,\r\n              first_column: lstack[lstack.length - (len || 1)].first_column,\r\n              last_column: lstack[lstack.length - 1].last_column,\r\n            };\r\n            if (ranges) {\r\n              yyval._$.range = [\r\n                lstack[lstack.length - (len || 1)].range[0],\r\n                lstack[lstack.length - 1].range[1],\r\n              ];\r\n            }\r\n            r = this.performAction.apply(\r\n              yyval,\r\n              [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack,\r\n              ].concat(args)\r\n            );\r\n            if (typeof r !== \"undefined\") {\r\n              return r;\r\n            }\r\n            if (len) {\r\n              stack = stack.slice(0, -1 * len * 2);\r\n              vstack = vstack.slice(0, -1 * len);\r\n              lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n          case 3:\r\n            return true;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n  };\r\n\r\n  let valDeclaration = \"\";\r\n  let valTag = \"\";\r\n  let valInside = \"\";\r\n\r\n  const { Error_ } = require(\"../Error\");\r\n  const { errores } = require(\"../Errores\");\r\n  const { NodoXML } = require(\"../Nodes/NodoXml\");\r\n  /* generated by jison-lex 0.3.4 */\r\n  var lexer = (function () {\r\n    var lexer = {\r\n      EOF: 1,\r\n\r\n      parseError: function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n          this.yy.parser.parseError(str, hash);\r\n        } else {\r\n          throw new Error(str);\r\n        }\r\n      },\r\n\r\n      // resets the lexer, sets new input\r\n      setInput: function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = \"\";\r\n        this.conditionStack = [\"INITIAL\"];\r\n        this.yylloc = {\r\n          first_line: 1,\r\n          first_column: 0,\r\n          last_line: 1,\r\n          last_column: 0,\r\n        };\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [0, 0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n      },\r\n\r\n      // consumes and returns one char from the input\r\n      input: function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n          this.yylineno++;\r\n          this.yylloc.last_line++;\r\n        } else {\r\n          this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n          this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n      },\r\n\r\n      // unshifts one char (or a string) into the input\r\n      unput: function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n          this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n          first_line: this.yylloc.first_line,\r\n          last_line: this.yylineno + 1,\r\n          first_column: this.yylloc.first_column,\r\n          last_column: lines\r\n            ? (lines.length === oldLines.length\r\n                ? this.yylloc.first_column\r\n                : 0) +\r\n              oldLines[oldLines.length - lines.length].length -\r\n              lines[0].length\r\n            : this.yylloc.first_column - len,\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n      },\r\n\r\n      // When called from action, caches matched text and appends it on next action\r\n      more: function () {\r\n        this._more = true;\r\n        return this;\r\n      },\r\n\r\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\n      reject: function () {\r\n        if (this.options.backtrack_lexer) {\r\n          this._backtrack = true;\r\n        } else {\r\n          return this.parseError(\r\n            \"Lexical error on line \" +\r\n              (this.yylineno + 1) +\r\n              \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" +\r\n              this.showPosition(),\r\n            {\r\n              text: \"\",\r\n              token: null,\r\n              line: this.yylineno,\r\n            }\r\n          );\r\n        }\r\n        return this;\r\n      },\r\n\r\n      // retain first n characters of the match\r\n      less: function (n) {\r\n        this.unput(this.match.slice(n));\r\n      },\r\n\r\n      // displays already matched input, i.e. for error messages\r\n      pastInput: function () {\r\n        var past = this.matched.substr(\r\n          0,\r\n          this.matched.length - this.match.length\r\n        );\r\n        return (\r\n          (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\")\r\n        );\r\n      },\r\n\r\n      // displays upcoming input, i.e. for error messages\r\n      upcomingInput: function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n          next += this._input.substr(0, 20 - next.length);\r\n        }\r\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(\r\n          /\\n/g,\r\n          \"\"\r\n        );\r\n      },\r\n\r\n      // displays the character position where the lexing error occurred, i.e. for error messages\r\n      showPosition: function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n      },\r\n\r\n      // test the lexed token: return FALSE when not a match, otherwise return token\r\n      test_match: function (match, indexed_rule) {\r\n        var token, lines, backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n          // save context\r\n          backup = {\r\n            yylineno: this.yylineno,\r\n            yylloc: {\r\n              first_line: this.yylloc.first_line,\r\n              last_line: this.last_line,\r\n              first_column: this.yylloc.first_column,\r\n              last_column: this.yylloc.last_column,\r\n            },\r\n            yytext: this.yytext,\r\n            match: this.match,\r\n            matches: this.matches,\r\n            matched: this.matched,\r\n            yyleng: this.yyleng,\r\n            offset: this.offset,\r\n            _more: this._more,\r\n            _input: this._input,\r\n            yy: this.yy,\r\n            conditionStack: this.conditionStack.slice(0),\r\n            done: this.done,\r\n          };\r\n          if (this.options.ranges) {\r\n            backup.yylloc.range = this.yylloc.range.slice(0);\r\n          }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n          this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n          first_line: this.yylloc.last_line,\r\n          last_line: this.yylineno + 1,\r\n          first_column: this.yylloc.last_column,\r\n          last_column: lines\r\n            ? lines[lines.length - 1].length -\r\n              lines[lines.length - 1].match(/\\r?\\n?/)[0].length\r\n            : this.yylloc.last_column + match[0].length,\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n          this.yylloc.range = [this.offset, (this.offset += this.yyleng)];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(\r\n          this,\r\n          this.yy,\r\n          this,\r\n          indexed_rule,\r\n          this.conditionStack[this.conditionStack.length - 1]\r\n        );\r\n        if (this.done && this._input) {\r\n          this.done = false;\r\n        }\r\n        if (token) {\r\n          return token;\r\n        } else if (this._backtrack) {\r\n          // recover context\r\n          for (var k in backup) {\r\n            this[k] = backup[k];\r\n          }\r\n          return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n      },\r\n\r\n      // return next match in input\r\n      next: function () {\r\n        if (this.done) {\r\n          return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n          this.done = true;\r\n        }\r\n\r\n        var token, match, tempMatch, index;\r\n        if (!this._more) {\r\n          this.yytext = \"\";\r\n          this.match = \"\";\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n          tempMatch = this._input.match(this.rules[rules[i]]);\r\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n            match = tempMatch;\r\n            index = i;\r\n            if (this.options.backtrack_lexer) {\r\n              token = this.test_match(tempMatch, rules[i]);\r\n              if (token !== false) {\r\n                return token;\r\n              } else if (this._backtrack) {\r\n                match = false;\r\n                continue; // rule action called reject() implying a rule MISmatch.\r\n              } else {\r\n                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                return false;\r\n              }\r\n            } else if (!this.options.flex) {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (match) {\r\n          token = this.test_match(match, rules[index]);\r\n          if (token !== false) {\r\n            return token;\r\n          }\r\n          // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n          return false;\r\n        }\r\n        if (this._input === \"\") {\r\n          return this.EOF;\r\n        } else {\r\n          return this.parseError(\r\n            \"Lexical error on line \" +\r\n              (this.yylineno + 1) +\r\n              \". Unrecognized text.\\n\" +\r\n              this.showPosition(),\r\n            {\r\n              text: \"\",\r\n              token: null,\r\n              line: this.yylineno,\r\n            }\r\n          );\r\n        }\r\n      },\r\n\r\n      // return next match that has a token\r\n      lex: function lex() {\r\n        var r = this.next();\r\n        if (r) {\r\n          return r;\r\n        } else {\r\n          return this.lex();\r\n        }\r\n      },\r\n\r\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\n      begin: function begin(condition) {\r\n        this.conditionStack.push(condition);\r\n      },\r\n\r\n      // pop the previously active lexer condition state off the condition stack\r\n      popState: function popState() {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n          return this.conditionStack.pop();\r\n        } else {\r\n          return this.conditionStack[0];\r\n        }\r\n      },\r\n\r\n      // produce the lexer rule set which is active for the currently active lexer condition state\r\n      _currentRules: function _currentRules() {\r\n        if (\r\n          this.conditionStack.length &&\r\n          this.conditionStack[this.conditionStack.length - 1]\r\n        ) {\r\n          return this.conditions[\r\n            this.conditionStack[this.conditionStack.length - 1]\r\n          ].rules;\r\n        } else {\r\n          return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n      },\r\n\r\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\n      topState: function topState(n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n          return this.conditionStack[n];\r\n        } else {\r\n          return \"INITIAL\";\r\n        }\r\n      },\r\n\r\n      // alias for begin(condition)\r\n      pushState: function pushState(condition) {\r\n        this.begin(condition);\r\n      },\r\n\r\n      // return the number of states currently on the stack\r\n      stateStackSize: function stateStackSize() {\r\n        return this.conditionStack.length;\r\n      },\r\n      options: { \"case-sensitive\": true },\r\n      performAction: function anonymous(\r\n        yy,\r\n        yy_,\r\n        $avoiding_name_collisions,\r\n        YY_START\r\n      ) {\r\n        var YYSTATE = YY_START;\r\n        switch ($avoiding_name_collisions) {\r\n          case 0:\r\n            this.begin(\"xmloptions\");\r\n            break;\r\n          case 1:\r\n            this.popState();\r\n            console.log(\"xmloptions: \" + valDeclaration);\r\n            yy_.yytext = valDeclaration;\r\n            valDeclaration = \"\";\r\n            return 4;\r\n\r\n            break;\r\n          case 2:\r\n            valDeclaration += yy_.yytext;\r\n            break;\r\n          case 3:\r\n            this.popState();\r\n            return 6;\r\n            break;\r\n          case 4:\r\n            this.begin(\"tagval1\");\r\n            break;\r\n          case 5:\r\n            this.popState();\r\n            console.log(\"valtag: \" + valTag);\r\n            yy_.yytext = valTag;\r\n            valTag = \"\";\r\n            return 16;\r\n\r\n            break;\r\n          case 6:\r\n            valTag += \"\\n\";\r\n            break;\r\n          case 7:\r\n            valTag += \"\\t\";\r\n            break;\r\n          case 8:\r\n            valTag += \"\\\\\";\r\n            break;\r\n          case 9:\r\n            valTag += \"\\r\";\r\n            break;\r\n          case 10:\r\n            valTag += '\"';\r\n            break;\r\n          case 11:\r\n            valTag += yy_.yytext;\r\n            break;\r\n          case 12:\r\n            this.begin(\"tagval2\");\r\n            break;\r\n          case 13:\r\n            this.popState();\r\n            console.log(\"valtag: \" + valTag);\r\n            yy_.yytext = valTag;\r\n            valTag = \"\";\r\n            return 16;\r\n\r\n            break;\r\n          case 14:\r\n            valTag += \"<\";\r\n            break;\r\n          case 15:\r\n            valTag += \">\";\r\n            break;\r\n          case 16:\r\n            valTag += \"&\";\r\n            break;\r\n          case 17:\r\n            valTag += \"'\";\r\n            break;\r\n          case 18:\r\n            valTag += '\"';\r\n            break;\r\n          case 19:\r\n            valTag += yy_.yytext;\r\n            break;\r\n          case 20:\r\n            this.begin(\"valin\");\r\n            return 12;\r\n            break;\r\n          case 21:\r\n            this.popState();\r\n            console.log(\"value Inside: \" + valInside);\r\n            yy_.yytext = valInside;\r\n            valInside = \"\";\r\n            return 14;\r\n\r\n            break;\r\n          case 22:\r\n            valInside += yy_.yytext;\r\n            break;\r\n          case 23:\r\n            this.popState();\r\n            return 6;\r\n            break;\r\n          case 24:\r\n            console.log(yy_.yytext);\r\n            return 12;\r\n            break;\r\n          case 25:\r\n            console.log(yy_.yytext);\r\n            return 10;\r\n            break;\r\n          case 26:\r\n            console.log(yy_.yytext);\r\n            return 17;\r\n            break;\r\n          case 27:\r\n            console.log(yy_.yytext);\r\n            return 15;\r\n            break;\r\n          case 28:\r\n            console.log(\"id:\" + yy_.yytext);\r\n            return 11;\r\n            break;\r\n          case 29 /*se ignoran*/:\r\n            break;\r\n          case 30:\r\n            return 6;\r\n            break;\r\n          case 31:\r\n            errores.push(\r\n              new Error_(\r\n                yy_.yylloc.first_line,\r\n                yy_.yylloc.first_column,\r\n                \"Lexico\",\r\n                \"Valor inesperado \" + yy_.yytext\r\n              )\r\n            );\r\n            console.error(errores);\r\n            break;\r\n        }\r\n      },\r\n      rules: [\r\n        /^(?:<\\?xml\\b)/,\r\n        /^(?:\\?>)/,\r\n        /^(?:[^(\\?>)])/,\r\n        /^(?:$)/,\r\n        /^(?:[\"])/,\r\n        /^(?:[\"])/,\r\n        /^(?:\\\\n)/,\r\n        /^(?:\\\\t)/,\r\n        /^(?:\\\\\\\\)/,\r\n        /^(?:\\\\r)/,\r\n        /^(?:\\\\\")/,\r\n        /^(?:.)/,\r\n        /^(?:['])/,\r\n        /^(?:['])/,\r\n        /^(?:&lt;)/,\r\n        /^(?:&gt;)/,\r\n        /^(?:&amp;)/,\r\n        /^(?:&apos;)/,\r\n        /^(?:&quot;)/,\r\n        /^(?:.)/,\r\n        /^(?:>[^<])/,\r\n        /^(?:<)/,\r\n        /^(?:[^<])/,\r\n        /^(?:$)/,\r\n        /^(?:>)/,\r\n        /^(?:<)/,\r\n        /^(?:\\/)/,\r\n        /^(?:=)/,\r\n        /^(?:[[a-zA-ZñÑáéíóúÁÉÍÓÚ][\"_\"\"-\"0-9a-zA-ZñÑáéíóúÁÉÍÓÚ]*|[\"_\"\"-\"]+[0-9a-zA-ZñÑáéíóúÁÉÍÓÚ][\"_\"\"-\"0-9a-zA-ZñÑáéíóúÁÉÍÓÚ]*)/,\r\n        /^(?:[ \\t\\n\\r\\f])/,\r\n        /^(?:$)/,\r\n        /^(?:.)/,\r\n      ],\r\n      conditions: {\r\n        valin: { rules: [21, 22, 23], inclusive: false },\r\n        tagval2: { rules: [13, 14, 15, 16, 17, 18, 19], inclusive: false },\r\n        tagval1: { rules: [5, 6, 7, 8, 9, 10, 11], inclusive: false },\r\n        xmloptions: { rules: [1, 2, 3], inclusive: false },\r\n        INITIAL: {\r\n          rules: [0, 4, 12, 20, 24, 25, 26, 27, 28, 29, 30, 31],\r\n          inclusive: true,\r\n        },\r\n      },\r\n    };\r\n    return lexer;\r\n  })();\r\n  parser.lexer = lexer;\r\n  function Parser() {\r\n    this.yy = {};\r\n  }\r\n  Parser.prototype = parser;\r\n  parser.Parser = Parser;\r\n  return new Parser();\r\n})();\r\n\r\nif (typeof require !== \"undefined\" && typeof exports !== \"undefined\") {\r\n  exports.parser = XmlGrammarASC;\r\n  exports.Parser = XmlGrammarASC.Parser;\r\n  exports.parse = function () {\r\n    return XmlGrammarASC.parse.apply(XmlGrammarASC, arguments);\r\n  };\r\n  exports.main = function commonjsMain(args) {\r\n    if (!args[1]) {\r\n      console.log(\"Usage: \" + args[0] + \" FILE\");\r\n      process.exit(1);\r\n    }\r\n    // var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    // return exports.parser.parse(source);\r\n  };\r\n  if (typeof module !== \"undefined\" && require.main === module) {\r\n    exports.main(process.argv.slice(1));\r\n  }\r\n}\r\n","import { Nodo } from '../Abstract/Nodo';\r\n\r\nexport class NodoXML extends Nodo {\r\n\r\n  public plotCst(count: number): string {\r\n    let result = `node${count} [label=\"(${this.line},${this.column}) ${this.name} (${this.type})\"];\\n`;\r\n    this.getHijos().forEach(element => {\r\n      result += \"node${count} -> node${count}1;\\n\";\r\n      result += element.plotCst((Number(count + \"1\")));\r\n    });\r\n    // Flechas\r\n    return result;\r\n  }\r\n\r\n  public plotAst(count: number): string {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  constructor(\r\n    id: string,\r\n    tipo: string,\r\n    line: number,\r\n    column: number,\r\n    public val: any\r\n  ) {\r\n    super(id, tipo, line, column);\r\n  }\r\n\r\n  public getID() {\r\n    return this.name;\r\n  }\r\n\r\n  public getVAl() {\r\n    return this.val;\r\n  }\r\n\r\n\r\n  public addHijo(nodo: NodoXML): void {\r\n    this.listaNodos.push(nodo);\r\n  }\r\n\r\n  public getHijos() {\r\n    return this.listaNodos;\r\n  }\r\n}\r\n","import { Error_ } from \"../Error\";\r\nimport { Rule } from '../Optimizer/Rule';\r\n\r\nexport class Table {\r\n\r\n    public rules(rules: Array<Rule>) {\r\n        let result = '<table class=\"table\">\\n';\r\n        result += '<thead>\\n<tr>\\n<th scope=\"col\">#</th>\\n'\r\n        result += '<th scope=\"col\">Linea</th>\\n';\r\n        result += '<th scope=\"col\">Tipo</th>\\n';\r\n        result += '<th scope=\"col\">Regla</th>\\n';\r\n        result += '<th scope=\"col\">Cod. Agregado</th>\\n';\r\n        result += '<th scope=\"col\">Cod. Eliminado</th>\\n';\r\n        result += '</tr>\\n';\r\n        result += '</thead>\\n';\r\n        result += '<tbody>\\n';\r\n\r\n        let count = 1;\r\n        rules.forEach(element => {\r\n            result += '<tr>\\n';\r\n            result += '<th scope=\"row\">' + count + '</th>\\n';\r\n            result += element.htmlRow();\r\n            result += '</tr>\\n';\r\n            count++;\r\n        });\r\n        result += '</tbody>\\n';\r\n        return result += '</table>\\n</div>';\r\n    }\r\n\r\n    public symbols(simbolos: Map<any, any>) {\r\n        let result = '<div class=\"table-wrapper-scroll-y my-custom-scrollbar\">';\r\n        result += '<table class=\"table table-dark table-hover\">\\n';\r\n\r\n        result += '<thead>\\n<tr>\\n<th scope=\"col\">#</th>\\n'\r\n        result += '<th scope=\"col\">Valor</th>\\n';\r\n        result += '<th scope=\"col\">ID</th>\\n';\r\n        result += '<th scope=\"col\">Tipo</th>\\n';\r\n        result += '<th scope=\"col\">Ambito</th>\\n';\r\n        result += '</tr>\\n';\r\n        result += '</thead>\\n';\r\n        result += '<tbody>\\n';\r\n\r\n        let count = 1;\r\n        simbolos.forEach(element => {\r\n            result += '<tr>\\n';\r\n            result += '<th scope=\"row\">' + count + '</th>\\n';\r\n            result += element.htmlRow();\r\n            result += '</tr>\\n';\r\n            count++;\r\n        });\r\n        result += '</tbody>\\n';\r\n        return result += '</table></div>';\r\n    }\r\n\r\n    public errors(errores: Array<Error_>) {\r\n        //console.log(errores);\r\n        let result = '<table class=\"table\">\\n';\r\n        result += '<thead>\\n<tr>\\n<th scope=\"col\">#</th>\\n'\r\n        result += '<th scope=\"col\">Tipo</th>\\n';\r\n        result += '<th scope=\"col\">Descripcion</th>\\n';\r\n        result += '<th scope=\"col\">Linea</th>\\n';\r\n        result += '<th scope=\"col\">Columna</th>\\n';\r\n        result += '</tr>\\n';\r\n        result += '</thead>\\n';\r\n        result += '<tbody>\\n';\r\n\r\n        let count = 1;\r\n        errores.forEach(element => {\r\n            result += '<tr>\\n';\r\n            result += '<th scope=\"row\">' + count + '</th>\\n';\r\n            result += element.htmlRow();\r\n            result += '</tr>\\n';\r\n            count++;\r\n        });\r\n        result += '</tbody>\\n';\r\n        return result += '</table>\\n</div>';\r\n    }\r\n}","// import { count } from 'console';\r\n\r\nexport class Plotter {\r\n  count: number;\r\n  public makeDot(ast: any) {\r\n    let count = 1;\r\n    let result = 'digraph AST{ node[shape=\"box\"];';\r\n    result += 'node' + count + '[label=\"(0,0) Inicio\"];';\r\n    result += this.printAST(ast, count);\r\n    // if (ast != null) {\r\n\r\n    //     for (const instr of ast) {\r\n    //         result += instr.plot(Number(count + '1'));\r\n    //         // Flechas\r\n    //         result += \"node1 -> \" + \"node\" + count + \"1;\";\r\n    //         count++;\r\n    //     }\r\n    // }\r\n    return result + '}';\r\n  }\r\n\r\n  private printAST(ast: any, count: number): string {\r\n    var res = '';\r\n    if (ast != null) {\r\n      res += ast.plot(Number(count + '1'));\r\n      res += 'node1 -> ' + 'node' + count + '1;';\r\n      count++;\r\n      ast.getHijos().forEach((element) => {\r\n        res += this.printAST(element, count);\r\n      });\r\n    }\r\n    return res;\r\n  }\r\n}\r\n","import { NgIf } from '@angular/common';\r\n\r\nclass Console {\r\n    public salida = \"\";\r\n    public symbols = new Map();\r\n    public count: number;\r\n    public labels: number;\r\n    public stackPointer: number;\r\n    public heapPointer: number;\r\n    public stack: any[];\r\n    public heap: any[];\r\n    public printOption: number;\r\n\r\n    constructor() {\r\n        this.stack = new Array;\r\n        this.heap = new Array;\r\n        this.printOption = 0;\r\n    }\r\n    showSystem() {\r\n        console.log('----------- Stack -----------');\r\n        console.table(this.stack);\r\n        console.log('----------- Heap -----------');\r\n        console.table(this.heap);\r\n        console.log('----------- Stack Pointer -----------');\r\n        console.log(this.stackPointer);\r\n        console.log('----------- Heap Pointer -----------');\r\n        console.log(this.heapPointer);\r\n        console.log('----------- Tabla de Simbolos -----------');\r\n        console.log(this.symbols);\r\n    }\r\n    saveInHeap(index: number, id: any) {\r\n        this.heap[index] = id;\r\n    }\r\n    saveInStack(index: number, id: any) {\r\n        this.stack[index] = id;\r\n    }\r\n\r\n\r\n}\r\nexport const _Console = new Console();","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- Footer -->\r\n<footer class=\"page-footer font-small blue pt-4\">\r\n\r\n    <!-- Footer Links -->\r\n    <div class=\"container-fluid text-center text-md-left\">\r\n\r\n        <!-- Grid row -->\r\n        <div class=\"row\">\r\n\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-6 mt-md-0 mt-3\">\r\n\r\n                <!-- Content -->\r\n                <h4>Universidad San Carlos de Guatemala</h4>\r\n                <p>Escuela de Ciencias y Sistemas</p>\r\n\r\n            </div>\r\n            <!-- Grid column -->\r\n\r\n            <hr class=\"clearfix w-100 d-md-none pb-3\">\r\n\r\n        </div>\r\n        <!-- Grid row -->\r\n\r\n    </div>\r\n    <!-- Footer Links -->\r\n\r\n    <!-- Copyright -->\r\n    <div class=\"footer-copyright text-center py-3\">© 2021 MIT:\r\n        <a href=\"https://github.com/Xvimnt/Compi2_Junio\"> Grupo18 TytusX</a>\r\n    </div>\r\n    <!-- Copyright -->\r\n\r\n</footer>\r\n<!-- Footer -->","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.css']\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- Toolbar -->\r\n<div class=\"toolbar\" role=\"banner\">\r\n    <img width=\"40\" alt=\"Angular Logo\"\r\n        src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fi.pinimg.com%2Foriginals%2F18%2Fe9%2F84%2F18e98488f4463e3114d7059324ec382c.png&f=1&nofb=1\" />\r\n    <span>Organizacion de Lenguajes y Compiladores 2</span>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AstComponent } from './Components/ast/ast.component'\r\nimport { EditorComponent } from './Components/editor/editor.component'\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'ast', component: AstComponent},\r\n  {path: 'editor', component: EditorComponent},\r\n  {path:'',redirectTo:'/editor',pathMatch:'full'},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Compi2_Junio';\r\n  \r\n  ngOnInit() {\r\n  \r\n  }\r\n}","<!-- Toolbar -->\r\n<app-toolbar></app-toolbar>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n<!-- Toolbar -->\r\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\n// Modulos propios\r\nimport { AstComponent } from './Components/ast/ast.component';\r\nimport { EditorComponent } from './Components/editor/editor.component';\r\nimport { ToolbarComponent } from './Components/toolbar/toolbar.component';\r\nimport { FooterComponent } from './Components/footer/footer.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    EditorComponent,\r\n    AstComponent,\r\n    ToolbarComponent,\r\n    FooterComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    CodemirrorModule,\r\n    NgbModule,\r\n    FontAwesomeModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { SESSION_STORAGE, StorageService } from 'ngx-webstorage-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DotService {\r\n  public data: any = [];\r\n  constructor(@Inject(SESSION_STORAGE) private storage: StorageService) { }\r\n\r\n  setDot(dot: string) {\r\n    this.storage.set('dot', dot);\r\n  }\r\n\r\n  getDot() {\r\n    return this.storage.get('dot');\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/mode/markdown/markdown';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}