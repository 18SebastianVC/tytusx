{"version":3,"sources":["Grammar/xmlGrammarDesc.js","Reportes/xmlReport.js","Reportes/xmlReportDesc.js","Reportes/SimboloTabla.tsx","components/main.tsx","App.tsx","reportWebVitals.ts","index.tsx","Reportes/NodoCST.tsx","xmlAST/ClaseError.tsx","xmlAST/Entorno.tsx","xmlAST/Simbolo.tsx","Grammar/xmlGrammar.js"],"names":["xmlGrammarDesc","o","k","v","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","parser","trace","yy","symbols_","terminals_","2","4","5","6","8","12","14","18","19","20","21","22","23","24","25","26","27","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","listaErroresTemp","listaErrores","ast","push","this","$","ClaseError","first_line","first_column","Entorno","Simbolo","table","3","9","10","1","11","16","7","17","13","15","defaultActions","48","49","50","51","52","53","54","55","56","57","58","59","67","parseError","str","hash","recoverable","error","Error","parse","input","self","stack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","popStack","n","getPrototypeOf","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","lex","token","yyval","error_rule_depth","locateNearestErrorRecoveryRule","stack_probe","depth","toString","errStr","showPosition","join","text","match","line","loc","Array","last_line","last_column","range","apply","concat","require","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","console","log","Parser","exports","main","process","exit","source","readFileSync","normalize","module","argv","xmlReport","nodoaux","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","txtGramProd","txtGramRegSem","contador","raiz","crearNodo","ReporteGramatical","ReporteCST","texto","NodoCST","lista","44","xmlReportDesc","43","45","46","47","64","SimboloTabla","linea","columna","nombre","tipo","ambito","valor","re","re2","re3","newstr","crearTablaSimbolos","resultado","entorno","key","identificador","listaSimbolos","listaEntornos","crearTextoGraphvizTablaSimbolos","parserXmlDesc","parserReport","parserReportDesc","Main","consoleResult","xpath","xml","repcsttxt","repgramtxt","repErrorXML","repTablaSimbolos","graphvizContent","result","entornoGlobal","xmlResRep","setState","crearTextoGraphvizRepGram","crearTextoGraphvizCST","crearTextoReporteErrorXML","parseDesc","handleFileChange","file","reader","FileReader","readAsText","onload","e","target","onChangeReports","value","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","maxSize","onChange","onError","errMsg","Button","variant","Row","Col","xs","md","Form","Control","type","placeholder","defaultValue","onClick","as","rows","Group","name","size","Graphviz","dot","height","width","zoom","Component","App","basename","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","nuevo","indice","listaNodos","Nombre","padre","producciones","reglas","listaErr","listaE","idAtrubito","L_atrubitos","forEach","xmlGrammar","$Vv","$Vw"],"mappings":"8FAAA,cAyEA,IAAIA,EAAkB,WACtB,IAAIC,EAAE,SAASC,EAAEC,EAAEF,EAAEG,GAAG,IAAIH,EAAEA,GAAG,GAAGG,EAAEF,EAAEG,OAAOD,IAAIH,EAAEC,EAAEE,IAAID,GAAG,OAAOF,GAAGK,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,EAAE,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,IACnSC,EAAS,CAACC,MAAO,aACrBC,GAAI,GACJC,SAAU,CAAC,MAAQ,EAAE,KAAO,EAAE,MAAQ,EAAE,IAAI,EAAE,GAAK,EAAE,eAAiB,EAAE,MAAQ,EAAE,MAAQ,EAAE,KAAO,GAAG,MAAQ,GAAG,IAAM,GAAG,WAAa,GAAG,IAAI,GAAG,UAAY,GAAG,UAAY,GAAG,SAAW,GAAG,IAAI,GAAG,QAAU,GAAG,QAAU,GAAG,SAAW,GAAG,YAAc,GAAG,UAAY,GAAG,WAAa,GAAG,SAAW,GAAG,OAAS,GAAG,OAAS,GAAG,QAAU,EAAE,KAAO,GACrVC,WAAY,CAACC,EAAE,QAAQC,EAAE,QAAQC,EAAE,IAAIC,EAAE,KAAKC,EAAE,QAAQC,GAAG,MAAMC,GAAG,IAAIC,GAAG,IAAIC,GAAG,UAAUC,GAAG,UAAUC,GAAG,WAAWC,GAAG,cAAcC,GAAG,YAAYC,GAAG,aAAaC,GAAG,WAAWC,GAAG,SAASC,GAAG,UACpMC,aAAccAAe,SAAmBC,EAAQC,EAAQC,EAAUxB,EAAIyB,EAAyBC,EAAiBC,GAG1G,IAAIC,EAAKF,EAAGjD,OAAS,EACrB,OAAQgD,GACR,KAAK,EAAG,KAAK,EAEL,IAAII,EAAmBC,EAEvB,OADAA,EAAe,GACR,CAACC,IAAKL,EAAGE,GAAKE,aAAeD,GAG5C,KAAK,EACLH,EAAGE,EAAG,GAAGI,KAAKN,EAAGE,IAAMK,KAAKC,EAAIR,EAAGE,EAAG,GACtC,MACA,KAAK,EACLK,KAAKC,EAAI,CAACR,EAAGE,EAAG,IAChB,MACA,KAAK,EAEMF,EAAGE,EAAG,KAAKF,EAAGE,EAAG,IAAIE,EAAaE,KAAK,IAAIG,EAAW,YAAY,eAAeT,EAAGE,EAAG,GAAG,mBAAmBD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,eAC9IJ,KAAKC,EAAI,IAAII,EAAQZ,EAAGE,EAAG,GAAG,GAAGD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,aAAaX,EAAGE,EAAG,GAAGF,EAAGE,EAAG,IAEnG,MACA,KAAK,EAEMF,EAAGE,EAAG,KAAKF,EAAGE,EAAG,IAAIE,EAAaE,KAAK,IAAIG,EAAW,YAAY,eAAeT,EAAGE,EAAG,GAAG,mBAAmBD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,eAC9IJ,KAAKC,EAAI,IAAII,EAAQZ,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,aAAaX,EAAGE,EAAG,GAAG,IAEnG,MACA,KAAK,EACLK,KAAKC,EAAI,IAAII,EAAQZ,EAAGE,EAAG,GAAG,GAAGD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,aAAaX,EAAGE,EAAG,GAAG,IACrF,MACA,KAAK,GAEMF,EAAGE,EAAG,KAAKF,EAAGE,EAAG,IAAIE,EAAaE,KAAK,IAAIG,EAAW,YAAY,eAAeT,EAAGE,EAAG,GAAG,mBAAmBD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,eAC9IJ,KAAKC,EAAI,IAAII,EAAQZ,EAAGE,EAAG,GAAG,GAAGD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,aAAa,GAAGX,EAAGE,EAAG,IAE7F,MACA,KAAK,GAEMF,EAAGE,EAAG,KAAKF,EAAGE,EAAG,IAAIE,EAAaE,KAAK,IAAIG,EAAW,YAAY,eAAeT,EAAGE,EAAG,GAAG,mBAAmBD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,eAC9IJ,KAAKC,EAAI,IAAII,EAAQZ,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,aAAa,GAAG,IAE7F,MACA,KAAK,GACLJ,KAAKC,EAAI,IAAII,EAAQZ,EAAGE,EAAG,GAAG,GAAGD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,aAAa,GAAG,IAC/E,MACA,KAAK,GACLP,EAAaE,KAAK,IAAIG,EAAW,aAAa,4CAA4CR,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,eACxH,MACA,KAAK,GACLX,EAAGE,EAAG,GAAGI,KAAKN,EAAGE,IAAMK,KAAKC,EAAIR,EAAGE,EAAG,GACtC,MACA,KAAK,GAAI,KAAK,GACdK,KAAKC,EAAI,CAACR,EAAGE,IACb,MACA,KAAK,GACLF,EAAGE,GAAII,KAAKN,EAAGE,EAAG,IAAKK,KAAKC,EAAIR,EAAGE,GACnC,MACA,KAAK,GAAI,KAAK,GACdK,KAAKC,EAAI,IAAIK,EAAQb,EAAGE,EAAG,GAAIF,EAAGE,GAAKD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,cACrE,MACA,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAC3DJ,KAAKC,EAAIR,EAAGE,EAAG,GAAI,IAAKF,EAAGE,GAC3B,MACA,KAAK,GACLK,KAAKC,EAAIR,EAAGE,EAAG,GAANF,KACT,MACA,KAAK,GACLO,KAAKC,EAAIR,EAAGE,EAAG,GAANF,KACT,MACA,KAAK,GACLO,KAAKC,EAAIR,EAAGE,EAAG,GAANF,KACT,MACA,KAAK,GACLO,KAAKC,EAAIR,EAAGE,EAAG,GAANF,KACT,MACA,KAAK,GACLO,KAAKC,EAAIR,EAAGE,EAAG,GAANF,KACT,MACA,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAC3DO,KAAKC,EAAIR,EAAGE,GACZ,MACA,KAAK,GACLK,KAAKC,EAAI,IACT,MACA,KAAK,GACLD,KAAKC,EAAI,IACT,MACA,KAAK,GACLD,KAAKC,EAAI,IACT,MACA,KAAK,GACLD,KAAKC,EAAI,IACT,MACA,KAAK,GACLD,KAAKC,EAAI,MAITM,MAAO,CAAC,CAACrC,EAAEzB,EAAI+D,EAAE,EAAErC,EAAE,CAAC,EAAE,GAAGsC,EAAE,EAAEC,GAAG,GAAG,CAACC,EAAE,CAAC,IAAI,CAACvC,EAAE,CAAC,EAAE,GAAGC,EAAE3B,GAAK,CAACiE,EAAE,CAAC,EAAE,IAAI,CAACA,EAAE,CAAC,EAAE,GAAGzC,EAAEzB,EAAI0B,EAAExB,EAAI8D,EAAE,EAAEC,GAAG,EAAEE,GAAG,EAAErC,GAAG,CAAC,EAAE,KAAK,CAACD,EAAE,CAAC,EAAE,IAAIuC,GAAG,IAAI,CAACxC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAEzB,EAAIkE,EAAE,GAAGxC,EAAE,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIuC,GAAG,IAAI,CAACJ,EAAE,CAAC,EAAE,IAAI,CAACA,EAAE9D,GAAK,CAAC8D,EAAE,CAAC,EAAE,IAAI,CAACtC,EAAE3B,GAAKN,EAAEU,EAAI,CAAC,EAAE,KAAKV,EAAEU,EAAI,CAAC,EAAE,KAAK,CAACuB,EAAEzB,EAAIkE,EAAE,GAAGC,GAAG,IAAI,CAACzC,EAAE,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,KAAK,CAACN,EAAEzB,EAAI0B,EAAExB,EAAI0B,EAAEtB,EAAI2D,GAAG,GAAGM,GAAG,GAAGxC,GAAGxB,EAAIiE,GAAG,GAAGxC,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,GAAK,CAACY,EAAE,CAAC,EAAE,KAAKlC,EAAEuB,EAAI,CAAC,EAAE,IAAI,CAACoD,GAAG,GAAGD,EAAE,GAAGzC,EAAEzB,IAAM,CAAC6B,GAAG,CAAC,EAAE,KAAK,CAACL,EAAE,CAAC,EAAE,KAAK,CAACF,EAAEzB,EAAI0B,EAAExB,EAAI0B,EAAEtB,EAAI2D,GAAG,GAAGM,GAAG,GAAGxC,GAAGxB,EAAIiE,GAAG,GAAGxC,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,GAAK,CAACY,EAAE,CAAC,EAAE,KAAK,CAACJ,EAAEzB,EAAI0B,EAAE,CAAC,EAAE,IAAIuC,GAAG,IAAI,CAACvC,EAAE,CAAC,EAAE,KAAK/B,EAAES,EAAI,CAAC,EAAE,KAAK,CAACsB,EAAE,CAAC,EAAE,IAAIE,EAAEtB,EAAIyB,GAAGxB,EAAIiE,GAAG,GAAGxC,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,GAAK,CAACS,EAAE,CAAC,EAAE,IAAIE,EAAEtB,EAAIyB,GAAGxB,EAAIiE,GAAG,GAAGxC,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,GAAK,CAACS,EAAE,CAAC,EAAE,IAAIE,EAAEtB,EAAIyB,GAAGxB,EAAIiE,GAAG,GAAGxC,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,GAAK,CAACS,EAAE,CAAC,EAAE,IAAIE,EAAEtB,EAAIyB,GAAGxB,EAAIiE,GAAG,GAAGxC,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,GAAK,CAACS,EAAE,CAAC,EAAE,IAAIE,EAAEtB,EAAIyB,GAAGxB,EAAIiE,GAAG,GAAGxC,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,GAAK,CAACS,EAAE,CAAC,EAAE,IAAIE,EAAEtB,EAAIyB,GAAGxB,EAAIiE,GAAG,GAAGxC,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,GAAK,CAACS,EAAE,CAAC,EAAE,IAAIE,EAAEtB,EAAIyB,GAAGxB,EAAIiE,GAAG,GAAGxC,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,GAAK,CAACS,EAAE,CAAC,EAAE,IAAIE,EAAEtB,EAAIyB,GAAGxB,EAAIiE,GAAG,GAAGxC,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,GAAK,CAACS,EAAE,CAAC,EAAE,IAAIE,EAAEtB,EAAIyB,GAAGxB,EAAIiE,GAAG,GAAGxC,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,GAAK,CAACS,EAAE,CAAC,EAAE,IAAIE,EAAEtB,EAAIyB,GAAGxB,EAAIiE,GAAG,GAAGxC,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,GAAK,CAACS,EAAE,CAAC,EAAE,IAAIE,EAAEtB,EAAIyB,GAAGxB,EAAIiE,GAAG,GAAGxC,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,GAAK,CAACS,EAAE,CAAC,EAAE,IAAIE,EAAEtB,EAAIyB,GAAGxB,EAAIiE,GAAG,GAAGxC,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,EAAIyB,GAAGxB,GAAKtB,EAAEU,EAAI,CAAC,EAAE,KAAKV,EAAEuB,EAAI,CAAC,EAAE,KAAK,CAACe,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACL,EAAE,CAAC,EAAE,KAAK,CAACJ,EAAEzB,EAAI0B,EAAE,CAAC,EAAE,IAAIuC,GAAG,IAAI,CAACvC,EAAE,CAAC,EAAE,KAAK/B,EAAEU,EAAI,CAAC,EAAE,IAAI,CAACuB,EAAE3B,EAAI8B,GAAG,CAAC,EAAE,KAAKpC,EAAES,EAAI,CAAC,EAAE,KAAK,CAAC2B,GAAG,CAAC,EAAE,KAAK,CAACL,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK/B,EAAEwB,EAAI,CAAC,EAAE,KAAKxB,EAAEwB,EAAI,CAAC,EAAE,KAAK,CAACM,EAAEzB,EAAI0B,EAAExB,EAAI8D,EAAE,GAAGC,GAAG,GAAG,CAACrC,EAAE3B,EAAI8B,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAACH,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACsC,EAAE,CAAC,EAAE,IAAI,CAACtC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAKlC,EAAEU,EAAI,CAAC,EAAE,KAAKV,EAAEU,EAAI,CAAC,EAAE,KAAKV,EAAEU,EAAI,CAAC,EAAE,IAAIV,EAAEU,EAAI,CAAC,EAAE,KACrzEoE,eAAgB,CAACV,EAAE,CAAC,EAAE,GAAGlC,EAAE,CAAC,EAAE,GAAGmC,EAAE,CAAC,EAAE,GAAGC,GAAG,CAAC,EAAE,GAAGS,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAChLC,WAAY,SAAqBC,EAAKC,GAClC,IAAIA,EAAKC,YAEF,CACH,IAAIC,EAAQ,IAAIC,MAAMJ,GAEtB,MADAG,EAAMF,KAAOA,EACPE,EAJNpC,KAAKlC,MAAMmE,IAOnBK,MAAO,SAAgBC,GACnB,IAAIC,EAAOxC,KACPyC,EAAQ,CAAC,GAETC,EAAS,CAAC,MACVC,EAAS,GACTpC,EAAQP,KAAKO,MACblB,EAAS,GACTE,EAAW,EACXD,EAAS,EACTsD,EAAa,EACbC,EAAS,EACTC,EAAM,EAENC,EAAOJ,EAAOK,MAAMC,KAAKC,UAAW,GAIpCC,EAAQC,OAAOC,OAAOrD,KAAKmD,OAC3BG,EAAc,CAAEvF,GAAI,IAExB,IAAK,IAAI1B,KAAK2D,KAAKjC,GACbqF,OAAOG,UAAUC,eAAeP,KAAKjD,KAAKjC,GAAI1B,KAChDiH,EAAYvF,GAAG1B,GAAK2D,KAAKjC,GAAG1B,IAIhC8G,EAAMM,SAASlB,EAAOe,EAAYvF,IAClCuF,EAAYvF,GAAGoF,MAAQA,EACvBG,EAAYvF,GAAGF,OAASmC,KACG,oBAAhBmD,EAAMO,SACbP,EAAMO,OAAS,IAEnB,IAAIC,EAAQR,EAAMO,OAClBf,EAAO5C,KAAK4D,GAEZ,IAAIC,EAAST,EAAMU,SAAWV,EAAMU,QAAQD,OAQ5C,SAASE,EAAUC,GACftB,EAAMjG,OAASiG,EAAMjG,OAAS,EAAIuH,EAClCrB,EAAOlG,OAASkG,EAAOlG,OAASuH,EAChCpB,EAAOnG,OAASmG,EAAOnG,OAASuH,EATK,oBAA9BT,EAAYvF,GAAGiE,WACtBhC,KAAKgC,WAAasB,EAAYvF,GAAGiE,WAEjChC,KAAKgC,WAAaoB,OAAOY,eAAehE,MAAMgC,WAqBlD,IAXA,IAUIiC,EAAQC,EAAgBC,EAAOC,EAAWC,EAAeC,EAAGC,EAAKC,EAAUC,EAV3EC,EAAM,WACN,IAAIC,EAMJ,MAHqB,kBAFrBA,EAAQxB,EAAMuB,OAAS5B,KAGnB6B,EAAQnC,EAAKxE,SAAS2G,IAAUA,GAE7BA,GAGsCC,EAAQ,KAC5C,CAiBT,GAfAT,EAAQ1B,EAAMA,EAAMjG,OAAS,GAGzBwD,KAAKkB,eAAeiD,GACpBC,EAASpE,KAAKkB,eAAeiD,IAEd,OAAXF,GAAoC,oBAAVA,IAC1BA,EAASS,KAGbN,EAAS7D,EAAM4D,IAAU5D,EAAM4D,GAAOF,IAKpB,qBAAXG,IAA2BA,EAAO5H,SAAW4H,EAAO,GAAI,KAC3DS,EAKKC,EAAT,SAAwCX,GAKpC,IAJA,IAAIY,EAActC,EAAMjG,OAAS,EAC7BwI,EAAQ,IAGJ,CAEJ,GAAKnC,EAAOoC,aAAe1E,EAAM4D,GAC7B,OAAOa,EAEX,GAAc,IAAVb,GAAeY,EAAc,EAC7B,OAAO,EAGXZ,EAAQ1B,EADRsC,GAAe,KAEbC,IAnBNE,EAAS,GAuBb,GAAKtC,EA0BMsB,IAAmBpB,IAC1B+B,EAAmBC,EAA+BX,QA3BrC,CAMb,IAAKG,KAJLO,EAAmBC,EAA+BX,GAGlDM,EAAW,GACDlE,EAAM4D,GACRnE,KAAK/B,WAAWqG,IAAMA,EAAIzB,GAC1B4B,EAAS1E,KAAK,IAAIC,KAAK/B,WAAWqG,GAAG,KAIzCY,EADA/B,EAAMgC,aACG,wBAAwB5F,EAAS,GAAG,MAAM4D,EAAMgC,eAAe,eAAeV,EAASW,KAAK,MAAQ,WAAapF,KAAK/B,WAAWgG,IAAWA,GAAS,IAErJ,wBAAwB1E,EAAS,GAAG,iBAC9B0E,GAAUnB,EAAM,eACJ,KAAK9C,KAAK/B,WAAWgG,IAAWA,GAAQ,KAEvEjE,KAAKgC,WAAWkD,EAAQ,CACpBG,KAAMlC,EAAMmC,MACZX,MAAO3E,KAAK/B,WAAWgG,IAAWA,EAClCsB,KAAMpC,EAAM5D,SACZiG,IAAK7B,EACLc,SAAUA,EACVtC,aAAmC,IAArB0C,IAOtB,GAAkB,GAAdjC,EAAiB,CACjB,GAAIqB,IAAWnB,GAAOoB,IAAmBpB,EACrC,MAAM,IAAIT,MAAM6C,GAAU,gEAI9B5F,EAAS6D,EAAM7D,OACfD,EAAS8D,EAAM9D,OACfE,EAAW4D,EAAM5D,SACjBoE,EAAQR,EAAMO,OACdO,EAASS,IAIb,IAAyB,IAArBG,EACA,MAAM,IAAIxC,MAAM6C,GAAU,8DAE9BpB,EAASe,GAETX,EAAkBD,GAAUpB,EAAS,KAAOoB,EAC5CA,EAASpB,EACTsB,EAAQ1B,EAAMA,EAAMjG,OAAO,GAC3B4H,EAAS7D,EAAM4D,IAAU5D,EAAM4D,GAAOtB,GACtCD,EAAa,EAIjB,GAAIwB,EAAO,aAAcqB,OAASrB,EAAO5H,OAAS,EAC9C,MAAM,IAAI6F,MAAM,oDAAoD8B,EAAM,YAAYF,GAG1F,OAAQG,EAAO,IACX,KAAK,EAGD3B,EAAM1C,KAAKkE,GACXvB,EAAO3C,KAAKoD,EAAM9D,QAClBsD,EAAO5C,KAAKoD,EAAMO,QAClBjB,EAAM1C,KAAKqE,EAAO,IAClBH,EAAS,KACJC,GAUDD,EAASC,EACTA,EAAiB,OAVjB5E,EAAS6D,EAAM7D,OACfD,EAAS8D,EAAM9D,OACfE,EAAW4D,EAAM5D,SACjBoE,EAAQR,EAAMO,OACVd,EAAa,GACbA,KAOR,MAEJ,KAAK,EAoBD,GAhBA2B,EAAMvE,KAAKb,aAAaiF,EAAO,IAAI,GAGnCQ,EAAM3E,EAAIyC,EAAOA,EAAOlG,OAAO+H,GAE/BK,EAAMlF,GAAK,CACPS,WAAYwC,EAAOA,EAAOnG,QAAQ+H,GAAK,IAAIpE,WAC3CuF,UAAW/C,EAAOA,EAAOnG,OAAO,GAAGkJ,UACnCtF,aAAcuC,EAAOA,EAAOnG,QAAQ+H,GAAK,IAAInE,aAC7CuF,YAAahD,EAAOA,EAAOnG,OAAO,GAAGmJ,aAErC/B,IACFgB,EAAMlF,GAAGkG,MAAQ,CAACjD,EAAOA,EAAOnG,QAAQ+H,GAAK,IAAIqB,MAAM,GAAIjD,EAAOA,EAAOnG,OAAO,GAAGoJ,MAAM,KAI1E,qBAFjBvB,EAAIrE,KAAKZ,cAAcyG,MAAMjB,EAAO,CAACvF,EAAQC,EAAQC,EAAU+D,EAAYvF,GAAIqG,EAAO,GAAI1B,EAAQC,GAAQmD,OAAO/C,KAG7G,OAAOsB,EAIPE,IACA9B,EAAQA,EAAMO,MAAM,GAAG,EAAEuB,EAAI,GAC7B7B,EAASA,EAAOM,MAAM,GAAI,EAAEuB,GAC5B5B,EAASA,EAAOK,MAAM,GAAI,EAAEuB,IAGhC9B,EAAM1C,KAAKC,KAAKb,aAAaiF,EAAO,IAAI,IACxC1B,EAAO3C,KAAK6E,EAAM3E,GAClB0C,EAAO5C,KAAK6E,EAAMlF,IAElB8E,EAAWjE,EAAMkC,EAAMA,EAAMjG,OAAO,IAAIiG,EAAMA,EAAMjG,OAAO,IAC3DiG,EAAM1C,KAAKyE,GACX,MAEJ,KAAK,EAED,OAAO,GAKnB,OAAO,IAGAnE,EAAW0F,EAAQ,IAAnB1F,QACAC,EAAWyF,EAAQ,IAAnBzF,QACAJ,EAAc6F,EAAQ,IAAtB7F,WACHL,EAAe,GAEnBsD,EACS,CAEbL,IAAI,EAEJd,WAAW,SAAoBC,EAAKC,GAC5B,IAAIlC,KAAKjC,GAAGF,OAGR,MAAM,IAAIwE,MAAMJ,GAFhBjC,KAAKjC,GAAGF,OAAOmE,WAAWC,EAAKC,IAO3CuB,SAAS,SAAUlB,EAAOxE,GAiBlB,OAhBAiC,KAAKjC,GAAKA,GAAMiC,KAAKjC,IAAM,GAC3BiC,KAAKgG,OAASzD,EACdvC,KAAKiG,MAAQjG,KAAKkG,WAAalG,KAAKmG,MAAO,EAC3CnG,KAAKT,SAAWS,KAAKV,OAAS,EAC9BU,KAAKX,OAASW,KAAKoG,QAAUpG,KAAKsF,MAAQ,GAC1CtF,KAAKqG,eAAiB,CAAC,WACvBrG,KAAK0D,OAAS,CACVvD,WAAY,EACZC,aAAc,EACdsF,UAAW,EACXC,YAAa,GAEb3F,KAAK6D,QAAQD,SACb5D,KAAK0D,OAAOkC,MAAQ,CAAC,EAAE,IAE3B5F,KAAKsG,OAAS,EACPtG,MAIfuC,MAAM,WACE,IAAIgE,EAAKvG,KAAKgG,OAAO,GAkBrB,OAjBAhG,KAAKX,QAAUkH,EACfvG,KAAKV,SACLU,KAAKsG,SACLtG,KAAKsF,OAASiB,EACdvG,KAAKoG,SAAWG,EACJA,EAAGjB,MAAM,oBAEjBtF,KAAKT,WACLS,KAAK0D,OAAOgC,aAEZ1F,KAAK0D,OAAOiC,cAEZ3F,KAAK6D,QAAQD,QACb5D,KAAK0D,OAAOkC,MAAM,KAGtB5F,KAAKgG,OAAShG,KAAKgG,OAAOhD,MAAM,GACzBuD,GAIfC,MAAM,SAAUD,GACR,IAAIhC,EAAMgC,EAAG/J,OACTiK,EAAQF,EAAGG,MAAM,iBAErB1G,KAAKgG,OAASO,EAAKvG,KAAKgG,OACxBhG,KAAKX,OAASW,KAAKX,OAAOsH,OAAO,EAAG3G,KAAKX,OAAO7C,OAAS+H,GAEzDvE,KAAKsG,QAAU/B,EACf,IAAIqC,EAAW5G,KAAKsF,MAAMoB,MAAM,iBAChC1G,KAAKsF,MAAQtF,KAAKsF,MAAMqB,OAAO,EAAG3G,KAAKsF,MAAM9I,OAAS,GACtDwD,KAAKoG,QAAUpG,KAAKoG,QAAQO,OAAO,EAAG3G,KAAKoG,QAAQ5J,OAAS,GAExDiK,EAAMjK,OAAS,IACfwD,KAAKT,UAAYkH,EAAMjK,OAAS,GAEpC,IAAI6H,EAAIrE,KAAK0D,OAAOkC,MAgBpB,OAdA5F,KAAK0D,OAAS,CACVvD,WAAYH,KAAK0D,OAAOvD,WACxBuF,UAAW1F,KAAKT,SAAW,EAC3Ba,aAAcJ,KAAK0D,OAAOtD,aAC1BuF,YAAac,GACRA,EAAMjK,SAAWoK,EAASpK,OAASwD,KAAK0D,OAAOtD,aAAe,GAC5DwG,EAASA,EAASpK,OAASiK,EAAMjK,QAAQA,OAASiK,EAAM,GAAGjK,OAChEwD,KAAK0D,OAAOtD,aAAemE,GAG7BvE,KAAK6D,QAAQD,SACb5D,KAAK0D,OAAOkC,MAAQ,CAACvB,EAAE,GAAIA,EAAE,GAAKrE,KAAKV,OAASiF,IAEpDvE,KAAKV,OAASU,KAAKX,OAAO7C,OACnBwD,MAIf6G,KAAK,WAEG,OADA7G,KAAKiG,OAAQ,EACNjG,MAIf8G,OAAO,WACC,OAAI9G,KAAK6D,QAAQkD,iBACb/G,KAAKkG,YAAa,EASflG,MAPIA,KAAKgC,WAAW,0BAA4BhC,KAAKT,SAAW,GAAK,mIAAqIS,KAAKmF,eAAgB,CAC9NE,KAAM,GACNV,MAAO,KACPY,KAAMvF,KAAKT,YAQ3ByH,KAAK,SAAUjD,GACP/D,KAAKwG,MAAMxG,KAAKsF,MAAMtC,MAAMe,KAIpCkD,UAAU,WACF,IAAIC,EAAOlH,KAAKoG,QAAQO,OAAO,EAAG3G,KAAKoG,QAAQ5J,OAASwD,KAAKsF,MAAM9I,QACnE,OAAQ0K,EAAK1K,OAAS,GAAK,MAAM,IAAM0K,EAAKP,QAAQ,IAAIQ,QAAQ,MAAO,KAI/EC,cAAc,WACN,IAAIC,EAAOrH,KAAKsF,MAIhB,OAHI+B,EAAK7K,OAAS,KACd6K,GAAQrH,KAAKgG,OAAOW,OAAO,EAAG,GAAGU,EAAK7K,UAElC6K,EAAKV,OAAO,EAAE,KAAOU,EAAK7K,OAAS,GAAK,MAAQ,KAAK2K,QAAQ,MAAO,KAIpFhC,aAAa,WACL,IAAImC,EAAMtH,KAAKiH,YACXM,EAAI,IAAI9B,MAAM6B,EAAI9K,OAAS,GAAG4I,KAAK,KACvC,OAAOkC,EAAMtH,KAAKoH,gBAAkB,KAAOG,EAAI,KAIvDC,WAAW,SAASlC,EAAOmC,GACnB,IAAI9C,EACA8B,EACAiB,EAwDJ,GAtDI1H,KAAK6D,QAAQkD,kBAEbW,EAAS,CACLnI,SAAUS,KAAKT,SACfmE,OAAQ,CACJvD,WAAYH,KAAK0D,OAAOvD,WACxBuF,UAAW1F,KAAK0F,UAChBtF,aAAcJ,KAAK0D,OAAOtD,aAC1BuF,YAAa3F,KAAK0D,OAAOiC,aAE7BtG,OAAQW,KAAKX,OACbiG,MAAOtF,KAAKsF,MACZqC,QAAS3H,KAAK2H,QACdvB,QAASpG,KAAKoG,QACd9G,OAAQU,KAAKV,OACbgH,OAAQtG,KAAKsG,OACbL,MAAOjG,KAAKiG,MACZD,OAAQhG,KAAKgG,OACbjI,GAAIiC,KAAKjC,GACTsI,eAAgBrG,KAAKqG,eAAerD,MAAM,GAC1CmD,KAAMnG,KAAKmG,MAEXnG,KAAK6D,QAAQD,SACb8D,EAAOhE,OAAOkC,MAAQ5F,KAAK0D,OAAOkC,MAAM5C,MAAM,MAItDyD,EAAQnB,EAAM,GAAGA,MAAM,sBAEnBtF,KAAKT,UAAYkH,EAAMjK,QAE3BwD,KAAK0D,OAAS,CACVvD,WAAYH,KAAK0D,OAAOgC,UACxBA,UAAW1F,KAAKT,SAAW,EAC3Ba,aAAcJ,KAAK0D,OAAOiC,YAC1BA,YAAac,EACAA,EAAMA,EAAMjK,OAAS,GAAGA,OAASiK,EAAMA,EAAMjK,OAAS,GAAG8I,MAAM,UAAU,GAAG9I,OAC5EwD,KAAK0D,OAAOiC,YAAcL,EAAM,GAAG9I,QAEpDwD,KAAKX,QAAUiG,EAAM,GACrBtF,KAAKsF,OAASA,EAAM,GACpBtF,KAAK2H,QAAUrC,EACftF,KAAKV,OAASU,KAAKX,OAAO7C,OACtBwD,KAAK6D,QAAQD,SACb5D,KAAK0D,OAAOkC,MAAQ,CAAC5F,KAAKsG,OAAQtG,KAAKsG,QAAUtG,KAAKV,SAE1DU,KAAKiG,OAAQ,EACbjG,KAAKkG,YAAa,EAClBlG,KAAKgG,OAAShG,KAAKgG,OAAOhD,MAAMsC,EAAM,GAAG9I,QACzCwD,KAAKoG,SAAWd,EAAM,GACtBX,EAAQ3E,KAAKZ,cAAc6D,KAAKjD,KAAMA,KAAKjC,GAAIiC,KAAMyH,EAAczH,KAAKqG,eAAerG,KAAKqG,eAAe7J,OAAS,IAChHwD,KAAKmG,MAAQnG,KAAKgG,SAClBhG,KAAKmG,MAAO,GAEZxB,EACA,OAAOA,EACJ,GAAI3E,KAAKkG,WAAY,CAExB,IAAK,IAAI7J,KAAKqL,EACV1H,KAAK3D,GAAKqL,EAAOrL,GAErB,OAAO,EAEX,OAAO,GAIfgL,KAAK,WACG,GAAIrH,KAAKmG,KACL,OAAOnG,KAAK8C,IAMhB,IAAI6B,EACAW,EACAsC,EACAC,EAPC7H,KAAKgG,SACNhG,KAAKmG,MAAO,GAOXnG,KAAKiG,QACNjG,KAAKX,OAAS,GACdW,KAAKsF,MAAQ,IAGjB,IADA,IAAIwC,EAAQ9H,KAAK+H,gBACRC,EAAI,EAAGA,EAAIF,EAAMtL,OAAQwL,IAE9B,IADAJ,EAAY5H,KAAKgG,OAAOV,MAAMtF,KAAK8H,MAAMA,EAAME,SAC5B1C,GAASsC,EAAU,GAAGpL,OAAS8I,EAAM,GAAG9I,QAAS,CAGhE,GAFA8I,EAAQsC,EACRC,EAAQG,EACJhI,KAAK6D,QAAQkD,gBAAiB,CAE9B,IAAc,KADdpC,EAAQ3E,KAAKwH,WAAWI,EAAWE,EAAME,KAErC,OAAOrD,EACJ,GAAI3E,KAAKkG,WAAY,CACxBZ,GAAQ,EACR,SAGA,OAAO,EAER,IAAKtF,KAAK6D,QAAQoE,KACrB,MAIZ,OAAI3C,GAEc,KADdX,EAAQ3E,KAAKwH,WAAWlC,EAAOwC,EAAMD,MAE1BlD,EAKK,KAAhB3E,KAAKgG,OACEhG,KAAK8C,IAEL9C,KAAKgC,WAAW,0BAA4BhC,KAAKT,SAAW,GAAK,yBAA2BS,KAAKmF,eAAgB,CACpHE,KAAM,GACNV,MAAO,KACPY,KAAMvF,KAAKT,YAM3BmF,IAAI,WACI,IAAIL,EAAIrE,KAAKqH,OACb,OAAIhD,GAGOrE,KAAK0E,OAKxBwD,MAAM,SAAgBC,GACdnI,KAAKqG,eAAetG,KAAKoI,IAIjCC,SAAS,WAED,OADQpI,KAAKqG,eAAe7J,OAAS,EAC7B,EACGwD,KAAKqG,eAAegC,MAEpBrI,KAAKqG,eAAe,IAKvC0B,cAAc,WACN,OAAI/H,KAAKqG,eAAe7J,QAAUwD,KAAKqG,eAAerG,KAAKqG,eAAe7J,OAAS,GACxEwD,KAAKsI,WAAWtI,KAAKqG,eAAerG,KAAKqG,eAAe7J,OAAS,IAAIsL,MAErE9H,KAAKsI,WAAL,QAA2BR,OAK9CS,SAAS,SAAmBxE,GAEpB,OADAA,EAAI/D,KAAKqG,eAAe7J,OAAS,EAAIgM,KAAKC,IAAI1E,GAAK,KAC1C,EACE/D,KAAKqG,eAAetC,GAEpB,WAKnB2E,UAAU,SAAoBP,GACtBnI,KAAKkI,MAAMC,IAInBQ,eAAe,WACP,OAAO3I,KAAKqG,eAAe7J,QAEnCqH,QAAS,CAAC,oBAAmB,GAC7BzE,cAAe,SAAmBrB,EAAG6K,EAAIC,EAA0BC,GAEnE,OAAOD,GACP,KAAK,EAEL,KAAK,EACL,MACA,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,EAEd,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GACmCE,QAAQC,IAAI,+BAA8BJ,EAAIvJ,OAAS,kBAAoBuJ,EAAIlF,OAAOvD,WAAa,oBAAsByI,EAAIlF,OAAOtD,gBAK5K0H,MAAO,CAAC,YAAY,oCAAoC,UAAU,UAAU,WAAW,UAAU,WAAW,uBAAuB,uBAAuB,mJAAiF,+CAA+C,aAAa,aAAa,cAAc,eAAe,eAAe,gBAAgB,UAAU,WAC1XQ,WAAY,CAAC,QAAU,CAAC,MAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,WAAY,KAK7F,SAASW,IACPjJ,KAAKjC,GAAK,GAGZ,OALAF,EAAOsF,MAAQA,EAIf8F,EAAO1F,UAAY1F,EAAOA,EAAOoL,OAASA,EACnC,IAAIA,EAtuBW,GA2uBtBC,EAAQrL,OAAS1B,EACjB+M,EAAQD,OAAS9M,EAAe8M,OAChCC,EAAQ5G,MAAQ,WAAc,OAAOnG,EAAemG,MAAMuD,MAAM1J,EAAgB+G,YAChFgG,EAAQC,KAAO,SAAuBpG,GAC7BA,EAAK,KACNgG,QAAQC,IAAI,UAAUjG,EAAK,GAAG,SAC9BqG,EAAQC,KAAK,IAEjB,IAAIC,EAASvD,EAAQ,IAAMwD,aAAaxD,EAAQ,IAAQyD,UAAUzG,EAAK,IAAK,QAC5E,OAAOmG,EAAQrL,OAAOyE,MAAMgH,IAEKvD,WAAiB0D,GACpDP,EAAQC,KAAKC,EAAQM,KAAK1G,MAAM,M,gDCh0BlC,cAyEA,IAAI2G,EAAa,WACjB,IA0yBQC,EA1yBJxN,EAAE,SAASC,EAAEC,EAAEF,EAAEG,GAAG,IAAIH,EAAEA,GAAG,GAAGG,EAAEF,EAAEG,OAAOD,IAAIH,EAAEC,EAAEE,IAAID,GAAG,OAAOF,GAAGK,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIiM,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAI,CAAC,EAAE,EAAE,IACxb1M,EAAS,CAACC,MAAO,aACrBC,GAAI,GACJC,SAAU,CAAC,MAAQ,EAAE,KAAO,EAAE,MAAQ,EAAE,IAAI,EAAE,GAAK,EAAE,eAAiB,EAAE,MAAQ,EAAE,MAAQ,EAAE,KAAO,GAAG,IAAM,GAAG,MAAQ,GAAG,WAAa,GAAG,IAAI,GAAG,UAAY,GAAG,SAAW,GAAG,IAAI,GAAG,QAAU,GAAG,QAAU,GAAG,SAAW,GAAG,YAAc,GAAG,UAAY,GAAG,WAAa,GAAG,SAAW,GAAG,OAAS,GAAG,OAAS,GAAG,QAAU,EAAE,KAAO,GACtUC,WAAY,CAACC,EAAE,QAAQC,EAAE,QAAQC,EAAE,IAAIC,EAAE,KAAKC,EAAE,QAAQsC,GAAG,MAAMpC,GAAG,IAAIuC,GAAG,IAAItC,GAAG,UAAUC,GAAG,UAAUC,GAAG,WAAWC,GAAG,cAAcC,GAAG,YAAYC,GAAG,aAAaC,GAAG,WAAWC,GAAG,SAASC,GAAG,UACpME,aAAccAAe,SAAmBC,EAAQC,EAAQC,EAAUxB,EAAIyB,EAAyBC,EAAiBC,GAG1G,IAAIC,EAAKF,EAAGjD,OAAS,EACrB,OAAQgD,GACR,KAAK,EAkBG,OAhBAgL,EAAYzK,KAAK,mDACjB0K,EAAc1K,KAAK,yBACnB2K,IACAC,EAAKC,UAAU,IAAIF,EAAS,IAC5BA,IACAC,EAAKC,UAAU,IAAIF,EAAS,IAC5BA,IACAC,EAAKC,UAAU,KAAKF,EAAS,IAC7BA,IACAC,EAAKC,UAAU,iBAAiBF,EAASjL,EAAGE,EAAG,IAC/C+K,IACAC,EAAKC,UAAU,IAAIF,EAAS,IAC5BA,IACAC,EAAKC,UAAU,IAAIF,EAAS,IAC5BA,IACAC,EAAKC,UAAU,QAAQF,EAASjL,EAAGE,IAC5B,CAACkL,kBAAmB,CAACL,EAAYC,GAAeK,WAAYH,GAG3E,KAAK,EAMG,OAJAH,EAAYzK,KAAK,iBACjB0K,EAAc1K,KAAK,yBACnB2K,IACAC,EAAKC,UAAU,QAAQF,EAASjL,EAAGE,IAC5B,CAACkL,kBAAmBE,EAAMD,WAAYH,GAGrD,KAAK,EAEGH,EAAYzK,KAAK,2BACjB0K,EAAc1K,KAAK,gDACnB2K,IACAd,EAAU,IAAIoB,EAAQ,QAAQN,EAASjL,EAAGE,EAAG,IAC7CsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,OAAON,EAASjL,EAAGE,EAAG,IAC5CsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,MAAMN,EAASjL,EAAGE,IACxCsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGT,EAAYzK,KAAK,uBACjB0K,EAAc1K,KAAK,wBACnB2K,IACAd,EAAU,IAAIoB,EAAQ,OAAON,EAASjL,EAAGE,EAAG,IAC5CsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,QAAQN,EAASjL,EAAGE,IAC1CsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGT,EAAYzK,KAAK,gBACjB0K,EAAc1K,KAAK,gBAEnB2K,IACAd,EAAU,IAAIoB,EAAQ,MAAMN,EAAS,IACrCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGT,EAAYzK,KAAK,mBACjB0K,EAAc1K,KAAK,mBAEnB2K,IACAd,EAAU,IAAIoB,EAAQ,SAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGT,EAAYzK,KAAK,qEACjB0K,EAAc1K,KAAK,gFACnB2K,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,iBAAiBN,EAASjL,EAAGE,EAAG,IACtDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,aAAaN,EAASjL,EAAGE,EAAG,IAClDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGT,EAAYzK,KAAK,oEACjB0K,EAAc1K,KAAK,8EACnB2K,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,iBAAiBN,EAASjL,EAAGE,EAAG,IACtDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,EAAG,IACjDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGT,EAAYzK,KAAK,2CACjB0K,EAAc1K,KAAK,oEACnB2K,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,iBAAiBN,EAASjL,EAAGE,EAAG,IACtDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,sDACjB0K,EAAc1K,KAAK,gEACnB2K,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,aAAaN,EAASjL,EAAGE,EAAG,IAClDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,qDACjB0K,EAAc1K,KAAK,gEACnB2K,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,EAAG,IACjDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,4BACjB0K,EAAc1K,KAAK,oDACnB2K,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,iCACjB0K,EAAc1K,KAAK,+DACnB2K,IACAd,EAAU,IAAIoB,EAAQ,aAAaN,EAASjL,EAAGE,EAAG,IAClDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,OAAON,EAASjL,EAAGE,IACzCsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,sBACjB0K,EAAc1K,KAAK,6BACnB2K,IACAd,EAAU,IAAIoB,EAAQ,OAAON,EAASjL,EAAGE,IACzCsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,6CACjB0K,EAAc1K,KAAK,8EACnB2K,IACAd,EAAU,IAAIoB,EAAQ,iBAAiBN,EAASjL,EAAGE,EAAG,IACtDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,WAAWN,EAASjL,EAAGE,IAC7CsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,8BACjB0K,EAAc1K,KAAK,+BACnB2K,IACAd,EAAU,IAAIoB,EAAQ,WAAWN,EAASjL,EAAGE,IAC7CsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,4BACjB0K,EAAc1K,KAAK,mDACnB2K,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,UAAUN,EAAS,IACzCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,4BACjB0K,EAAc1K,KAAK,uDACnB2K,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,UAAUN,EAAS,IACzCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,kCACjB0K,EAAc1K,KAAK,4CACnB2K,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,EAAG,IACjDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,UAAUN,EAAS,IACzCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,kCACjB0K,EAAc1K,KAAK,4CACnB2K,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,EAAG,IACjDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,UAAUN,EAAS,IACzCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,6BACjB0K,EAAc1K,KAAK,uCACnB2K,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,EAAG,IACjDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,mCACjB0K,EAAc1K,KAAK,6CACnB2K,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,EAAG,IACjDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,WAAWN,EAAS,IAC1CO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,sCACjB0K,EAAc1K,KAAK,gDACnB2K,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,EAAG,IACjDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,cAAcN,EAAS,IAC7CO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,oCACjB0K,EAAc1K,KAAK,8CACnB2K,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,EAAG,IACjDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAAS,IAC3CO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,qCACjB0K,EAAc1K,KAAK,+CACnB2K,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,EAAG,IACjDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,aAAaN,EAAS,IAC5CO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,mCACjB0K,EAAc1K,KAAK,6CACnB2K,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,EAAG,IACjDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,WAAWN,EAAS,IAC1CO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,iCACjB0K,EAAc1K,KAAK,2CACnB2K,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,EAAG,IACjDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,SAASN,EAAS,IACxCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,iCACjB0K,EAAc1K,KAAK,2CACnB2K,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,EAAG,IACjDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,SAASN,EAAS,IACxCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,4BACjB0K,EAAc1K,KAAK,sCACnB2K,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,EAAG,IACjDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,4BACjB0K,EAAc1K,KAAK,sCACnB2K,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,EAAG,IACjDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAI,IAC1BC,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,wBACjB0K,EAAc1K,KAAK,4BACnB2K,IACAd,EAAU,IAAIoB,EAAQ,UAAUN,EAAS,IACzCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,wBACjB0K,EAAc1K,KAAK,4BACnB2K,IACAd,EAAU,IAAIoB,EAAQ,UAAUN,EAAS,IACzCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,mBACjB0K,EAAc1K,KAAK,uBACnB2K,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,uBACjB0K,EAAc1K,KAAK,2BACnB2K,IACAd,EAAU,IAAIoB,EAAQ,SAASN,EAAS,IACxCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,yBACjB0K,EAAc1K,KAAK,6BACnB2K,IACAd,EAAU,IAAIoB,EAAQ,WAAWN,EAAS,IAC1CO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,4BACjB0K,EAAc1K,KAAK,gCACnB2K,IACAd,EAAU,IAAIoB,EAAQ,cAAcN,EAAS,IAC7CO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,0BACjB0K,EAAc1K,KAAK,8BACnB2K,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAAS,IAC3CO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,2BACjB0K,EAAc1K,KAAK,+BACnB2K,IACAd,EAAU,IAAIoB,EAAQ,aAAaN,EAAS,IAC5CO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,yBACjB0K,EAAc1K,KAAK,6BACnB2K,IACAd,EAAU,IAAIoB,EAAQ,WAAWN,EAAS,IAC1CO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,uBACjB0K,EAAc1K,KAAK,2BACnB2K,IACAd,EAAU,IAAIoB,EAAQ,SAASN,EAAS,IACxCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,kBACjB0K,EAAc1K,KAAK,sBACnB2K,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,kBACjB0K,EAAc1K,KAAK,sBACnB2K,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,KAKhB1K,MAAO,CAAC,CAACC,EAAE,EAAErC,EAAE,CAAC,EAAE,GAAGsC,EAAE,EAAEC,GAAG,GAAG,CAACC,EAAE,CAAC,IAAI,CAACvC,EAAE,CAAC,EAAE,GAAGC,EAAE5B,GAAK,CAACkE,EAAE,CAAC,EAAE,GAAGxC,EAAEzB,EAAIgE,GAAG,GAAGtE,EAAEO,EAAI,CAAC,EAAE,GAAG,CAAC4B,GAAG,EAAEqC,GAAG,CAAC,EAAE,MAAM,CAACvC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAEzB,EAAIkE,EAAE,GAAGxC,EAAE,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIqC,GAAG,IAAI,CAACD,GAAG,CAAC,EAAE,KAAK,CAACvC,EAAE5B,GAAKL,EAAEO,EAAI,CAAC,EAAE,IAAIP,EAAEO,EAAI,CAAC,EAAE,IAAI,CAAC0B,EAAEzB,EAAIkE,EAAE,GAAGD,GAAG,IAAI,CAACxC,EAAEzB,EAAI0B,EAAE,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIqC,GAAG,IAAI,CAAC1C,EAAEzB,EAAI2B,EAAExB,EAAI6D,GAAG,GAAGM,GAAG,GAAGxC,GAAG1B,EAAImE,GAAG,GAAGF,GAAGhE,EAAI0B,GAAGzB,EAAI0B,GAAGzB,EAAI0B,GAAGzB,EAAI0B,GAAGzB,EAAI0B,GAAGzB,EAAI0B,GAAGzB,EAAI0B,GAAGzB,EAAI0B,GAAGzB,EAAI0B,GAAGzB,GAAK,CAACc,EAAE,CAAC,EAAE,KAAKlC,EAAEqB,EAAI,CAAC,EAAE,KAAK,CAACsD,GAAG,CAAC,EAAE,KAAK3E,EAAEO,EAAI,CAAC,EAAE,IAAI,CAACyB,EAAE,CAAC,EAAE,IAAIC,EAAEzB,EAAIiE,GAAG,IAAI,CAAC1C,EAAEzB,EAAI2B,EAAExB,EAAI6D,GAAG,GAAGM,GAAG,GAAGxC,GAAG1B,EAAImE,GAAG,GAAGF,GAAGhE,EAAI0B,GAAGzB,EAAI0B,GAAGzB,EAAI0B,GAAGzB,EAAI0B,GAAGzB,EAAI0B,GAAGzB,EAAI0B,GAAGzB,EAAI0B,GAAGzB,EAAI0B,GAAGzB,EAAI0B,GAAGzB,GAAK,CAACc,EAAE,CAAC,EAAE,KAAKlC,EAAEqB,EAAI,CAAC,EAAE,KAAK,CAACU,EAAE,CAAC,EAAE,IAAIuC,GAAG,IAAI,CAACvC,EAAE,CAAC,EAAE,IAAIE,EAAEX,EAAIc,GAAGb,EAAIoD,GAAGnD,EAAIa,GAAGoL,EAAInL,GAAGoL,EAAInL,GAAGoL,EAAInL,GAAGoL,EAAInL,GAAGoL,EAAInL,GAAGoL,EAAInL,GAAGoL,EAAInL,GAAGoL,EAAInL,GAAGoL,GAAK,CAAClM,EAAE,CAAC,EAAE,KAAK/B,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEmO,EAAI,CAAC,EAAE,KAAK,CAAC9L,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACJ,EAAE,CAAC,EAAE,KAAK,CAACH,EAAE,CAAC,EAAE,IAAIuC,GAAG,IAAI,CAACvC,EAAE,CAAC,EAAE,IAAIE,EAAEX,EAAIc,GAAGb,EAAIoD,GAAGnD,EAAIa,GAAGoL,EAAInL,GAAGoL,EAAInL,GAAGoL,EAAInL,GAAGoL,EAAInL,GAAGoL,EAAInL,GAAGoL,EAAInL,GAAGoL,EAAInL,GAAGoL,EAAInL,GAAGoL,GAAKjO,EAAEmO,EAAI,CAAC,EAAE,IAAI,CAAClM,EAAE5B,EAAI+B,GAAG,CAAC,EAAE,KAAK,CAACL,EAAE,CAAC,EAAE,KAAK,CAACK,GAAG,CAAC,EAAE,KAAKpC,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEkO,EAAI,CAAC,EAAE,KAAKlO,EAAEqB,EAAI,CAAC,EAAE,KAAKrB,EAAEqB,EAAI,CAAC,EAAE,KAAK,CAACU,EAAEzB,EAAI+D,EAAE,GAAGC,GAAG,GAAG,CAACrC,EAAE5B,EAAI+B,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAACH,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACsC,EAAE,CAAC,EAAE,GAAGxC,EAAEzB,EAAIgE,GAAG,GAAG,CAACrC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAKlC,EAAEmO,EAAI,CAAC,EAAE,KAAKnO,EAAEmO,EAAI,CAAC,EAAE,KAAKnO,EAAEmO,EAAI,CAAC,EAAE,IAAInO,EAAEmO,EAAI,CAAC,EAAE,KACl8CrJ,eAAgB,CAACnC,GAAG,CAAC,EAAE,IAAImM,GAAG,CAAC,EAAE,KACjClJ,WAAY,SAAqBC,EAAKC,GAClC,IAAIA,EAAKC,YAEF,CACH,IAAIC,EAAQ,IAAIC,MAAMJ,GAEtB,MADAG,EAAMF,KAAOA,EACPE,EAJNpC,KAAKlC,MAAMmE,IAOnBK,MAAO,SAAeC,GAClB,IAAIC,EAAOxC,KAAMyC,EAAQ,CAAC,GAAiBC,EAAS,CAAC,MAAOC,EAAS,GAAIpC,EAAQP,KAAKO,MAAOlB,EAAS,GAAIE,EAAW,EAAGD,EAAS,EAAGsD,EAAa,EAAGC,EAAS,EAAGC,EAAM,EAClKC,EAAOJ,EAAOK,MAAMC,KAAKC,UAAW,GACpCC,EAAQC,OAAOC,OAAOrD,KAAKmD,OAC3BG,EAAc,CAAEvF,GAAI,IACxB,IAAK,IAAI1B,KAAK2D,KAAKjC,GACXqF,OAAOG,UAAUC,eAAeP,KAAKjD,KAAKjC,GAAI1B,KAC9CiH,EAAYvF,GAAG1B,GAAK2D,KAAKjC,GAAG1B,IAGpC8G,EAAMM,SAASlB,EAAOe,EAAYvF,IAClCuF,EAAYvF,GAAGoF,MAAQA,EACvBG,EAAYvF,GAAGF,OAASmC,KACG,oBAAhBmD,EAAMO,SACbP,EAAMO,OAAS,IAEnB,IAAIC,EAAQR,EAAMO,OAClBf,EAAO5C,KAAK4D,GACZ,IAAIC,EAAST,EAAMU,SAAWV,EAAMU,QAAQD,OACH,oBAA9BN,EAAYvF,GAAGiE,WACtBhC,KAAKgC,WAAasB,EAAYvF,GAAGiE,WAEjChC,KAAKgC,WAAaoB,OAAOY,eAAehE,MAAMgC,WAiBlD,IATI,IAQAiC,EAAQC,EAAgBC,EAAOC,EAAWC,EAAeC,EAAGC,EAAKC,EAAUC,EARvEC,EAAM,WACN,IAAIC,EAKJ,MAHqB,kBADrBA,EAAQxB,EAAMuB,OAAS5B,KAEnB6B,EAAQnC,EAAKxE,SAAS2G,IAAUA,GAE7BA,GAEkCC,EAAQ,KAC5C,CAUG,GATZT,EAAQ1B,EAAMA,EAAMjG,OAAS,GACzBwD,KAAKkB,eAAeiD,GACpBC,EAASpE,KAAKkB,eAAeiD,IAEd,OAAXF,GAAoC,oBAAVA,IAC1BA,EAASS,KAEbN,EAAS7D,EAAM4D,IAAU5D,EAAM4D,GAAOF,IAER,qBAAXG,IAA2BA,EAAO5H,SAAW4H,EAAO,GAAI,CACvE,IAAIc,EAAS,GAEb,IAAKZ,KADLG,EAAW,GACDlE,EAAM4D,GACRnE,KAAK/B,WAAWqG,IAAMA,EAAIzB,GAC1B4B,EAAS1E,KAAK,IAAOC,KAAK/B,WAAWqG,GAAK,KAI9CY,EADA/B,EAAMgC,aACG,wBAA0B5F,EAAW,GAAK,MAAQ4D,EAAMgC,eAAiB,eAAiBV,EAASW,KAAK,MAAQ,WAAcpF,KAAK/B,WAAWgG,IAAWA,GAAU,IAEnK,wBAA0B1E,EAAW,GAAK,iBAAmB0E,GAAUnB,EAAM,eAAiB,KAAQ9C,KAAK/B,WAAWgG,IAAWA,GAAU,KAExJjE,KAAKgC,WAAWkD,EAAQ,CACpBG,KAAMlC,EAAMmC,MACZX,MAAO3E,KAAK/B,WAAWgG,IAAWA,EAClCsB,KAAMpC,EAAM5D,SACZiG,IAAK7B,EACLc,SAAUA,IAGtB,GAAIL,EAAO,aAAcqB,OAASrB,EAAO5H,OAAS,EAC9C,MAAM,IAAI6F,MAAM,oDAAsD8B,EAAQ,YAAcF,GAEhG,OAAQG,EAAO,IACf,KAAK,EACD3B,EAAM1C,KAAKkE,GACXvB,EAAO3C,KAAKoD,EAAM9D,QAClBsD,EAAO5C,KAAKoD,EAAMO,QAClBjB,EAAM1C,KAAKqE,EAAO,IAClBH,EAAS,KACJC,GASDD,EAASC,EACTA,EAAiB,OATjB5E,EAAS6D,EAAM7D,OACfD,EAAS8D,EAAM9D,OACfE,EAAW4D,EAAM5D,SACjBoE,EAAQR,EAAMO,OACVd,EAAa,GACbA,KAMR,MACJ,KAAK,EAwBD,GAvBA2B,EAAMvE,KAAKb,aAAaiF,EAAO,IAAI,GACnCQ,EAAM3E,EAAIyC,EAAOA,EAAOlG,OAAS+H,GACjCK,EAAMlF,GAAK,CACPS,WAAYwC,EAAOA,EAAOnG,QAAU+H,GAAO,IAAIpE,WAC/CuF,UAAW/C,EAAOA,EAAOnG,OAAS,GAAGkJ,UACrCtF,aAAcuC,EAAOA,EAAOnG,QAAU+H,GAAO,IAAInE,aACjDuF,YAAahD,EAAOA,EAAOnG,OAAS,GAAGmJ,aAEvC/B,IACAgB,EAAMlF,GAAGkG,MAAQ,CACbjD,EAAOA,EAAOnG,QAAU+H,GAAO,IAAIqB,MAAM,GACzCjD,EAAOA,EAAOnG,OAAS,GAAGoJ,MAAM,KAYvB,qBATjBvB,EAAIrE,KAAKZ,cAAcyG,MAAMjB,EAAO,CAChCvF,EACAC,EACAC,EACA+D,EAAYvF,GACZqG,EAAO,GACP1B,EACAC,GACFmD,OAAO/C,KAEL,OAAOsB,EAEPE,IACA9B,EAAQA,EAAMO,MAAM,GAAI,EAAIuB,EAAM,GAClC7B,EAASA,EAAOM,MAAM,GAAI,EAAIuB,GAC9B5B,EAASA,EAAOK,MAAM,GAAI,EAAIuB,IAElC9B,EAAM1C,KAAKC,KAAKb,aAAaiF,EAAO,IAAI,IACxC1B,EAAO3C,KAAK6E,EAAM3E,GAClB0C,EAAO5C,KAAK6E,EAAMlF,IAClB8E,EAAWjE,EAAMkC,EAAMA,EAAMjG,OAAS,IAAIiG,EAAMA,EAAMjG,OAAS,IAC/DiG,EAAM1C,KAAKyE,GACX,MACJ,KAAK,EACD,OAAO,GAGf,OAAO,IAGAwG,EAAWjF,EAAQ,IAAnBiF,QACHL,EAAO,IAAIK,EAAQ,OAAO,EAAE,IAE5BC,EAAQ,GACRP,EAAW,EACXK,EAAQ,GACRP,EAAc,GACdC,EAAgB,GAEpBtH,EACS,CAEbL,IAAI,EAEJd,WAAW,SAAoBC,EAAKC,GAC5B,IAAIlC,KAAKjC,GAAGF,OAGR,MAAM,IAAIwE,MAAMJ,GAFhBjC,KAAKjC,GAAGF,OAAOmE,WAAWC,EAAKC,IAO3CuB,SAAS,SAAUlB,EAAOxE,GAiBlB,OAhBAiC,KAAKjC,GAAKA,GAAMiC,KAAKjC,IAAM,GAC3BiC,KAAKgG,OAASzD,EACdvC,KAAKiG,MAAQjG,KAAKkG,WAAalG,KAAKmG,MAAO,EAC3CnG,KAAKT,SAAWS,KAAKV,OAAS,EAC9BU,KAAKX,OAASW,KAAKoG,QAAUpG,KAAKsF,MAAQ,GAC1CtF,KAAKqG,eAAiB,CAAC,WACvBrG,KAAK0D,OAAS,CACVvD,WAAY,EACZC,aAAc,EACdsF,UAAW,EACXC,YAAa,GAEb3F,KAAK6D,QAAQD,SACb5D,KAAK0D,OAAOkC,MAAQ,CAAC,EAAE,IAE3B5F,KAAKsG,OAAS,EACPtG,MAIfuC,MAAM,WACE,IAAIgE,EAAKvG,KAAKgG,OAAO,GAkBrB,OAjBAhG,KAAKX,QAAUkH,EACfvG,KAAKV,SACLU,KAAKsG,SACLtG,KAAKsF,OAASiB,EACdvG,KAAKoG,SAAWG,EACJA,EAAGjB,MAAM,oBAEjBtF,KAAKT,WACLS,KAAK0D,OAAOgC,aAEZ1F,KAAK0D,OAAOiC,cAEZ3F,KAAK6D,QAAQD,QACb5D,KAAK0D,OAAOkC,MAAM,KAGtB5F,KAAKgG,OAAShG,KAAKgG,OAAOhD,MAAM,GACzBuD,GAIfC,MAAM,SAAUD,GACR,IAAIhC,EAAMgC,EAAG/J,OACTiK,EAAQF,EAAGG,MAAM,iBAErB1G,KAAKgG,OAASO,EAAKvG,KAAKgG,OACxBhG,KAAKX,OAASW,KAAKX,OAAOsH,OAAO,EAAG3G,KAAKX,OAAO7C,OAAS+H,GAEzDvE,KAAKsG,QAAU/B,EACf,IAAIqC,EAAW5G,KAAKsF,MAAMoB,MAAM,iBAChC1G,KAAKsF,MAAQtF,KAAKsF,MAAMqB,OAAO,EAAG3G,KAAKsF,MAAM9I,OAAS,GACtDwD,KAAKoG,QAAUpG,KAAKoG,QAAQO,OAAO,EAAG3G,KAAKoG,QAAQ5J,OAAS,GAExDiK,EAAMjK,OAAS,IACfwD,KAAKT,UAAYkH,EAAMjK,OAAS,GAEpC,IAAI6H,EAAIrE,KAAK0D,OAAOkC,MAgBpB,OAdA5F,KAAK0D,OAAS,CACVvD,WAAYH,KAAK0D,OAAOvD,WACxBuF,UAAW1F,KAAKT,SAAW,EAC3Ba,aAAcJ,KAAK0D,OAAOtD,aAC1BuF,YAAac,GACRA,EAAMjK,SAAWoK,EAASpK,OAASwD,KAAK0D,OAAOtD,aAAe,GAC5DwG,EAASA,EAASpK,OAASiK,EAAMjK,QAAQA,OAASiK,EAAM,GAAGjK,OAChEwD,KAAK0D,OAAOtD,aAAemE,GAG7BvE,KAAK6D,QAAQD,SACb5D,KAAK0D,OAAOkC,MAAQ,CAACvB,EAAE,GAAIA,EAAE,GAAKrE,KAAKV,OAASiF,IAEpDvE,KAAKV,OAASU,KAAKX,OAAO7C,OACnBwD,MAIf6G,KAAK,WAEG,OADA7G,KAAKiG,OAAQ,EACNjG,MAIf8G,OAAO,WACC,OAAI9G,KAAK6D,QAAQkD,iBACb/G,KAAKkG,YAAa,EASflG,MAPIA,KAAKgC,WAAW,0BAA4BhC,KAAKT,SAAW,GAAK,mIAAqIS,KAAKmF,eAAgB,CAC9NE,KAAM,GACNV,MAAO,KACPY,KAAMvF,KAAKT,YAQ3ByH,KAAK,SAAUjD,GACP/D,KAAKwG,MAAMxG,KAAKsF,MAAMtC,MAAMe,KAIpCkD,UAAU,WACF,IAAIC,EAAOlH,KAAKoG,QAAQO,OAAO,EAAG3G,KAAKoG,QAAQ5J,OAASwD,KAAKsF,MAAM9I,QACnE,OAAQ0K,EAAK1K,OAAS,GAAK,MAAM,IAAM0K,EAAKP,QAAQ,IAAIQ,QAAQ,MAAO,KAI/EC,cAAc,WACN,IAAIC,EAAOrH,KAAKsF,MAIhB,OAHI+B,EAAK7K,OAAS,KACd6K,GAAQrH,KAAKgG,OAAOW,OAAO,EAAG,GAAGU,EAAK7K,UAElC6K,EAAKV,OAAO,EAAE,KAAOU,EAAK7K,OAAS,GAAK,MAAQ,KAAK2K,QAAQ,MAAO,KAIpFhC,aAAa,WACL,IAAImC,EAAMtH,KAAKiH,YACXM,EAAI,IAAI9B,MAAM6B,EAAI9K,OAAS,GAAG4I,KAAK,KACvC,OAAOkC,EAAMtH,KAAKoH,gBAAkB,KAAOG,EAAI,KAIvDC,WAAW,SAASlC,EAAOmC,GACnB,IAAI9C,EACA8B,EACAiB,EAwDJ,GAtDI1H,KAAK6D,QAAQkD,kBAEbW,EAAS,CACLnI,SAAUS,KAAKT,SACfmE,OAAQ,CACJvD,WAAYH,KAAK0D,OAAOvD,WACxBuF,UAAW1F,KAAK0F,UAChBtF,aAAcJ,KAAK0D,OAAOtD,aAC1BuF,YAAa3F,KAAK0D,OAAOiC,aAE7BtG,OAAQW,KAAKX,OACbiG,MAAOtF,KAAKsF,MACZqC,QAAS3H,KAAK2H,QACdvB,QAASpG,KAAKoG,QACd9G,OAAQU,KAAKV,OACbgH,OAAQtG,KAAKsG,OACbL,MAAOjG,KAAKiG,MACZD,OAAQhG,KAAKgG,OACbjI,GAAIiC,KAAKjC,GACTsI,eAAgBrG,KAAKqG,eAAerD,MAAM,GAC1CmD,KAAMnG,KAAKmG,MAEXnG,KAAK6D,QAAQD,SACb8D,EAAOhE,OAAOkC,MAAQ5F,KAAK0D,OAAOkC,MAAM5C,MAAM,MAItDyD,EAAQnB,EAAM,GAAGA,MAAM,sBAEnBtF,KAAKT,UAAYkH,EAAMjK,QAE3BwD,KAAK0D,OAAS,CACVvD,WAAYH,KAAK0D,OAAOgC,UACxBA,UAAW1F,KAAKT,SAAW,EAC3Ba,aAAcJ,KAAK0D,OAAOiC,YAC1BA,YAAac,EACAA,EAAMA,EAAMjK,OAAS,GAAGA,OAASiK,EAAMA,EAAMjK,OAAS,GAAG8I,MAAM,UAAU,GAAG9I,OAC5EwD,KAAK0D,OAAOiC,YAAcL,EAAM,GAAG9I,QAEpDwD,KAAKX,QAAUiG,EAAM,GACrBtF,KAAKsF,OAASA,EAAM,GACpBtF,KAAK2H,QAAUrC,EACftF,KAAKV,OAASU,KAAKX,OAAO7C,OACtBwD,KAAK6D,QAAQD,SACb5D,KAAK0D,OAAOkC,MAAQ,CAAC5F,KAAKsG,OAAQtG,KAAKsG,QAAUtG,KAAKV,SAE1DU,KAAKiG,OAAQ,EACbjG,KAAKkG,YAAa,EAClBlG,KAAKgG,OAAShG,KAAKgG,OAAOhD,MAAMsC,EAAM,GAAG9I,QACzCwD,KAAKoG,SAAWd,EAAM,GACtBX,EAAQ3E,KAAKZ,cAAc6D,KAAKjD,KAAMA,KAAKjC,GAAIiC,KAAMyH,EAAczH,KAAKqG,eAAerG,KAAKqG,eAAe7J,OAAS,IAChHwD,KAAKmG,MAAQnG,KAAKgG,SAClBhG,KAAKmG,MAAO,GAEZxB,EACA,OAAOA,EACJ,GAAI3E,KAAKkG,WAAY,CAExB,IAAK,IAAI7J,KAAKqL,EACV1H,KAAK3D,GAAKqL,EAAOrL,GAErB,OAAO,EAEX,OAAO,GAIfgL,KAAK,WACG,GAAIrH,KAAKmG,KACL,OAAOnG,KAAK8C,IAMhB,IAAI6B,EACAW,EACAsC,EACAC,EAPC7H,KAAKgG,SACNhG,KAAKmG,MAAO,GAOXnG,KAAKiG,QACNjG,KAAKX,OAAS,GACdW,KAAKsF,MAAQ,IAGjB,IADA,IAAIwC,EAAQ9H,KAAK+H,gBACRC,EAAI,EAAGA,EAAIF,EAAMtL,OAAQwL,IAE9B,IADAJ,EAAY5H,KAAKgG,OAAOV,MAAMtF,KAAK8H,MAAMA,EAAME,SAC5B1C,GAASsC,EAAU,GAAGpL,OAAS8I,EAAM,GAAG9I,QAAS,CAGhE,GAFA8I,EAAQsC,EACRC,EAAQG,EACJhI,KAAK6D,QAAQkD,gBAAiB,CAE9B,IAAc,KADdpC,EAAQ3E,KAAKwH,WAAWI,EAAWE,EAAME,KAErC,OAAOrD,EACJ,GAAI3E,KAAKkG,WAAY,CACxBZ,GAAQ,EACR,SAGA,OAAO,EAER,IAAKtF,KAAK6D,QAAQoE,KACrB,MAIZ,OAAI3C,GAEc,KADdX,EAAQ3E,KAAKwH,WAAWlC,EAAOwC,EAAMD,MAE1BlD,EAKK,KAAhB3E,KAAKgG,OACEhG,KAAK8C,IAEL9C,KAAKgC,WAAW,0BAA4BhC,KAAKT,SAAW,GAAK,yBAA2BS,KAAKmF,eAAgB,CACpHE,KAAM,GACNV,MAAO,KACPY,KAAMvF,KAAKT,YAM3BmF,IAAI,WACI,IAAIL,EAAIrE,KAAKqH,OACb,OAAIhD,GAGOrE,KAAK0E,OAKxBwD,MAAM,SAAgBC,GACdnI,KAAKqG,eAAetG,KAAKoI,IAIjCC,SAAS,WAED,OADQpI,KAAKqG,eAAe7J,OAAS,EAC7B,EACGwD,KAAKqG,eAAegC,MAEpBrI,KAAKqG,eAAe,IAKvC0B,cAAc,WACN,OAAI/H,KAAKqG,eAAe7J,QAAUwD,KAAKqG,eAAerG,KAAKqG,eAAe7J,OAAS,GACxEwD,KAAKsI,WAAWtI,KAAKqG,eAAerG,KAAKqG,eAAe7J,OAAS,IAAIsL,MAErE9H,KAAKsI,WAAL,QAA2BR,OAK9CS,SAAS,SAAmBxE,GAEpB,OADAA,EAAI/D,KAAKqG,eAAe7J,OAAS,EAAIgM,KAAKC,IAAI1E,GAAK,KAC1C,EACE/D,KAAKqG,eAAetC,GAEpB,WAKnB2E,UAAU,SAAoBP,GACtBnI,KAAKkI,MAAMC,IAInBQ,eAAe,WACP,OAAO3I,KAAKqG,eAAe7J,QAEnCqH,QAAS,CAAC,oBAAmB,GAC7BzE,cAAe,SAAmBrB,EAAG6K,EAAIC,EAA0BC,GAEnE,OAAOD,GACP,KAAK,EAEL,KAAK,EACL,MACA,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,EAEd,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GACmCE,QAAQC,IAAI,+BAA8BJ,EAAIvJ,OAAS,kBAAoBuJ,EAAIlF,OAAOvD,WAAa,oBAAsByI,EAAIlF,OAAOtD,gBAK5K0H,MAAO,CAAC,YAAY,oCAAoC,UAAU,UAAU,WAAW,UAAU,WAAW,uBAAuB,uBAAuB,iJAA+E,+CAA+C,aAAa,aAAa,cAAc,eAAe,eAAe,gBAAgB,UAAU,WACxXQ,WAAY,CAAC,QAAU,CAAC,MAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,WAAY,KAK7F,SAASW,IACPjJ,KAAKjC,GAAK,GAGZ,OALAF,EAAOsF,MAAQA,EAIf8F,EAAO1F,UAAY1F,EAAOA,EAAOoL,OAASA,EACnC,IAAIA,EA7qCM,GAkrCjBC,EAAQrL,OAAS8L,EACjBT,EAAQD,OAASU,EAAUV,OAC3BC,EAAQ5G,MAAQ,WAAc,OAAOqH,EAAUrH,MAAMuD,MAAM8D,EAAWzG,YACtEgG,EAAQC,KAAO,SAAuBpG,GAC7BA,EAAK,KACNgG,QAAQC,IAAI,UAAUjG,EAAK,GAAG,SAC9BqG,EAAQC,KAAK,IAEjB,IAAIC,EAASvD,EAAQ,IAAMwD,aAAaxD,EAAQ,IAAQyD,UAAUzG,EAAK,IAAK,QAC5E,OAAOmG,EAAQrL,OAAOyE,MAAMgH,IAEKvD,WAAiB0D,GACpDP,EAAQC,KAAKC,EAAQM,KAAK1G,MAAM,M,gDCvwClC,cAyEA,IAAImI,EAAiB,WACrB,IAqyBQvB,EAryBJxN,EAAE,SAASC,EAAEC,EAAEF,EAAEG,GAAG,IAAIH,EAAEA,GAAG,GAAGG,EAAEF,EAAEG,OAAOD,IAAIH,EAAEC,EAAEE,IAAID,GAAG,OAAOF,GAAGK,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,IAC7QG,EAAS,CAACC,MAAO,aACrBC,GAAI,GACJC,SAAU,CAAC,MAAQ,EAAE,KAAO,EAAE,MAAQ,EAAE,IAAI,EAAE,GAAK,EAAE,eAAiB,EAAE,MAAQ,EAAE,MAAQ,EAAE,KAAO,GAAG,MAAQ,GAAG,IAAM,GAAG,WAAa,GAAG,IAAI,GAAG,UAAY,GAAG,SAAW,GAAG,IAAI,GAAG,QAAU,GAAG,QAAU,GAAG,SAAW,GAAG,YAAc,GAAG,UAAY,GAAG,WAAa,GAAG,SAAW,GAAG,OAAS,GAAG,OAAS,GAAG,QAAU,EAAE,KAAO,GACtUC,WAAY,CAACC,EAAE,QAAQC,EAAE,QAAQC,EAAE,IAAIC,EAAE,KAAKC,EAAE,QAAQC,GAAG,MAAMC,GAAG,IAAIuC,GAAG,IAAItC,GAAG,UAAUC,GAAG,UAAUC,GAAG,WAAWC,GAAG,cAAcC,GAAG,YAAYC,GAAG,aAAaC,GAAG,WAAWC,GAAG,SAASC,GAAG,UACpME,aAAccAAe,SAAmBC,EAAQC,EAAQC,EAAUxB,EAAIyB,EAAyBC,EAAiBC,GAG1G,IAAIC,EAAKF,EAAGjD,OAAS,EACrB,OAAQgD,GACR,KAAK,EAkBG,OAhBAgL,EAAYzK,KAAK,mDACjB0K,EAAc1K,KAAK,yBACnB2K,IACAC,EAAKC,UAAU,IAAIF,EAAS,IAC5BA,IACAC,EAAKC,UAAU,IAAIF,EAAS,IAC5BA,IACAC,EAAKC,UAAU,KAAKF,EAAS,IAC7BA,IACAC,EAAKC,UAAU,iBAAiBF,EAASjL,EAAGE,EAAG,IAC/C+K,IACAC,EAAKC,UAAU,IAAIF,EAAS,IAC5BA,IACAC,EAAKC,UAAU,IAAIF,EAAS,IAC5BA,IACAC,EAAKC,UAAU,QAAQF,EAASjL,EAAGE,IAC5B,CAACkL,kBAAmB,CAACL,EAAYC,GAAeK,WAAYH,GAG3E,KAAK,EAMG,OAJAH,EAAYzK,KAAK,iBACjB0K,EAAc1K,KAAK,yBACnB2K,IACAC,EAAKC,UAAU,QAAQF,EAASjL,EAAGE,IAC5B,CAACkL,kBAAmBE,EAAMD,WAAYH,GAGrD,KAAK,EAEGH,EAAYzK,KAAK,uBACjB0K,EAAc1K,KAAK,8CACnB2K,IACAd,EAAU,IAAIoB,EAAQ,OAAON,EAASjL,EAAGE,EAAG,IAC5CsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,QAAQN,EAASjL,EAAGE,IAC1CsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGT,EAAYzK,KAAK,uBACjB0K,EAAc1K,KAAK,wBACnB2K,IACAd,EAAU,IAAIoB,EAAQ,OAAON,EAASjL,EAAGE,EAAG,IAC5CsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,QAAQN,EAASjL,EAAGE,IAC1CsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGT,EAAYzK,KAAK,gBACjB0K,EAAc1K,KAAK,oBACnB2K,IACAd,EAAU,IAAIoB,EAAQ,MAAMN,EAAS,IACrCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGT,EAAYzK,KAAK,mBACjB0K,EAAc1K,KAAK,uBACnB2K,IACAd,EAAU,IAAIoB,EAAQ,SAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGT,EAAYzK,KAAK,qEACjB0K,EAAc1K,KAAK,gFACnB2K,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,iBAAiBN,EAASjL,EAAGE,EAAG,IACtDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,aAAaN,EAASjL,EAAGE,EAAG,IAClDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGT,EAAYzK,KAAK,oEACjB0K,EAAc1K,KAAK,8EACnB2K,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,iBAAiBN,EAASjL,EAAGE,EAAG,IACtDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,EAAG,IACjDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,EAEGT,EAAYzK,KAAK,2CACjB0K,EAAc1K,KAAK,oEACnB2K,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,iBAAiBN,EAASjL,EAAGE,EAAG,IACtDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,sDACjB0K,EAAc1K,KAAK,gEACnB2K,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,aAAaN,EAASjL,EAAGE,EAAG,IAClDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,qDACjB0K,EAAc1K,KAAK,gEACnB2K,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,EAAG,IACjDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,4BACjB0K,EAAc1K,KAAK,oDACnB2K,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,iCACjB0K,EAAc1K,KAAK,+DACnB2K,IACAd,EAAU,IAAIoB,EAAQ,OAAON,EAASjL,EAAGE,IACzCsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,aAAaN,EAASjL,EAAGE,EAAG,IAClDsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,sBACjB0K,EAAc1K,KAAK,6BACnB2K,IACAd,EAAU,IAAIoB,EAAQ,OAAON,EAASjL,EAAGE,IACzCsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,6CACjB0K,EAAc1K,KAAK,yEACnB2K,IACAd,EAAU,IAAIoB,EAAQ,WAAWN,EAASjL,EAAGE,EAAG,IAChDsL,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,iBAAiBN,EAASjL,EAAGE,IACnDsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,8BACjB0K,EAAc1K,KAAK,+BACnB2K,IACAd,EAAU,IAAIoB,EAAQ,WAAWN,EAASjL,EAAGE,IAC7CsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,4BACjB0K,EAAc1K,KAAK,mDACnB2K,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,UAAUN,EAAS,IACzCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,4BACjB0K,EAAc1K,KAAK,uDACnB2K,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,UAAUN,EAAS,IACzCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,kCACjB0K,EAAc1K,KAAK,4CACnB2K,IACAd,EAAU,IAAIoB,EAAQ,UAAUN,EAAS,IACzCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,IAC9CsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,kCACjB0K,EAAc1K,KAAK,4CACnB2K,IACAd,EAAU,IAAIoB,EAAQ,UAAUN,EAAS,IACzCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,IAC9CsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,6BACjB0K,EAAc1K,KAAK,uCACnB2K,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,IAC9CsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,mCACjB0K,EAAc1K,KAAK,6CACnB2K,IACAd,EAAU,IAAIoB,EAAQ,WAAWN,EAAS,IAC1CO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,IAC9CsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,sCACjB0K,EAAc1K,KAAK,gDACnB2K,IACAd,EAAU,IAAIoB,EAAQ,cAAcN,EAAS,IAC7CO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,IAC9CsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,oCACjB0K,EAAc1K,KAAK,8CACnB2K,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAAS,IAC3CO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,IAC9CsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,qCACjB0K,EAAc1K,KAAK,+CACnB2K,IACAd,EAAU,IAAIoB,EAAQ,aAAaN,EAAS,IAC5CO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,IAC9CsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,mCACjB0K,EAAc1K,KAAK,6CACnB2K,IACAd,EAAU,IAAIoB,EAAQ,WAAWN,EAAS,IAC1CO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,IAC9CsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,iCACjB0K,EAAc1K,KAAK,2CACnB2K,IACAd,EAAU,IAAIoB,EAAQ,SAASN,EAAS,IACxCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,IAC9CsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,iCACjB0K,EAAc1K,KAAK,2CACnB2K,IACAd,EAAU,IAAIoB,EAAQ,SAASN,EAAS,IACxCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,IAC9CsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,8BACjB0K,EAAc1K,KAAK,wCACnB2K,IACAd,EAAU,IAAIoB,EAAQ,MAAMN,EAAS,IACrCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,IAC9CsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,8BACjB0K,EAAc1K,KAAK,wCACnB2K,IACAd,EAAU,IAAIoB,EAAQ,MAAMN,EAAS,IACrCO,EAAMlL,KAAK6J,GACXc,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAASjL,EAAGE,IAC9CsL,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,wBACjB0K,EAAc1K,KAAK,4BACnB2K,IACAd,EAAU,IAAIoB,EAAQ,UAAUN,EAAS,IACzCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,wBACjB0K,EAAc1K,KAAK,4BACnB2K,IACAd,EAAU,IAAIoB,EAAQ,UAAUN,EAAS,IACzCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,mBACjB0K,EAAc1K,KAAK,uBACnB2K,IACAd,EAAU,IAAIoB,EAAQ,KAAKN,EAAS,IACpCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,uBACjB0K,EAAc1K,KAAK,2BACnB2K,IACAd,EAAU,IAAIoB,EAAQ,SAASN,EAAS,IACxCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,yBACjB0K,EAAc1K,KAAK,6BACnB2K,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAAS,IAC3CO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,4BACjB0K,EAAc1K,KAAK,gCACnB2K,IACAd,EAAU,IAAIoB,EAAQ,cAAcN,EAAS,IAC7CO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,0BACjB0K,EAAc1K,KAAK,8BACnB2K,IACAd,EAAU,IAAIoB,EAAQ,YAAYN,EAAS,IAC3CO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,2BACjB0K,EAAc1K,KAAK,+BACnB2K,IACAd,EAAU,IAAIoB,EAAQ,aAAaN,EAAS,IAC5CO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,yBACjB0K,EAAc1K,KAAK,6BACnB2K,IACAd,EAAU,IAAIoB,EAAQ,WAAWN,EAAS,IAC1CO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,uBACjB0K,EAAc1K,KAAK,2BACnB2K,IACAd,EAAU,IAAIoB,EAAQ,SAASN,EAAS,IACxCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,kBACjB0K,EAAc1K,KAAK,sBACnB2K,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,GAEhB,MACA,KAAK,GAEGT,EAAYzK,KAAK,kBACjB0K,EAAc1K,KAAK,sBACnB2K,IACAd,EAAU,IAAIoB,EAAQ,IAAIN,EAAS,IACnCO,EAAMlL,KAAK6J,GACX5J,KAAKC,EAAIgL,EACTA,EAAQ,KAKhB1K,MAAO,CAAC,CAACC,EAAE,EAAErC,EAAE,CAAC,EAAE,GAAGsC,EAAE,EAAEC,GAAG,GAAG,CAACC,EAAE,CAAC,IAAI,CAACvC,EAAE,CAAC,EAAE,GAAGC,EAAE5B,GAAK,CAACkE,EAAE,CAAC,EAAE,IAAI,CAACA,EAAE,CAAC,EAAE,GAAGxC,EAAEzB,EAAI+D,EAAE,EAAEC,GAAG,EAAEE,GAAG,EAAErC,GAAG,CAAC,EAAE,IAAI,CAACF,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE1B,EAAImE,EAAE,GAAGxC,EAAE,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIqC,GAAG,IAAI,CAACF,EAAE,CAAC,EAAE,IAAI,CAACA,EAAE,CAAC,EAAE,IAAI,CAACA,EAAE,CAAC,EAAE,IAAI,CAACtC,EAAE5B,GAAK,CAAC4B,EAAE1B,EAAImE,EAAE,GAAGD,GAAG,IAAI,CAACvC,EAAE,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,KAAK,CAACL,EAAEzB,EAAI2B,EAAEzB,EAAI8D,GAAG,GAAGM,GAAG,GAAGxC,GAAG3B,EAAIoE,GAAG,GAAGF,GAAGjE,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,GAAK,CAACe,EAAE,CAAC,EAAE,KAAKlC,EAAEoB,EAAI,CAAC,EAAE,IAAI,CAACqD,GAAG,GAAGC,EAAE,GAAGzC,EAAE1B,IAAM,CAACoE,GAAG,CAAC,EAAE,KAAK,CAAC3C,EAAE,CAAC,EAAE,KAAK,CAACD,EAAEzB,EAAI2B,EAAEzB,EAAI8D,GAAG,GAAGM,GAAG,GAAGxC,GAAG3B,EAAIoE,GAAG,GAAGF,GAAGjE,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,GAAK,CAACe,EAAE,CAAC,EAAE,KAAK,CAACH,EAAE,CAAC,EAAE,IAAIuC,GAAG,IAAI,CAACvC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,IAAIE,EAAEzB,EAAI4B,GAAG3B,EAAIoE,GAAG,GAAGF,GAAGjE,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,GAAK,CAACY,EAAE,CAAC,EAAE,IAAIE,EAAEzB,EAAI4B,GAAG3B,EAAIoE,GAAG,GAAGF,GAAGjE,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,GAAK,CAACY,EAAE,CAAC,EAAE,IAAIE,EAAEzB,EAAI4B,GAAG3B,EAAIoE,GAAG,GAAGF,GAAGjE,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,GAAK,CAACY,EAAE,CAAC,EAAE,IAAIE,EAAEzB,EAAI4B,GAAG3B,EAAIoE,GAAG,GAAGF,GAAGjE,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,GAAK,CAACY,EAAE,CAAC,EAAE,IAAIE,EAAEzB,EAAI4B,GAAG3B,EAAIoE,GAAG,GAAGF,GAAGjE,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,GAAK,CAACY,EAAE,CAAC,EAAE,IAAIE,EAAEzB,EAAI4B,GAAG3B,EAAIoE,GAAG,GAAGF,GAAGjE,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,GAAK,CAACY,EAAE,CAAC,EAAE,IAAIE,EAAEzB,EAAI4B,GAAG3B,EAAIoE,GAAG,GAAGF,GAAGjE,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,GAAK,CAACY,EAAE,CAAC,EAAE,IAAIE,EAAEzB,EAAI4B,GAAG3B,EAAIoE,GAAG,GAAGF,GAAGjE,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,GAAK,CAACY,EAAE,CAAC,EAAE,IAAIE,EAAEzB,EAAI4B,GAAG3B,EAAIoE,GAAG,GAAGF,GAAGjE,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,GAAK,CAACY,EAAE,CAAC,EAAE,IAAIE,EAAEzB,EAAI4B,GAAG3B,EAAIoE,GAAG,GAAGF,GAAGjE,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,GAAK,CAACY,EAAE,CAAC,EAAE,IAAIE,EAAEzB,EAAI4B,GAAG3B,EAAIoE,GAAG,GAAGF,GAAGjE,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,GAAK,CAACY,EAAE,CAAC,EAAE,IAAIE,EAAEzB,EAAI4B,GAAG3B,EAAIoE,GAAG,GAAGF,GAAGjE,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,EAAI2B,GAAG1B,GAAKnB,EAAEqB,EAAI,CAAC,EAAE,KAAKrB,EAAEoB,EAAI,CAAC,EAAE,KAAK,CAACiB,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACJ,EAAE,CAAC,EAAE,KAAK,CAACH,EAAE,CAAC,EAAE,IAAIuC,GAAG,IAAI,CAACvC,EAAE,CAAC,EAAE,KAAK/B,EAAEqB,EAAI,CAAC,EAAE,IAAI,CAACY,EAAE5B,EAAI+B,GAAG,CAAC,EAAE,KAAK,CAACL,EAAE,CAAC,EAAE,KAAK,CAACK,GAAG,CAAC,EAAE,KAAK,CAACL,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK/B,EAAEsB,EAAI,CAAC,EAAE,KAAKtB,EAAEsB,EAAI,CAAC,EAAE,KAAK,CAACS,EAAEzB,EAAI+D,EAAE,GAAGC,GAAG,GAAG,CAACrC,EAAE5B,EAAI+B,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAACH,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACsC,EAAE,CAAC,EAAE,IAAI,CAACtC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAKlC,EAAEqB,EAAI,CAAC,EAAE,KAAKrB,EAAEqB,EAAI,CAAC,EAAE,KAAKrB,EAAEqB,EAAI,CAAC,EAAE,IAAIrB,EAAEqB,EAAI,CAAC,EAAE,KACztEyD,eAAgB,CAACV,EAAE,CAAC,EAAE,GAAGM,EAAE,CAAC,EAAE,GAAGxC,EAAE,CAAC,EAAE,GAAGmC,EAAE,CAAC,EAAE,GAAG5B,GAAG,CAAC,EAAE,IAAIuM,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIpK,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,IAAI6J,GAAG,CAAC,EAAE,IACnMxJ,WAAY,SAAqBC,EAAKC,GAClC,IAAIA,EAAKC,YAEF,CACH,IAAIC,EAAQ,IAAIC,MAAMJ,GAEtB,MADAG,EAAMF,KAAOA,EACPE,EAJNpC,KAAKlC,MAAMmE,IAOnBK,MAAO,SAAeC,GAClB,IAAIC,EAAOxC,KAAMyC,EAAQ,CAAC,GAAiBC,EAAS,CAAC,MAAOC,EAAS,GAAIpC,EAAQP,KAAKO,MAAOlB,EAAS,GAAIE,EAAW,EAAGD,EAAS,EAAGsD,EAAa,EAAGC,EAAS,EAAGC,EAAM,EAClKC,EAAOJ,EAAOK,MAAMC,KAAKC,UAAW,GACpCC,EAAQC,OAAOC,OAAOrD,KAAKmD,OAC3BG,EAAc,CAAEvF,GAAI,IACxB,IAAK,IAAI1B,KAAK2D,KAAKjC,GACXqF,OAAOG,UAAUC,eAAeP,KAAKjD,KAAKjC,GAAI1B,KAC9CiH,EAAYvF,GAAG1B,GAAK2D,KAAKjC,GAAG1B,IAGpC8G,EAAMM,SAASlB,EAAOe,EAAYvF,IAClCuF,EAAYvF,GAAGoF,MAAQA,EACvBG,EAAYvF,GAAGF,OAASmC,KACG,oBAAhBmD,EAAMO,SACbP,EAAMO,OAAS,IAEnB,IAAIC,EAAQR,EAAMO,OAClBf,EAAO5C,KAAK4D,GACZ,IAAIC,EAAST,EAAMU,SAAWV,EAAMU,QAAQD,OACH,oBAA9BN,EAAYvF,GAAGiE,WACtBhC,KAAKgC,WAAasB,EAAYvF,GAAGiE,WAEjChC,KAAKgC,WAAaoB,OAAOY,eAAehE,MAAMgC,WAiBlD,IATI,IAQAiC,EAAQC,EAAgBC,EAAOC,EAAWC,EAAeC,EAAGC,EAAKC,EAAUC,EARvEC,EAAM,WACN,IAAIC,EAKJ,MAHqB,kBADrBA,EAAQxB,EAAMuB,OAAS5B,KAEnB6B,EAAQnC,EAAKxE,SAAS2G,IAAUA,GAE7BA,GAEkCC,EAAQ,KAC5C,CAUG,GATZT,EAAQ1B,EAAMA,EAAMjG,OAAS,GACzBwD,KAAKkB,eAAeiD,GACpBC,EAASpE,KAAKkB,eAAeiD,IAEd,OAAXF,GAAoC,oBAAVA,IAC1BA,EAASS,KAEbN,EAAS7D,EAAM4D,IAAU5D,EAAM4D,GAAOF,IAER,qBAAXG,IAA2BA,EAAO5H,SAAW4H,EAAO,GAAI,CACvE,IAAIc,EAAS,GAEb,IAAKZ,KADLG,EAAW,GACDlE,EAAM4D,GACRnE,KAAK/B,WAAWqG,IAAMA,EAAIzB,GAC1B4B,EAAS1E,KAAK,IAAOC,KAAK/B,WAAWqG,GAAK,KAI9CY,EADA/B,EAAMgC,aACG,wBAA0B5F,EAAW,GAAK,MAAQ4D,EAAMgC,eAAiB,eAAiBV,EAASW,KAAK,MAAQ,WAAcpF,KAAK/B,WAAWgG,IAAWA,GAAU,IAEnK,wBAA0B1E,EAAW,GAAK,iBAAmB0E,GAAUnB,EAAM,eAAiB,KAAQ9C,KAAK/B,WAAWgG,IAAWA,GAAU,KAExJjE,KAAKgC,WAAWkD,EAAQ,CACpBG,KAAMlC,EAAMmC,MACZX,MAAO3E,KAAK/B,WAAWgG,IAAWA,EAClCsB,KAAMpC,EAAM5D,SACZiG,IAAK7B,EACLc,SAAUA,IAGtB,GAAIL,EAAO,aAAcqB,OAASrB,EAAO5H,OAAS,EAC9C,MAAM,IAAI6F,MAAM,oDAAsD8B,EAAQ,YAAcF,GAEhG,OAAQG,EAAO,IACf,KAAK,EACD3B,EAAM1C,KAAKkE,GACXvB,EAAO3C,KAAKoD,EAAM9D,QAClBsD,EAAO5C,KAAKoD,EAAMO,QAClBjB,EAAM1C,KAAKqE,EAAO,IAClBH,EAAS,KACJC,GASDD,EAASC,EACTA,EAAiB,OATjB5E,EAAS6D,EAAM7D,OACfD,EAAS8D,EAAM9D,OACfE,EAAW4D,EAAM5D,SACjBoE,EAAQR,EAAMO,OACVd,EAAa,GACbA,KAMR,MACJ,KAAK,EAwBD,GAvBA2B,EAAMvE,KAAKb,aAAaiF,EAAO,IAAI,GACnCQ,EAAM3E,EAAIyC,EAAOA,EAAOlG,OAAS+H,GACjCK,EAAMlF,GAAK,CACPS,WAAYwC,EAAOA,EAAOnG,QAAU+H,GAAO,IAAIpE,WAC/CuF,UAAW/C,EAAOA,EAAOnG,OAAS,GAAGkJ,UACrCtF,aAAcuC,EAAOA,EAAOnG,QAAU+H,GAAO,IAAInE,aACjDuF,YAAahD,EAAOA,EAAOnG,OAAS,GAAGmJ,aAEvC/B,IACAgB,EAAMlF,GAAGkG,MAAQ,CACbjD,EAAOA,EAAOnG,QAAU+H,GAAO,IAAIqB,MAAM,GACzCjD,EAAOA,EAAOnG,OAAS,GAAGoJ,MAAM,KAYvB,qBATjBvB,EAAIrE,KAAKZ,cAAcyG,MAAMjB,EAAO,CAChCvF,EACAC,EACAC,EACA+D,EAAYvF,GACZqG,EAAO,GACP1B,EACAC,GACFmD,OAAO/C,KAEL,OAAOsB,EAEPE,IACA9B,EAAQA,EAAMO,MAAM,GAAI,EAAIuB,EAAM,GAClC7B,EAASA,EAAOM,MAAM,GAAI,EAAIuB,GAC9B5B,EAASA,EAAOK,MAAM,GAAI,EAAIuB,IAElC9B,EAAM1C,KAAKC,KAAKb,aAAaiF,EAAO,IAAI,IACxC1B,EAAO3C,KAAK6E,EAAM3E,GAClB0C,EAAO5C,KAAK6E,EAAMlF,IAClB8E,EAAWjE,EAAMkC,EAAMA,EAAMjG,OAAS,IAAIiG,EAAMA,EAAMjG,OAAS,IAC/DiG,EAAM1C,KAAKyE,GACX,MACJ,KAAK,EACD,OAAO,GAGf,OAAO,IAGAwG,EAAWjF,EAAQ,IAAnBiF,QACHL,EAAO,IAAIK,EAAQ,OAAO,EAAE,IAE5BC,EAAQ,GACRP,EAAW,EACXK,EAAQ,GACRP,EAAc,GACdC,EAAgB,GAEpBtH,EACS,CAEbL,IAAI,EAEJd,WAAW,SAAoBC,EAAKC,GAC5B,IAAIlC,KAAKjC,GAAGF,OAGR,MAAM,IAAIwE,MAAMJ,GAFhBjC,KAAKjC,GAAGF,OAAOmE,WAAWC,EAAKC,IAO3CuB,SAAS,SAAUlB,EAAOxE,GAiBlB,OAhBAiC,KAAKjC,GAAKA,GAAMiC,KAAKjC,IAAM,GAC3BiC,KAAKgG,OAASzD,EACdvC,KAAKiG,MAAQjG,KAAKkG,WAAalG,KAAKmG,MAAO,EAC3CnG,KAAKT,SAAWS,KAAKV,OAAS,EAC9BU,KAAKX,OAASW,KAAKoG,QAAUpG,KAAKsF,MAAQ,GAC1CtF,KAAKqG,eAAiB,CAAC,WACvBrG,KAAK0D,OAAS,CACVvD,WAAY,EACZC,aAAc,EACdsF,UAAW,EACXC,YAAa,GAEb3F,KAAK6D,QAAQD,SACb5D,KAAK0D,OAAOkC,MAAQ,CAAC,EAAE,IAE3B5F,KAAKsG,OAAS,EACPtG,MAIfuC,MAAM,WACE,IAAIgE,EAAKvG,KAAKgG,OAAO,GAkBrB,OAjBAhG,KAAKX,QAAUkH,EACfvG,KAAKV,SACLU,KAAKsG,SACLtG,KAAKsF,OAASiB,EACdvG,KAAKoG,SAAWG,EACJA,EAAGjB,MAAM,oBAEjBtF,KAAKT,WACLS,KAAK0D,OAAOgC,aAEZ1F,KAAK0D,OAAOiC,cAEZ3F,KAAK6D,QAAQD,QACb5D,KAAK0D,OAAOkC,MAAM,KAGtB5F,KAAKgG,OAAShG,KAAKgG,OAAOhD,MAAM,GACzBuD,GAIfC,MAAM,SAAUD,GACR,IAAIhC,EAAMgC,EAAG/J,OACTiK,EAAQF,EAAGG,MAAM,iBAErB1G,KAAKgG,OAASO,EAAKvG,KAAKgG,OACxBhG,KAAKX,OAASW,KAAKX,OAAOsH,OAAO,EAAG3G,KAAKX,OAAO7C,OAAS+H,GAEzDvE,KAAKsG,QAAU/B,EACf,IAAIqC,EAAW5G,KAAKsF,MAAMoB,MAAM,iBAChC1G,KAAKsF,MAAQtF,KAAKsF,MAAMqB,OAAO,EAAG3G,KAAKsF,MAAM9I,OAAS,GACtDwD,KAAKoG,QAAUpG,KAAKoG,QAAQO,OAAO,EAAG3G,KAAKoG,QAAQ5J,OAAS,GAExDiK,EAAMjK,OAAS,IACfwD,KAAKT,UAAYkH,EAAMjK,OAAS,GAEpC,IAAI6H,EAAIrE,KAAK0D,OAAOkC,MAgBpB,OAdA5F,KAAK0D,OAAS,CACVvD,WAAYH,KAAK0D,OAAOvD,WACxBuF,UAAW1F,KAAKT,SAAW,EAC3Ba,aAAcJ,KAAK0D,OAAOtD,aAC1BuF,YAAac,GACRA,EAAMjK,SAAWoK,EAASpK,OAASwD,KAAK0D,OAAOtD,aAAe,GAC5DwG,EAASA,EAASpK,OAASiK,EAAMjK,QAAQA,OAASiK,EAAM,GAAGjK,OAChEwD,KAAK0D,OAAOtD,aAAemE,GAG7BvE,KAAK6D,QAAQD,SACb5D,KAAK0D,OAAOkC,MAAQ,CAACvB,EAAE,GAAIA,EAAE,GAAKrE,KAAKV,OAASiF,IAEpDvE,KAAKV,OAASU,KAAKX,OAAO7C,OACnBwD,MAIf6G,KAAK,WAEG,OADA7G,KAAKiG,OAAQ,EACNjG,MAIf8G,OAAO,WACC,OAAI9G,KAAK6D,QAAQkD,iBACb/G,KAAKkG,YAAa,EASflG,MAPIA,KAAKgC,WAAW,0BAA4BhC,KAAKT,SAAW,GAAK,mIAAqIS,KAAKmF,eAAgB,CAC9NE,KAAM,GACNV,MAAO,KACPY,KAAMvF,KAAKT,YAQ3ByH,KAAK,SAAUjD,GACP/D,KAAKwG,MAAMxG,KAAKsF,MAAMtC,MAAMe,KAIpCkD,UAAU,WACF,IAAIC,EAAOlH,KAAKoG,QAAQO,OAAO,EAAG3G,KAAKoG,QAAQ5J,OAASwD,KAAKsF,MAAM9I,QACnE,OAAQ0K,EAAK1K,OAAS,GAAK,MAAM,IAAM0K,EAAKP,QAAQ,IAAIQ,QAAQ,MAAO,KAI/EC,cAAc,WACN,IAAIC,EAAOrH,KAAKsF,MAIhB,OAHI+B,EAAK7K,OAAS,KACd6K,GAAQrH,KAAKgG,OAAOW,OAAO,EAAG,GAAGU,EAAK7K,UAElC6K,EAAKV,OAAO,EAAE,KAAOU,EAAK7K,OAAS,GAAK,MAAQ,KAAK2K,QAAQ,MAAO,KAIpFhC,aAAa,WACL,IAAImC,EAAMtH,KAAKiH,YACXM,EAAI,IAAI9B,MAAM6B,EAAI9K,OAAS,GAAG4I,KAAK,KACvC,OAAOkC,EAAMtH,KAAKoH,gBAAkB,KAAOG,EAAI,KAIvDC,WAAW,SAASlC,EAAOmC,GACnB,IAAI9C,EACA8B,EACAiB,EAwDJ,GAtDI1H,KAAK6D,QAAQkD,kBAEbW,EAAS,CACLnI,SAAUS,KAAKT,SACfmE,OAAQ,CACJvD,WAAYH,KAAK0D,OAAOvD,WACxBuF,UAAW1F,KAAK0F,UAChBtF,aAAcJ,KAAK0D,OAAOtD,aAC1BuF,YAAa3F,KAAK0D,OAAOiC,aAE7BtG,OAAQW,KAAKX,OACbiG,MAAOtF,KAAKsF,MACZqC,QAAS3H,KAAK2H,QACdvB,QAASpG,KAAKoG,QACd9G,OAAQU,KAAKV,OACbgH,OAAQtG,KAAKsG,OACbL,MAAOjG,KAAKiG,MACZD,OAAQhG,KAAKgG,OACbjI,GAAIiC,KAAKjC,GACTsI,eAAgBrG,KAAKqG,eAAerD,MAAM,GAC1CmD,KAAMnG,KAAKmG,MAEXnG,KAAK6D,QAAQD,SACb8D,EAAOhE,OAAOkC,MAAQ5F,KAAK0D,OAAOkC,MAAM5C,MAAM,MAItDyD,EAAQnB,EAAM,GAAGA,MAAM,sBAEnBtF,KAAKT,UAAYkH,EAAMjK,QAE3BwD,KAAK0D,OAAS,CACVvD,WAAYH,KAAK0D,OAAOgC,UACxBA,UAAW1F,KAAKT,SAAW,EAC3Ba,aAAcJ,KAAK0D,OAAOiC,YAC1BA,YAAac,EACAA,EAAMA,EAAMjK,OAAS,GAAGA,OAASiK,EAAMA,EAAMjK,OAAS,GAAG8I,MAAM,UAAU,GAAG9I,OAC5EwD,KAAK0D,OAAOiC,YAAcL,EAAM,GAAG9I,QAEpDwD,KAAKX,QAAUiG,EAAM,GACrBtF,KAAKsF,OAASA,EAAM,GACpBtF,KAAK2H,QAAUrC,EACftF,KAAKV,OAASU,KAAKX,OAAO7C,OACtBwD,KAAK6D,QAAQD,SACb5D,KAAK0D,OAAOkC,MAAQ,CAAC5F,KAAKsG,OAAQtG,KAAKsG,QAAUtG,KAAKV,SAE1DU,KAAKiG,OAAQ,EACbjG,KAAKkG,YAAa,EAClBlG,KAAKgG,OAAShG,KAAKgG,OAAOhD,MAAMsC,EAAM,GAAG9I,QACzCwD,KAAKoG,SAAWd,EAAM,GACtBX,EAAQ3E,KAAKZ,cAAc6D,KAAKjD,KAAMA,KAAKjC,GAAIiC,KAAMyH,EAAczH,KAAKqG,eAAerG,KAAKqG,eAAe7J,OAAS,IAChHwD,KAAKmG,MAAQnG,KAAKgG,SAClBhG,KAAKmG,MAAO,GAEZxB,EACA,OAAOA,EACJ,GAAI3E,KAAKkG,WAAY,CAExB,IAAK,IAAI7J,KAAKqL,EACV1H,KAAK3D,GAAKqL,EAAOrL,GAErB,OAAO,EAEX,OAAO,GAIfgL,KAAK,WACG,GAAIrH,KAAKmG,KACL,OAAOnG,KAAK8C,IAMhB,IAAI6B,EACAW,EACAsC,EACAC,EAPC7H,KAAKgG,SACNhG,KAAKmG,MAAO,GAOXnG,KAAKiG,QACNjG,KAAKX,OAAS,GACdW,KAAKsF,MAAQ,IAGjB,IADA,IAAIwC,EAAQ9H,KAAK+H,gBACRC,EAAI,EAAGA,EAAIF,EAAMtL,OAAQwL,IAE9B,IADAJ,EAAY5H,KAAKgG,OAAOV,MAAMtF,KAAK8H,MAAMA,EAAME,SAC5B1C,GAASsC,EAAU,GAAGpL,OAAS8I,EAAM,GAAG9I,QAAS,CAGhE,GAFA8I,EAAQsC,EACRC,EAAQG,EACJhI,KAAK6D,QAAQkD,gBAAiB,CAE9B,IAAc,KADdpC,EAAQ3E,KAAKwH,WAAWI,EAAWE,EAAME,KAErC,OAAOrD,EACJ,GAAI3E,KAAKkG,WAAY,CACxBZ,GAAQ,EACR,SAGA,OAAO,EAER,IAAKtF,KAAK6D,QAAQoE,KACrB,MAIZ,OAAI3C,GAEc,KADdX,EAAQ3E,KAAKwH,WAAWlC,EAAOwC,EAAMD,MAE1BlD,EAKK,KAAhB3E,KAAKgG,OACEhG,KAAK8C,IAEL9C,KAAKgC,WAAW,0BAA4BhC,KAAKT,SAAW,GAAK,yBAA2BS,KAAKmF,eAAgB,CACpHE,KAAM,GACNV,MAAO,KACPY,KAAMvF,KAAKT,YAM3BmF,IAAI,WACI,IAAIL,EAAIrE,KAAKqH,OACb,OAAIhD,GAGOrE,KAAK0E,OAKxBwD,MAAM,SAAgBC,GACdnI,KAAKqG,eAAetG,KAAKoI,IAIjCC,SAAS,WAED,OADQpI,KAAKqG,eAAe7J,OAAS,EAC7B,EACGwD,KAAKqG,eAAegC,MAEpBrI,KAAKqG,eAAe,IAKvC0B,cAAc,WACN,OAAI/H,KAAKqG,eAAe7J,QAAUwD,KAAKqG,eAAerG,KAAKqG,eAAe7J,OAAS,GACxEwD,KAAKsI,WAAWtI,KAAKqG,eAAerG,KAAKqG,eAAe7J,OAAS,IAAIsL,MAErE9H,KAAKsI,WAAL,QAA2BR,OAK9CS,SAAS,SAAmBxE,GAEpB,OADAA,EAAI/D,KAAKqG,eAAe7J,OAAS,EAAIgM,KAAKC,IAAI1E,GAAK,KAC1C,EACE/D,KAAKqG,eAAetC,GAEpB,WAKnB2E,UAAU,SAAoBP,GACtBnI,KAAKkI,MAAMC,IAInBQ,eAAe,WACP,OAAO3I,KAAKqG,eAAe7J,QAEnCqH,QAAS,CAAC,oBAAmB,GAC7BzE,cAAe,SAAmBrB,EAAG6K,EAAIC,EAA0BC,GAEnE,OAAOD,GACP,KAAK,EAEL,KAAK,EACL,MACA,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,EAEd,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GACmCE,QAAQC,IAAI,+BAA8BJ,EAAIvJ,OAAS,kBAAoBuJ,EAAIlF,OAAOvD,WAAa,oBAAsByI,EAAIlF,OAAOtD,gBAK5K0H,MAAO,CAAC,YAAY,oCAAoC,UAAU,UAAU,WAAW,UAAU,WAAW,uBAAuB,uBAAuB,mJAAiF,+CAA+C,aAAa,aAAa,cAAc,eAAe,eAAe,gBAAgB,UAAU,WAC1XQ,WAAY,CAAC,QAAU,CAAC,MAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,WAAY,KAK7F,SAASW,IACPjJ,KAAKjC,GAAK,GAGZ,OALAF,EAAOsF,MAAQA,EAIf8F,EAAO1F,UAAY1F,EAAOA,EAAOoL,OAASA,EACnC,IAAIA,EAxqCU,GA6qCrBC,EAAQrL,OAASsN,EACjBjC,EAAQD,OAASkC,EAAclC,OAC/BC,EAAQ5G,MAAQ,WAAc,OAAO6I,EAAc7I,MAAMuD,MAAMsF,EAAejI,YAC9EgG,EAAQC,KAAO,SAAuBpG,GAC7BA,EAAK,KACNgG,QAAQC,IAAI,UAAUjG,EAAK,GAAG,SAC9BqG,EAAQC,KAAK,IAEjB,IAAIC,EAASvD,EAAQ,IAAMwD,aAAaxD,EAAQ,IAAQyD,UAAUzG,EAAK,IAAK,QAC5E,OAAOmG,EAAQrL,OAAOyE,MAAMgH,IAEKvD,WAAiB0D,GACpDP,EAAQC,KAAKC,EAAQM,KAAK1G,MAAM,M,kOC/vCrByI,EAST,WAAYC,EAAaC,EAAeC,EAAcC,EAAYC,EAAcC,GAAc,yBAR9FL,WAQ6F,OAP7FC,aAO6F,OAN7FC,YAM6F,OAL7FC,UAK6F,OAJ7FC,YAI6F,OAH7FC,WAG6F,EACzF/L,KAAK0L,MAAMA,EACX1L,KAAK2L,QAAQA,EACb3L,KAAK4L,OAAOA,EACZ5L,KAAK6L,KAAKA,EACV7L,KAAK8L,OAAOA,EACZ9L,KAAK+L,MAAMA,GAIfC,EAAK,OACLC,EAAM,MACNC,EAAM,MACNC,EAAS,GAEN,SAASC,EAAmBzB,EAAa0B,EAA8BC,GAK1E,IAAK,IAAMC,KAFXJ,GADAA,GADAA,EAASxB,EAAKI,MAAM5D,QAAQ6E,EAAI,eAChB7E,QAAQ8E,EAAI,YACZ9E,QAAQ+E,EAAI,WAC5BG,EAAUtM,KAAK,IAAI0L,EAAad,EAAKe,MAAMf,EAAKgB,QAAQhB,EAAK6B,cAAc,UAAUF,EAAQH,IAC3ExB,EAAK8B,cAGnBN,GADAA,GADAA,EAASxB,EAAK8B,cAAcF,GAAKR,MAAM5E,QAAQ6E,EAAI,eACnC7E,QAAQ8E,EAAI,YACZ9E,QAAQ+E,EAAI,WAC5BG,EAAUtM,KAAK,IAAI0L,EAAad,EAAK8B,cAAcF,GAAKb,MAAMf,EAAK8B,cAAcF,GAAKZ,QAAQhB,EAAK8B,cAAcF,GAAKC,cAAc,WAAW7B,EAAK6B,cAAcL,IAEtK,IAAK,IAAMI,KAAO5B,EAAK+B,cACnBL,EAAYD,EAAmBzB,EAAK+B,cAAcH,GAAKF,EAAU1B,EAAK6B,eAE1E,OAAOH,EAGJ,SAASM,EAAgC1B,EAA0BF,GAEtE,IAAK,IAAMwB,KADXxB,GAAS,oCACSE,EACdF,GAAS,IAAMwB,EAGnB,IAAK,IAAMA,KADXxB,GAAS,WACSE,EACdF,GAAS,IAAME,EAAMsB,GAAKb,MAG9B,IAAK,IAAMa,KADXxB,GAAS,aACSE,EACdF,GAAS,IAAME,EAAMsB,GAAKZ,QAG9B,IAAK,IAAMY,KADXxB,GAAS,YACSE,EACdF,GAAS,IAAME,EAAMsB,GAAKX,OAG9B,IAAK,IAAMW,KADXxB,GAAS,UACSE,EACdF,GAAS,IAAME,EAAMsB,GAAKV,KAG9B,IAAK,IAAMU,KADXxB,GAAS,YACSE,EACdF,GAAS,IAAME,EAAMsB,GAAKT,OAG9B,IAAK,IAAMS,KADXxB,GAAS,WACSE,EACdF,GAAS,IAAME,EAAMsB,GAAKR,MAG9B,OADAhB,GAAS,O,mBCjEPlN,EAASkI,EAAQ,IACjB6G,EAAgB7G,EAAQ,KACxB8G,EAAe9G,EAAQ,KACvB+G,EAAmB/G,EAAQ,KAEZgH,E,4MAEjB5I,MAAQ,CACJ6I,cAAe,GACfC,MAAO,GACPC,IAAK,GACLC,UAAW,GACXC,WAAY,GACZC,YAAa,GACbC,iBAAkB,GAClBC,gBAAiB,I,EAGrBjL,MAAQ,WAEJ,IAAIxC,EACAD,EAKE2N,EAAS3P,EAAOyE,MAAM,EAAK6B,MAAM+I,KACvCpN,EAAM0N,EAAO1N,IACbD,EAAe2N,EAAO3N,aAEtB,IAAI4N,EAAgB,IAAIpN,UAAQ,SAAS,GAAG,EAAG,EAAE,GAAGP,GAMpD,GAJAiJ,QAAQC,IAAIlJ,GACZiJ,QAAQC,IAAInJ,GAGgB,IAAxBA,EAAarD,OAAc,CAC3B,IAAMkR,EAAYb,EAAavK,MAAM,EAAK6B,MAAM+I,KAChD,EAAKS,SAAS,CACVP,WAAY,cAAgBQ,oCAA0BF,EAAU7C,kBAAkB,GAAI6C,EAAU7C,kBAAkB,GAAI,EAAK1G,MAAMgJ,WAAa,IAC9IA,UAAW,cAAgBU,gCAAsBH,EAAU5C,WAAY,EAAK3G,MAAMgJ,WAAa,IAC/FG,iBAAkB,cAAcX,EAAgCP,EAAmBqB,EAnBvE,GAmBmG,UAAU,EAAKtJ,MAAMmJ,kBAAkB,WAG1J,EAAKK,SAAS,CACVN,YAAa,cAAgBS,oCAA0BjO,EAAa,EAAKsE,MAAMkJ,aAAe,O,EAM1GU,UAAY,WACR,IAAIjO,EACAD,EAEE2N,EAASZ,EAActK,MAAM,EAAK6B,MAAM+I,KAC9CpN,EAAM0N,EAAO1N,IACbD,EAAe2N,EAAO3N,aACtB,IAAI4N,EAAgB,IAAIpN,UAAQ,SAAS,GAAG,EAAG,EAAE,GAAGP,GACpD,GAA4B,IAAxBD,EAAarD,OAAc,CAC3B,IAAMkR,EAAYZ,EAAiBxK,MAAM,EAAK6B,MAAM+I,KACpD,EAAKS,SAAS,CACVP,WAAY,cAAgBQ,oCAA0BF,EAAU7C,kBAAkB,GAAI6C,EAAU7C,kBAAkB,GAAI,EAAK1G,MAAMgJ,WAAa,IAC9IA,UAAW,cAAgBU,gCAAsBH,EAAU5C,WAAY,EAAK3G,MAAMgJ,WAAa,IAC/FG,iBAAkB,cAAcX,EAAgCP,EAAmBqB,EAVvE,GAUmG,UAAU,EAAKtJ,MAAMmJ,kBAAkB,WAG1J,EAAKK,SAAS,CACVN,YAAa,cAAgBS,oCAA0BjO,EAAa,EAAKsE,MAAMkJ,aAAe,O,EAO1GW,iBAAmB,SAAAC,GACf,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,WAAWH,GAClBC,EAAOG,OAAS,SAACC,GAEb,IACI,EAAKX,SAAS,CACVT,IAAKoB,EAAEC,OAAOf,SAEpB,MAAOc,GACLvF,QAAQC,IAAIsF,M,EAKxBE,gBAAkB,SAAAF,GAES,YAAnBA,EAAEC,OAAOE,MACT,EAAKd,SAAS,CACVJ,gBAAiB,KAEK,YAAnBe,EAAEC,OAAOE,MAChB,EAAKd,SAAS,CACVJ,gBAAiB,EAAKpJ,MAAMgJ,YAEN,2BAAnBmB,EAAEC,OAAOE,MAChB,EAAKd,SAAS,CACVJ,gBAAiB,EAAKpJ,MAAMiJ,aAEP,2BAAnBkB,EAAEC,OAAOE,MACf,EAAKd,SAAS,CACVJ,gBAAiB,EAAKpJ,MAAMkJ,cAEN,0BAAnBiB,EAAEC,OAAOE,OAChB,EAAKd,SAAS,CACVJ,gBAAiB,EAAKpJ,MAAMmJ,oB,4CAKxC,WAAU,IAAD,OACL,OACI,qCACI,eAACoB,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,UACI,cAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,aAAnB,kBACA,cAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,cAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,mBAApB,SACI,cAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,SACI,cAAC,aAAD,CAAYC,QAAS,EAAGC,SAAUtP,KAAKgO,iBAAkBuB,QAAS,SAAAC,GAAM,OAAIzG,QAAQC,IAAIwG,IAAxF,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,OAAhB,gCAMhB,sBAAKN,UAAU,YAAf,UACI,eAACO,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACI,cAACC,EAAA,EAAKC,QAAN,CACIC,KAAK,OACLC,YAAY,4BACZC,aAAcnQ,KAAKmE,MAAM8I,MACzBqC,SAAU,SAAChB,GACP,EAAKX,SAAS,CACVV,MAAOqB,EAAEC,OAAOE,aAIhC,cAACmB,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACI,cAACL,EAAA,EAAD,CAAQC,QAAQ,UAAUU,QAASpQ,KAAKsC,MAAxC,uBAEJ,cAACsN,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACI,cAACL,EAAA,EAAD,CAAQC,QAAQ,UAAUU,QAASpQ,KAAK+N,UAAxC,2BAGR,uBACA,cAACgC,EAAA,EAAKC,QAAN,CAAcK,GAAG,WAAWC,KAAM,GAAIH,aAAcnQ,KAAKmE,MAAM+I,IAAKoC,SAAU,SAAChB,GAC3E,EAAKX,SAAS,CACVT,IAAKoB,EAAEC,OAAOE,cAK1B,qBAAKW,UAAU,YAAf,SACI,cAACW,EAAA,EAAKQ,MAAN,UACI,eAACR,EAAA,EAAKC,QAAN,CAAcK,GAAG,SAASG,KAAK,OAAOC,KAAK,KAAKnB,SAAUtP,KAAKwO,gBAA/D,UACI,6CACA,2DACA,4DACA,6CACA,mEAOuB,KAA/BxO,KAAKmE,MAAMoJ,gBACP,qBAAK6B,UAAU,6BAAf,SACI,cAACsB,EAAA,EAAD,CAAUtB,UAAU,oCAAoCuB,IAAK3Q,KAAKmE,MAAMoJ,gBAAiB1J,QAAS,CAAE+M,OAAQ,IAAKC,MAAO,KAAMC,MAAM,OAExI,wBAIR,qBAAK1B,UAAU,YAAf,SACI,cAACW,EAAA,EAAKC,QAAN,CAAcK,GAAG,WAAWC,KAAM,EAAGH,aAAcnQ,KAAKmE,MAAM6I,yB,GAhLhD+D,a,eCGnBC,MAVf,WACE,OACE,8BACE,cAAC,IAAD,CAAQC,SAAS,wBAAjB,SACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWrE,SCI1BsE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,K,mMCjBIa,E,gBAISlH,EAAb,WAKI,WAAYY,EAAcuG,EAAcC,GAA2B,yBAJnExG,YAIkE,OAHlEuG,YAGkE,OAFlEC,gBAEkE,EAC9DpS,KAAK4L,OAAOA,EACZ5L,KAAKmS,OAAOA,EACZnS,KAAKoS,WAAWA,EARxB,6CAWI,SAAUC,EAAcF,EAAclH,GAClCiH,EAAQ,IAAIlH,EAAQqH,EAAOF,EAAOlH,GAClCjL,KAAKoS,WAAWrS,KAAKmS,OAb7B,KAkBO,SAASrE,EAAsByE,EAAcvH,GAEhD,GADAA,GAAS,OAASuH,EAAMH,OAAOlN,WAAa,WAAcqN,EAAM1G,OAAS,QACrE0G,EAAMF,WAAW5V,OAAS,EAC1B,IAAK,IAAM+P,KAAO+F,EAAMF,WACpBrH,GAAS,OAASuH,EAAMF,WAAW7F,GAAK4F,OAAOlN,WAAa,WAAcqN,EAAMF,WAAW7F,GAAKX,OAAS,QACzGb,GAAS,OAASuH,EAAMH,OAAOlN,WAAtB,SAAmDqN,EAAMF,WAAW7F,GAAK4F,OAAOlN,WAAa,MAClGqN,EAAMF,WAAW7F,GAAK6F,WAAW5V,OAAS,IAE1CuO,EAAQ8C,EAAsByE,EAAMF,WAAW7F,GAAKxB,IAIhE,OAAOA,EAGJ,SAAS6C,EAA0B2E,EAA2BC,EAAqBzH,GAEtF,IAAK,IAAMwB,KADXxB,GAAS,wCACSwH,EACdxH,GAAS,IAAMwH,EAAahG,GAGhC,IAAK,IAAMA,KADXxB,GAAS,qBACSyH,EACdzH,GAAS,IAAMyH,EAAOjG,GAG1B,OADAxB,GAAS,S,wJC9CA7K,EAMT,WAAY2L,EAAazJ,EAAcsJ,EAAcC,GAAgB,yBALrEE,UAKoE,OAJpEzJ,WAIoE,OAHpEsJ,WAGoE,OAFpEC,aAEoE,EAChE3L,KAAK6L,KAAOA,EACZ7L,KAAKoC,MAAQA,EACbpC,KAAK0L,MAAQA,EACb1L,KAAK2L,QAAUA,GAKhB,SAASmC,EAA0B2E,EAA2B1H,GAEjE,IAAK,IAAMwB,KADXxB,GAAS,kCACS0H,EACd1H,GAAS,IAAM0H,EAASlG,GAAKV,KAGjC,IAAK,IAAMU,KADXxB,GAAS,WACS0H,EACd1H,GAAS,IAAM0H,EAASlG,GAAKb,MAGjC,IAAK,IAAMa,KADXxB,GAAS,aACS0H,EACd1H,GAAS,IAAM0H,EAASlG,GAAKZ,QAGjC,IAAK,IAAMY,KADXxB,GAAS,iBACS0H,EACd1H,GAAS,IAAM0H,EAASlG,GAAKnK,MAIjC,OADA2I,GAAS,S,mGC/BA1K,EAAb,WAQI,WAAY6O,EAAWnE,EAAcW,EAAcC,EAAgBc,EAA8BiG,GAAuB,yBAPxHlG,mBAOuH,OANvHC,mBAMuH,OALvH1B,WAKuH,OAJvH2B,mBAIuH,OAHvHhB,WAGuH,OAFvHC,aAEuH,EACnH3L,KAAKwM,cAAgB0C,EACrBlP,KAAK+K,MAAQA,EACb/K,KAAK0L,MAAQA,EACb1L,KAAK2L,QAAUA,EACf3L,KAAKyM,cAAgBA,EACrBzM,KAAK0M,cAAgBgG,EAd7B,gDAiBI,SAAoBC,GAEhB,IAAIC,EAA0B,GAS9B,OAPA5S,KAAKyM,cAAcoG,SAAQ,SAAAvS,IAEnBA,EAAQkM,cAAgBmG,IACxBC,EAAY7S,KAAKO,MAIlBsS,IA5Bf,yBA+BI,SAAmBD,GASf,OAPA3S,KAAKyM,cAAcoG,SAAQ,SAAAvS,GAEvB,GAAIA,EAAQkM,cAAgBmG,EACxB,OAAOrS,KAIR,SAxCf,M,iICFaA,EAMT,WAAY4O,EAAWnD,EAAcL,EAAcC,GAAgB,yBALnEa,mBAKkE,OAJlET,WAIkE,OAHlEL,WAGkE,OAFlEC,aAEkE,EAC9D3L,KAAKwM,cAAgB0C,EACrBlP,KAAK+L,MAAQA,EACb/L,KAAK0L,MAAQA,EACb1L,KAAK2L,QAAUA,I,iFCVvB,cAyEA,IAAImH,EAAc,WAClB,IAAI1W,EAAE,SAASC,EAAEC,EAAEF,EAAEG,GAAG,IAAIH,EAAEA,GAAG,GAAGG,EAAEF,EAAEG,OAAOD,IAAIH,EAAEC,EAAEE,IAAID,GAAG,OAAOF,GAAGK,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,EAAE,GAAGC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,EAAE,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,IAAIiM,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIwI,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAChdnV,EAAS,CAACC,MAAO,aACrBC,GAAI,GACJC,SAAU,CAAC,MAAQ,EAAE,KAAO,EAAE,MAAQ,EAAE,IAAI,EAAE,GAAK,EAAE,eAAiB,EAAE,MAAQ,EAAE,MAAQ,EAAE,KAAO,GAAG,IAAM,GAAG,MAAQ,GAAG,WAAa,GAAG,IAAI,GAAG,UAAY,GAAG,UAAY,GAAG,SAAW,GAAG,IAAI,GAAG,QAAU,GAAG,QAAU,GAAG,SAAW,GAAG,YAAc,GAAG,UAAY,GAAG,WAAa,GAAG,SAAW,GAAG,OAAS,GAAG,OAAS,GAAG,QAAU,EAAE,KAAO,GACrVC,WAAY,CAACC,EAAE,QAAQC,EAAE,QAAQC,EAAE,IAAIC,EAAE,KAAKC,EAAE,QAAQsC,GAAG,MAAMpC,GAAG,IAAIC,GAAG,IAAIC,GAAG,UAAUC,GAAG,UAAUC,GAAG,WAAWC,GAAG,cAAcC,GAAG,YAAYC,GAAG,aAAaC,GAAG,WAAWC,GAAG,SAASC,GAAG,UACpMC,aAAccAAe,SAAmBC,EAAQC,EAAQC,EAAUxB,EAAIyB,EAAyBC,EAAiBC,GAG1G,IAAIC,EAAKF,EAAGjD,OAAS,EACrB,OAAQgD,GACR,KAAK,EAAG,KAAK,EAEL,IAAII,EAAmBC,EAEvB,OADAA,EAAe,GACR,CAACC,IAAKL,EAAGE,GAAKE,aAAeD,GAG5C,KAAK,EACLH,EAAGE,EAAG,GAAGI,KAAKN,EAAGE,EAAG,IAAKK,KAAKC,EAAIR,EAAGE,EAAG,GACxC,MACA,KAAK,EACLK,KAAKC,EAAI,CAACR,EAAGE,EAAG,IAChB,MACA,KAAK,EAEMF,EAAGE,EAAG,KAAKF,EAAGE,EAAG,IAAIE,EAAaE,KAAK,IAAIG,EAAW,YAAY,eAAeT,EAAGE,EAAG,GAAG,mBAAmBD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,eAC9IJ,KAAKC,EAAI,IAAII,EAAQZ,EAAGE,EAAG,GAAG,GAAGD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,aAAaX,EAAGE,EAAG,GAAGF,EAAGE,EAAG,IAEnG,MACA,KAAK,EAEMF,EAAGE,EAAG,KAAKF,EAAGE,EAAG,IAAIE,EAAaE,KAAK,IAAIG,EAAW,YAAY,eAAeT,EAAGE,EAAG,GAAG,mBAAmBD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,eAC9IJ,KAAKC,EAAI,IAAII,EAAQZ,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,aAAaX,EAAGE,EAAG,GAAG,IAEnG,MACA,KAAK,EACLK,KAAKC,EAAI,IAAII,EAAQZ,EAAGE,EAAG,GAAG,GAAGD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,aAAaX,EAAGE,EAAG,GAAG,IACrF,MACA,KAAK,GAEMF,EAAGE,EAAG,KAAKF,EAAGE,EAAG,IAAIE,EAAaE,KAAK,IAAIG,EAAW,YAAY,eAAeT,EAAGE,EAAG,GAAG,mBAAmBD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,eAC9IJ,KAAKC,EAAI,IAAII,EAAQZ,EAAGE,EAAG,GAAG,GAAGD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,aAAa,GAAGX,EAAGE,EAAG,IAE7F,MACA,KAAK,GAEMF,EAAGE,EAAG,KAAKF,EAAGE,EAAG,IAAIE,EAAaE,KAAK,IAAIG,EAAW,YAAY,eAAeT,EAAGE,EAAG,GAAG,mBAAmBD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,eAC9IJ,KAAKC,EAAI,IAAII,EAAQZ,EAAGE,EAAG,GAAGF,EAAGE,EAAG,GAAGD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,aAAa,GAAG,IAE7F,MACA,KAAK,GACLJ,KAAKC,EAAI,IAAII,EAAQZ,EAAGE,EAAG,GAAG,GAAGD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,aAAa,GAAG,IAC/E,MACA,KAAK,GACLP,EAAaE,KAAK,IAAIG,EAAW,aAAa,4CAA4CR,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,eACxH,MACA,KAAK,GAAI,KAAK,GACdX,EAAGE,EAAG,GAAGI,KAAKN,EAAGE,IAAMK,KAAKC,EAAIR,EAAGE,EAAG,GACtC,MACA,KAAK,GAAI,KAAK,GACdK,KAAKC,EAAI,CAACR,EAAGE,IACb,MACA,KAAK,GAAI,KAAK,GACdK,KAAKC,EAAI,IAAIK,EAAQb,EAAGE,EAAG,GAAIF,EAAGE,GAAKD,EAAGC,EAAG,GAAGQ,WAAYT,EAAGC,EAAG,GAAGS,cACrE,MACA,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAC3DJ,KAAKC,EAAIR,EAAGE,EAAG,GAAI,IAAKF,EAAGE,GAC3B,MACA,KAAK,GACLK,KAAKC,EAAIR,EAAGE,EAAG,GAANF,KACT,MACA,KAAK,GACLO,KAAKC,EAAIR,EAAGE,EAAG,GAANF,KACT,MACA,KAAK,GACLO,KAAKC,EAAIR,EAAGE,EAAG,GAANF,KACT,MACA,KAAK,GACLO,KAAKC,EAAIR,EAAGE,EAAG,GAANF,KACT,MACA,KAAK,GACLO,KAAKC,EAAIR,EAAGE,EAAG,GAANF,KACT,MACA,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAAI,KAAK,GAC3DO,KAAKC,EAAIR,EAAGE,GACZ,MACA,KAAK,GACLK,KAAKC,EAAI,IACT,MACA,KAAK,GACLD,KAAKC,EAAI,IACT,MACA,KAAK,GACLD,KAAKC,EAAI,IACT,MACA,KAAK,GACLD,KAAKC,EAAI,IACT,MACA,KAAK,GACLD,KAAKC,EAAI,MAITM,MAAO,CAAC,CAACrC,EAAEzB,EAAI+D,EAAE,EAAErC,EAAE,CAAC,EAAE,GAAGsC,EAAE,EAAEC,GAAG,GAAG,CAACC,EAAE,CAAC,IAAI,CAACvC,EAAE,CAAC,EAAE,GAAGC,EAAE3B,GAAK,CAACiE,EAAE,CAAC,EAAE,GAAGzC,EAAEzB,EAAI0B,EAAExB,EAAI+D,GAAG,GAAGtE,EAAEQ,EAAI,CAAC,EAAE,GAAG,CAAC2B,GAAG,GAAGqC,GAAG,CAAC,EAAE,MAAM,CAACtC,EAAE,CAAC,EAAE,IAAIuC,GAAG,IAAI,CAACxC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAExB,EAAIiE,EAAE,GAAGxC,EAAE,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIuC,GAAG,IAAI,CAACH,GAAG,CAAC,EAAE,KAAK,CAACvC,EAAE3B,GAAKN,EAAEQ,EAAIE,GAAKV,EAAEQ,EAAI,CAAC,EAAE,IAAIR,EAAEW,EAAI,CAAC,EAAE,KAAKX,EAAEW,EAAI,CAAC,EAAE,KAAK,CAACsB,EAAExB,EAAIiE,EAAE,GAAGC,GAAG,IAAI,CAAC1C,EAAExB,EAAIyB,EAAE,CAAC,EAAE,IAAIE,GAAG,CAAC,EAAE,IAAIuC,GAAG,IAAI,CAAC7C,EAAEzB,EAAI0B,EAAExB,EAAI0B,EAAErB,EAAI0D,GAAG,GAAGM,GAAG,GAAGxC,GAAGvB,EAAIgE,GAAG,GAAGxC,GAAGvB,EAAIwB,GAAGvB,EAAIwB,GAAGvB,EAAIwB,GAAGvB,EAAIwB,GAAGvB,EAAIwB,GAAGvB,EAAIwB,GAAGvB,EAAIwB,GAAGvB,EAAIwB,GAAGvB,EAAIwB,GAAGvB,GAAK,CAACW,EAAE,CAAC,EAAE,KAAKlC,EAAEwB,EAAI,CAAC,EAAE,KAAK,CAACa,GAAG,CAAC,EAAE,KAAKrC,EAAEQ,EAAI,CAAC,EAAE,IAAI,CAACwB,EAAE,CAAC,EAAE,IAAIC,EAAExB,EAAIkE,GAAG,IAAI,CAAC7C,EAAEzB,EAAI0B,EAAExB,EAAI0B,EAAErB,EAAI0D,GAAG,GAAGM,GAAG,GAAGxC,GAAGvB,EAAIgE,GAAG,GAAGxC,GAAGvB,EAAIwB,GAAGvB,EAAIwB,GAAGvB,EAAIwB,GAAGvB,EAAIwB,GAAGvB,EAAIwB,GAAGvB,EAAIwB,GAAGvB,EAAIwB,GAAGvB,EAAIwB,GAAGvB,EAAIwB,GAAGvB,GAAK,CAACW,EAAE,CAAC,EAAE,KAAKlC,EAAEwB,EAAI,CAAC,EAAE,KAAK,CAACM,EAAEzB,EAAI0B,EAAE,CAAC,EAAE,IAAIuC,GAAG,IAAI,CAACvC,EAAE,CAAC,EAAE,IAAIE,EAAEwL,EAAIrL,GAAGsL,EAAIrL,GAAGsL,EAAIrL,GAAGsL,EAAIrL,GAAGsL,EAAIrL,GAAGsL,EAAIrL,GAAGsL,EAAIrL,GAAGsL,EAAIrL,GAAGsL,EAAIrL,GAAGsL,EAAIrL,GAAGsL,EAAIrL,GAAG6T,GAAK3W,EAAEU,EAAI,CAAC,EAAE,KAAKV,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAEW,EAAI,CAAC,EAAE,KAAK,CAAC2B,GAAG,CAAC,EAAE,IAAIC,GAAG,CAAC,EAAE,KAAK,CAACL,EAAE,CAAC,EAAE,KAAK,CAACJ,EAAEzB,EAAI0B,EAAE,CAAC,EAAE,IAAIuC,GAAG,IAAI,CAACvC,EAAE,CAAC,EAAE,IAAIE,EAAEwL,EAAIrL,GAAGsL,EAAIrL,GAAGsL,EAAIrL,GAAGsL,EAAIrL,GAAGsL,EAAIrL,GAAGsL,EAAIrL,GAAGsL,EAAIrL,GAAGsL,EAAIrL,GAAGsL,EAAIrL,GAAGsL,EAAIrL,GAAGsL,EAAIrL,GAAG6T,GAAK3W,EAAEW,EAAI,CAAC,EAAE,IAAI,CAACsB,EAAE3B,EAAI8B,GAAG,CAAC,EAAE,KAAKpC,EAAEU,EAAI,CAAC,EAAE,KAAK,CAAC0B,GAAG,CAAC,EAAE,KAAKpC,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAE4W,EAAI,CAAC,EAAE,KAAK5W,EAAEwB,EAAI,CAAC,EAAE,KAAKxB,EAAEwB,EAAI,CAAC,EAAE,KAAK,CAACM,EAAEzB,EAAI0B,EAAExB,EAAI8D,EAAE,GAAGC,GAAG,GAAG,CAACrC,EAAE3B,EAAI8B,GAAG,CAAC,EAAE,KAAK,CAACA,GAAG,CAAC,EAAE,KAAK,CAACH,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACsC,EAAE,CAAC,EAAE,GAAGzC,EAAEzB,EAAI0B,EAAExB,EAAI+D,GAAG,GAAG,CAACrC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACC,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAK,CAACA,EAAE,CAAC,EAAE,KAAKlC,EAAEW,EAAI,CAAC,EAAE,KAAKX,EAAEW,EAAI,CAAC,EAAE,KAAKX,EAAEW,EAAI,CAAC,EAAE,IAAIX,EAAEW,EAAI,CAAC,EAAE,KACpiDmE,eAAgB,GAChBc,WAAY,SAAqBC,EAAKC,GAClC,IAAIA,EAAKC,YAEF,CACH,IAAIC,EAAQ,IAAIC,MAAMJ,GAEtB,MADAG,EAAMF,KAAOA,EACPE,EAJNpC,KAAKlC,MAAMmE,IAOnBK,MAAO,SAAgBC,GACnB,IAAIC,EAAOxC,KACPyC,EAAQ,CAAC,GAETC,EAAS,CAAC,MACVC,EAAS,GACTpC,EAAQP,KAAKO,MACblB,EAAS,GACTE,EAAW,EACXD,EAAS,EACTsD,EAAa,EACbC,EAAS,EACTC,EAAM,EAENC,EAAOJ,EAAOK,MAAMC,KAAKC,UAAW,GAIpCC,EAAQC,OAAOC,OAAOrD,KAAKmD,OAC3BG,EAAc,CAAEvF,GAAI,IAExB,IAAK,IAAI1B,KAAK2D,KAAKjC,GACbqF,OAAOG,UAAUC,eAAeP,KAAKjD,KAAKjC,GAAI1B,KAChDiH,EAAYvF,GAAG1B,GAAK2D,KAAKjC,GAAG1B,IAIhC8G,EAAMM,SAASlB,EAAOe,EAAYvF,IAClCuF,EAAYvF,GAAGoF,MAAQA,EACvBG,EAAYvF,GAAGF,OAASmC,KACG,oBAAhBmD,EAAMO,SACbP,EAAMO,OAAS,IAEnB,IAAIC,EAAQR,EAAMO,OAClBf,EAAO5C,KAAK4D,GAEZ,IAAIC,EAAST,EAAMU,SAAWV,EAAMU,QAAQD,OAQ5C,SAASE,EAAUC,GACftB,EAAMjG,OAASiG,EAAMjG,OAAS,EAAIuH,EAClCrB,EAAOlG,OAASkG,EAAOlG,OAASuH,EAChCpB,EAAOnG,OAASmG,EAAOnG,OAASuH,EATK,oBAA9BT,EAAYvF,GAAGiE,WACtBhC,KAAKgC,WAAasB,EAAYvF,GAAGiE,WAEjChC,KAAKgC,WAAaoB,OAAOY,eAAehE,MAAMgC,WAqBlD,IAXA,IAUIiC,EAAQC,EAAgBC,EAAOC,EAAWC,EAAeC,EAAGC,EAAKC,EAAUC,EAV3EC,EAAM,WACN,IAAIC,EAMJ,MAHqB,kBAFrBA,EAAQxB,EAAMuB,OAAS5B,KAGnB6B,EAAQnC,EAAKxE,SAAS2G,IAAUA,GAE7BA,GAGsCC,EAAQ,KAC5C,CAiBT,GAfAT,EAAQ1B,EAAMA,EAAMjG,OAAS,GAGzBwD,KAAKkB,eAAeiD,GACpBC,EAASpE,KAAKkB,eAAeiD,IAEd,OAAXF,GAAoC,oBAAVA,IAC1BA,EAASS,KAGbN,EAAS7D,EAAM4D,IAAU5D,EAAM4D,GAAOF,IAKpB,qBAAXG,IAA2BA,EAAO5H,SAAW4H,EAAO,GAAI,KAC3DS,EAKKC,EAAT,SAAwCX,GAKpC,IAJA,IAAIY,EAActC,EAAMjG,OAAS,EAC7BwI,EAAQ,IAGJ,CAEJ,GAAKnC,EAAOoC,aAAe1E,EAAM4D,GAC7B,OAAOa,EAEX,GAAc,IAAVb,GAAeY,EAAc,EAC7B,OAAO,EAGXZ,EAAQ1B,EADRsC,GAAe,KAEbC,IAnBNE,EAAS,GAuBb,GAAKtC,EA0BMsB,IAAmBpB,IAC1B+B,EAAmBC,EAA+BX,QA3BrC,CAMb,IAAKG,KAJLO,EAAmBC,EAA+BX,GAGlDM,EAAW,GACDlE,EAAM4D,GACRnE,KAAK/B,WAAWqG,IAAMA,EAAIzB,GAC1B4B,EAAS1E,KAAK,IAAIC,KAAK/B,WAAWqG,GAAG,KAIzCY,EADA/B,EAAMgC,aACG,wBAAwB5F,EAAS,GAAG,MAAM4D,EAAMgC,eAAe,eAAeV,EAASW,KAAK,MAAQ,WAAapF,KAAK/B,WAAWgG,IAAWA,GAAS,IAErJ,wBAAwB1E,EAAS,GAAG,iBAC9B0E,GAAUnB,EAAM,eACJ,KAAK9C,KAAK/B,WAAWgG,IAAWA,GAAQ,KAEvEjE,KAAKgC,WAAWkD,EAAQ,CACpBG,KAAMlC,EAAMmC,MACZX,MAAO3E,KAAK/B,WAAWgG,IAAWA,EAClCsB,KAAMpC,EAAM5D,SACZiG,IAAK7B,EACLc,SAAUA,EACVtC,aAAmC,IAArB0C,IAOtB,GAAkB,GAAdjC,EAAiB,CACjB,GAAIqB,IAAWnB,GAAOoB,IAAmBpB,EACrC,MAAM,IAAIT,MAAM6C,GAAU,gEAI9B5F,EAAS6D,EAAM7D,OACfD,EAAS8D,EAAM9D,OACfE,EAAW4D,EAAM5D,SACjBoE,EAAQR,EAAMO,OACdO,EAASS,IAIb,IAAyB,IAArBG,EACA,MAAM,IAAIxC,MAAM6C,GAAU,8DAE9BpB,EAASe,GAETX,EAAkBD,GAAUpB,EAAS,KAAOoB,EAC5CA,EAASpB,EACTsB,EAAQ1B,EAAMA,EAAMjG,OAAO,GAC3B4H,EAAS7D,EAAM4D,IAAU5D,EAAM4D,GAAOtB,GACtCD,EAAa,EAIjB,GAAIwB,EAAO,aAAcqB,OAASrB,EAAO5H,OAAS,EAC9C,MAAM,IAAI6F,MAAM,oDAAoD8B,EAAM,YAAYF,GAG1F,OAAQG,EAAO,IACX,KAAK,EAGD3B,EAAM1C,KAAKkE,GACXvB,EAAO3C,KAAKoD,EAAM9D,QAClBsD,EAAO5C,KAAKoD,EAAMO,QAClBjB,EAAM1C,KAAKqE,EAAO,IAClBH,EAAS,KACJC,GAUDD,EAASC,EACTA,EAAiB,OAVjB5E,EAAS6D,EAAM7D,OACfD,EAAS8D,EAAM9D,OACfE,EAAW4D,EAAM5D,SACjBoE,EAAQR,EAAMO,OACVd,EAAa,GACbA,KAOR,MAEJ,KAAK,EAoBD,GAhBA2B,EAAMvE,KAAKb,aAAaiF,EAAO,IAAI,GAGnCQ,EAAM3E,EAAIyC,EAAOA,EAAOlG,OAAO+H,GAE/BK,EAAMlF,GAAK,CACPS,WAAYwC,EAAOA,EAAOnG,QAAQ+H,GAAK,IAAIpE,WAC3CuF,UAAW/C,EAAOA,EAAOnG,OAAO,GAAGkJ,UACnCtF,aAAcuC,EAAOA,EAAOnG,QAAQ+H,GAAK,IAAInE,aAC7CuF,YAAahD,EAAOA,EAAOnG,OAAO,GAAGmJ,aAErC/B,IACFgB,EAAMlF,GAAGkG,MAAQ,CAACjD,EAAOA,EAAOnG,QAAQ+H,GAAK,IAAIqB,MAAM,GAAIjD,EAAOA,EAAOnG,OAAO,GAAGoJ,MAAM,KAI1E,qBAFjBvB,EAAIrE,KAAKZ,cAAcyG,MAAMjB,EAAO,CAACvF,EAAQC,EAAQC,EAAU+D,EAAYvF,GAAIqG,EAAO,GAAI1B,EAAQC,GAAQmD,OAAO/C,KAG7G,OAAOsB,EAIPE,IACA9B,EAAQA,EAAMO,MAAM,GAAG,EAAEuB,EAAI,GAC7B7B,EAASA,EAAOM,MAAM,GAAI,EAAEuB,GAC5B5B,EAASA,EAAOK,MAAM,GAAI,EAAEuB,IAGhC9B,EAAM1C,KAAKC,KAAKb,aAAaiF,EAAO,IAAI,IACxC1B,EAAO3C,KAAK6E,EAAM3E,GAClB0C,EAAO5C,KAAK6E,EAAMlF,IAElB8E,EAAWjE,EAAMkC,EAAMA,EAAMjG,OAAO,IAAIiG,EAAMA,EAAMjG,OAAO,IAC3DiG,EAAM1C,KAAKyE,GACX,MAEJ,KAAK,EAED,OAAO,GAKnB,OAAO,IAGAnE,EAAW0F,EAAQ,IAAnB1F,QACAC,EAAWyF,EAAQ,IAAnBzF,QACAJ,EAAc6F,EAAQ,IAAtB7F,WACHL,EAAe,GAEnBsD,EACS,CAEbL,IAAI,EAEJd,WAAW,SAAoBC,EAAKC,GAC5B,IAAIlC,KAAKjC,GAAGF,OAGR,MAAM,IAAIwE,MAAMJ,GAFhBjC,KAAKjC,GAAGF,OAAOmE,WAAWC,EAAKC,IAO3CuB,SAAS,SAAUlB,EAAOxE,GAiBlB,OAhBAiC,KAAKjC,GAAKA,GAAMiC,KAAKjC,IAAM,GAC3BiC,KAAKgG,OAASzD,EACdvC,KAAKiG,MAAQjG,KAAKkG,WAAalG,KAAKmG,MAAO,EAC3CnG,KAAKT,SAAWS,KAAKV,OAAS,EAC9BU,KAAKX,OAASW,KAAKoG,QAAUpG,KAAKsF,MAAQ,GAC1CtF,KAAKqG,eAAiB,CAAC,WACvBrG,KAAK0D,OAAS,CACVvD,WAAY,EACZC,aAAc,EACdsF,UAAW,EACXC,YAAa,GAEb3F,KAAK6D,QAAQD,SACb5D,KAAK0D,OAAOkC,MAAQ,CAAC,EAAE,IAE3B5F,KAAKsG,OAAS,EACPtG,MAIfuC,MAAM,WACE,IAAIgE,EAAKvG,KAAKgG,OAAO,GAkBrB,OAjBAhG,KAAKX,QAAUkH,EACfvG,KAAKV,SACLU,KAAKsG,SACLtG,KAAKsF,OAASiB,EACdvG,KAAKoG,SAAWG,EACJA,EAAGjB,MAAM,oBAEjBtF,KAAKT,WACLS,KAAK0D,OAAOgC,aAEZ1F,KAAK0D,OAAOiC,cAEZ3F,KAAK6D,QAAQD,QACb5D,KAAK0D,OAAOkC,MAAM,KAGtB5F,KAAKgG,OAAShG,KAAKgG,OAAOhD,MAAM,GACzBuD,GAIfC,MAAM,SAAUD,GACR,IAAIhC,EAAMgC,EAAG/J,OACTiK,EAAQF,EAAGG,MAAM,iBAErB1G,KAAKgG,OAASO,EAAKvG,KAAKgG,OACxBhG,KAAKX,OAASW,KAAKX,OAAOsH,OAAO,EAAG3G,KAAKX,OAAO7C,OAAS+H,GAEzDvE,KAAKsG,QAAU/B,EACf,IAAIqC,EAAW5G,KAAKsF,MAAMoB,MAAM,iBAChC1G,KAAKsF,MAAQtF,KAAKsF,MAAMqB,OAAO,EAAG3G,KAAKsF,MAAM9I,OAAS,GACtDwD,KAAKoG,QAAUpG,KAAKoG,QAAQO,OAAO,EAAG3G,KAAKoG,QAAQ5J,OAAS,GAExDiK,EAAMjK,OAAS,IACfwD,KAAKT,UAAYkH,EAAMjK,OAAS,GAEpC,IAAI6H,EAAIrE,KAAK0D,OAAOkC,MAgBpB,OAdA5F,KAAK0D,OAAS,CACVvD,WAAYH,KAAK0D,OAAOvD,WACxBuF,UAAW1F,KAAKT,SAAW,EAC3Ba,aAAcJ,KAAK0D,OAAOtD,aAC1BuF,YAAac,GACRA,EAAMjK,SAAWoK,EAASpK,OAASwD,KAAK0D,OAAOtD,aAAe,GAC5DwG,EAASA,EAASpK,OAASiK,EAAMjK,QAAQA,OAASiK,EAAM,GAAGjK,OAChEwD,KAAK0D,OAAOtD,aAAemE,GAG7BvE,KAAK6D,QAAQD,SACb5D,KAAK0D,OAAOkC,MAAQ,CAACvB,EAAE,GAAIA,EAAE,GAAKrE,KAAKV,OAASiF,IAEpDvE,KAAKV,OAASU,KAAKX,OAAO7C,OACnBwD,MAIf6G,KAAK,WAEG,OADA7G,KAAKiG,OAAQ,EACNjG,MAIf8G,OAAO,WACC,OAAI9G,KAAK6D,QAAQkD,iBACb/G,KAAKkG,YAAa,EASflG,MAPIA,KAAKgC,WAAW,0BAA4BhC,KAAKT,SAAW,GAAK,mIAAqIS,KAAKmF,eAAgB,CAC9NE,KAAM,GACNV,MAAO,KACPY,KAAMvF,KAAKT,YAQ3ByH,KAAK,SAAUjD,GACP/D,KAAKwG,MAAMxG,KAAKsF,MAAMtC,MAAMe,KAIpCkD,UAAU,WACF,IAAIC,EAAOlH,KAAKoG,QAAQO,OAAO,EAAG3G,KAAKoG,QAAQ5J,OAASwD,KAAKsF,MAAM9I,QACnE,OAAQ0K,EAAK1K,OAAS,GAAK,MAAM,IAAM0K,EAAKP,QAAQ,IAAIQ,QAAQ,MAAO,KAI/EC,cAAc,WACN,IAAIC,EAAOrH,KAAKsF,MAIhB,OAHI+B,EAAK7K,OAAS,KACd6K,GAAQrH,KAAKgG,OAAOW,OAAO,EAAG,GAAGU,EAAK7K,UAElC6K,EAAKV,OAAO,EAAE,KAAOU,EAAK7K,OAAS,GAAK,MAAQ,KAAK2K,QAAQ,MAAO,KAIpFhC,aAAa,WACL,IAAImC,EAAMtH,KAAKiH,YACXM,EAAI,IAAI9B,MAAM6B,EAAI9K,OAAS,GAAG4I,KAAK,KACvC,OAAOkC,EAAMtH,KAAKoH,gBAAkB,KAAOG,EAAI,KAIvDC,WAAW,SAASlC,EAAOmC,GACnB,IAAI9C,EACA8B,EACAiB,EAwDJ,GAtDI1H,KAAK6D,QAAQkD,kBAEbW,EAAS,CACLnI,SAAUS,KAAKT,SACfmE,OAAQ,CACJvD,WAAYH,KAAK0D,OAAOvD,WACxBuF,UAAW1F,KAAK0F,UAChBtF,aAAcJ,KAAK0D,OAAOtD,aAC1BuF,YAAa3F,KAAK0D,OAAOiC,aAE7BtG,OAAQW,KAAKX,OACbiG,MAAOtF,KAAKsF,MACZqC,QAAS3H,KAAK2H,QACdvB,QAASpG,KAAKoG,QACd9G,OAAQU,KAAKV,OACbgH,OAAQtG,KAAKsG,OACbL,MAAOjG,KAAKiG,MACZD,OAAQhG,KAAKgG,OACbjI,GAAIiC,KAAKjC,GACTsI,eAAgBrG,KAAKqG,eAAerD,MAAM,GAC1CmD,KAAMnG,KAAKmG,MAEXnG,KAAK6D,QAAQD,SACb8D,EAAOhE,OAAOkC,MAAQ5F,KAAK0D,OAAOkC,MAAM5C,MAAM,MAItDyD,EAAQnB,EAAM,GAAGA,MAAM,sBAEnBtF,KAAKT,UAAYkH,EAAMjK,QAE3BwD,KAAK0D,OAAS,CACVvD,WAAYH,KAAK0D,OAAOgC,UACxBA,UAAW1F,KAAKT,SAAW,EAC3Ba,aAAcJ,KAAK0D,OAAOiC,YAC1BA,YAAac,EACAA,EAAMA,EAAMjK,OAAS,GAAGA,OAASiK,EAAMA,EAAMjK,OAAS,GAAG8I,MAAM,UAAU,GAAG9I,OAC5EwD,KAAK0D,OAAOiC,YAAcL,EAAM,GAAG9I,QAEpDwD,KAAKX,QAAUiG,EAAM,GACrBtF,KAAKsF,OAASA,EAAM,GACpBtF,KAAK2H,QAAUrC,EACftF,KAAKV,OAASU,KAAKX,OAAO7C,OACtBwD,KAAK6D,QAAQD,SACb5D,KAAK0D,OAAOkC,MAAQ,CAAC5F,KAAKsG,OAAQtG,KAAKsG,QAAUtG,KAAKV,SAE1DU,KAAKiG,OAAQ,EACbjG,KAAKkG,YAAa,EAClBlG,KAAKgG,OAAShG,KAAKgG,OAAOhD,MAAMsC,EAAM,GAAG9I,QACzCwD,KAAKoG,SAAWd,EAAM,GACtBX,EAAQ3E,KAAKZ,cAAc6D,KAAKjD,KAAMA,KAAKjC,GAAIiC,KAAMyH,EAAczH,KAAKqG,eAAerG,KAAKqG,eAAe7J,OAAS,IAChHwD,KAAKmG,MAAQnG,KAAKgG,SAClBhG,KAAKmG,MAAO,GAEZxB,EACA,OAAOA,EACJ,GAAI3E,KAAKkG,WAAY,CAExB,IAAK,IAAI7J,KAAKqL,EACV1H,KAAK3D,GAAKqL,EAAOrL,GAErB,OAAO,EAEX,OAAO,GAIfgL,KAAK,WACG,GAAIrH,KAAKmG,KACL,OAAOnG,KAAK8C,IAMhB,IAAI6B,EACAW,EACAsC,EACAC,EAPC7H,KAAKgG,SACNhG,KAAKmG,MAAO,GAOXnG,KAAKiG,QACNjG,KAAKX,OAAS,GACdW,KAAKsF,MAAQ,IAGjB,IADA,IAAIwC,EAAQ9H,KAAK+H,gBACRC,EAAI,EAAGA,EAAIF,EAAMtL,OAAQwL,IAE9B,IADAJ,EAAY5H,KAAKgG,OAAOV,MAAMtF,KAAK8H,MAAMA,EAAME,SAC5B1C,GAASsC,EAAU,GAAGpL,OAAS8I,EAAM,GAAG9I,QAAS,CAGhE,GAFA8I,EAAQsC,EACRC,EAAQG,EACJhI,KAAK6D,QAAQkD,gBAAiB,CAE9B,IAAc,KADdpC,EAAQ3E,KAAKwH,WAAWI,EAAWE,EAAME,KAErC,OAAOrD,EACJ,GAAI3E,KAAKkG,WAAY,CACxBZ,GAAQ,EACR,SAGA,OAAO,EAER,IAAKtF,KAAK6D,QAAQoE,KACrB,MAIZ,OAAI3C,GAEc,KADdX,EAAQ3E,KAAKwH,WAAWlC,EAAOwC,EAAMD,MAE1BlD,EAKK,KAAhB3E,KAAKgG,OACEhG,KAAK8C,IAEL9C,KAAKgC,WAAW,0BAA4BhC,KAAKT,SAAW,GAAK,yBAA2BS,KAAKmF,eAAgB,CACpHE,KAAM,GACNV,MAAO,KACPY,KAAMvF,KAAKT,YAM3BmF,IAAI,WACI,IAAIL,EAAIrE,KAAKqH,OACb,OAAIhD,GAGOrE,KAAK0E,OAKxBwD,MAAM,SAAgBC,GACdnI,KAAKqG,eAAetG,KAAKoI,IAIjCC,SAAS,WAED,OADQpI,KAAKqG,eAAe7J,OAAS,EAC7B,EACGwD,KAAKqG,eAAegC,MAEpBrI,KAAKqG,eAAe,IAKvC0B,cAAc,WACN,OAAI/H,KAAKqG,eAAe7J,QAAUwD,KAAKqG,eAAerG,KAAKqG,eAAe7J,OAAS,GACxEwD,KAAKsI,WAAWtI,KAAKqG,eAAerG,KAAKqG,eAAe7J,OAAS,IAAIsL,MAErE9H,KAAKsI,WAAL,QAA2BR,OAK9CS,SAAS,SAAmBxE,GAEpB,OADAA,EAAI/D,KAAKqG,eAAe7J,OAAS,EAAIgM,KAAKC,IAAI1E,GAAK,KAC1C,EACE/D,KAAKqG,eAAetC,GAEpB,WAKnB2E,UAAU,SAAoBP,GACtBnI,KAAKkI,MAAMC,IAInBQ,eAAe,WACP,OAAO3I,KAAKqG,eAAe7J,QAEnCqH,QAAS,CAAC,oBAAmB,GAC7BzE,cAAe,SAAmBrB,EAAG6K,EAAIC,EAA0BC,GAEnE,OAAOD,GACP,KAAK,EAEL,KAAK,EACL,MACA,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,EAEd,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GACmCE,QAAQC,IAAI,+BAA8BJ,EAAIvJ,OAAS,kBAAoBuJ,EAAIlF,OAAOvD,WAAa,oBAAsByI,EAAIlF,OAAOtD,gBAK5K0H,MAAO,CAAC,YAAY,oCAAoC,UAAU,UAAU,WAAW,UAAU,WAAW,uBAAuB,uBAAuB,mJAAiF,+CAA+C,aAAa,aAAa,cAAc,eAAe,eAAe,gBAAgB,UAAU,WAC1XQ,WAAY,CAAC,QAAU,CAAC,MAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,WAAY,KAK7F,SAASW,IACPjJ,KAAKjC,GAAK,GAGZ,OALAF,EAAOsF,MAAQA,EAIf8F,EAAO1F,UAAY1F,EAAOA,EAAOoL,OAASA,EACnC,IAAIA,EAnuBO,GAwuBlBC,EAAQrL,OAASiV,EACjB5J,EAAQD,OAAS6J,EAAW7J,OAC5BC,EAAQ5G,MAAQ,WAAc,OAAOwQ,EAAWxQ,MAAMuD,MAAMiN,EAAY5P,YACxEgG,EAAQC,KAAO,SAAuBpG,GAC7BA,EAAK,KACNgG,QAAQC,IAAI,UAAUjG,EAAK,GAAG,SAC9BqG,EAAQC,KAAK,IAEjB,IAAIC,EAASvD,EAAQ,IAAMwD,aAAaxD,EAAQ,IAAQyD,UAAUzG,EAAK,IAAK,QAC5E,OAAOmG,EAAQrL,OAAOyE,MAAMgH,IAEKvD,WAAiB0D,GACpDP,EAAQC,KAAKC,EAAQM,KAAK1G,MAAM,M","file":"static/js/main.b849e398.chunk.js","sourcesContent":["/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar xmlGrammarDesc = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,7],$V2=[1,11],$V3=[1,19],$V4=[2,4],$V5=[1,2,4,12],$V6=[1,28],$V7=[1,36],$V8=[1,37],$V9=[1,27],$Va=[1,26],$Vb=[1,29],$Vc=[1,30],$Vd=[1,31],$Ve=[1,32],$Vf=[1,33],$Vg=[1,34],$Vh=[1,35],$Vi=[5,8,14],$Vj=[5,6,8,14];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"LISTAATRIBUTOS\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"CHECK\":11,\"EOF\":12,\"LISTANODOS\":13,\"/\":14,\"NODOTEXTO\":15,\"FINDERROR\":16,\"ATRIBUTO\":17,\"=\":18,\"sstring\":19,\"dstring\":20,\"lessthan\":21,\"greaterthan\":22,\"ampersand\":23,\"apostrophe\":24,\"quotmark\":25,\"number\":26,\"random\":27,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",12:\"EOF\",14:\"/\",18:\"=\",19:\"sstring\",20:\"dstring\",21:\"lessthan\",22:\"greaterthan\",23:\"ampersand\",24:\"apostrophe\",25:\"quotmark\",26:\"number\",27:\"random\"},\nproductions_: [0,[3,7],[3,1],[9,2],[9,2],[11,1],[11,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[10,2],[16,1],[13,2],[13,1],[7,2],[7,1],[17,3],[17,3],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: case 2:\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp};\r\n    \nbreak;\ncase 3:\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1]; \nbreak;\ncase 4:\nthis.$ = [$$[$0-1]]; \nbreak;\ncase 7:\n\r\n        if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n        this.$ = new Entorno($$[$0-7],'',_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],$$[$0-4]);\r\n    \nbreak;\ncase 8:\n\r\n        if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n        this.$ = new Entorno($$[$0-7],$$[$0-4],_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],[]);\r\n    \nbreak;\ncase 9:\nthis.$ = new Entorno($$[$0-3],'',_$[$0-4].first_line, _$[$0-4].first_column,$$[$0-2],[]);\nbreak;\ncase 10:\n\r\n        if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n        this.$ = new Entorno($$[$0-6],'',_$[$0-7].first_line, _$[$0-7].first_column,[],$$[$0-4]);\r\n    \nbreak;\ncase 11:\n\r\n        if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n        this.$ = new Entorno($$[$0-6],$$[$0-4],_$[$0-7].first_line, _$[$0-7].first_column,[],[]);\r\n    \nbreak;\ncase 12:\nthis.$ = new Entorno($$[$0-2],'',_$[$0-3].first_line, _$[$0-3].first_column,[],[]);\nbreak;\ncase 13:\nlistaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0-1].first_line, _$[$0-1].first_column))\nbreak;\ncase 15:\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\nbreak;\ncase 16: case 18:\nthis.$ = [$$[$0]];\nbreak;\ncase 17:\n$$[$0].push($$[$0-1]); this.$ = $$[$0];\nbreak;\ncase 19: case 20:\nthis.$ = new Simbolo($$[$0-2], $$[$0], _$[$0-2].first_line, _$[$0-2].first_column);\nbreak;\ncase 21: case 22: case 23: case 29: case 30: case 31: case 32:\nthis.$ = $$[$0-1] +\" \"+ $$[$0]\nbreak;\ncase 24:\nthis.$ = $$[$0-1] +\" \"+ \"<\"\nbreak;\ncase 25:\nthis.$ = $$[$0-1] +\" \"+ \">\"\nbreak;\ncase 26:\nthis.$ = $$[$0-1] +\" \"+ \"&\"\nbreak;\ncase 27:\nthis.$ = $$[$0-1] +\" \"+ \"\\'\"\nbreak;\ncase 28:\nthis.$ = $$[$0-1] +\" \"+ \"\\\"\"\nbreak;\ncase 33: case 34: case 35: case 36: case 42: case 43: case 44:\nthis.$ = $$[$0]\nbreak;\ncase 37:\nthis.$ = \"<\"\nbreak;\ncase 38:\nthis.$ = \">\"\nbreak;\ncase 39:\nthis.$ = \"&\"\nbreak;\ncase 40:\nthis.$ = \"\\'\"\nbreak;\ncase 41:\nthis.$ = \"\\\"\"\nbreak;\n}\n},\ntable: [{2:$V0,3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,6],6:$V1},{1:[2,2]},{1:[2,6],2:$V0,4:$V2,9:8,10:4,11:9,12:[1,10]},{8:[1,13],16:12},{6:[1,14]},{6:$V3,7:15,8:[1,16],14:[1,17],17:18},{1:[2,3]},{1:$V4},{1:[2,5]},{6:$V1},o($V5,[2,13]),o($V5,[2,14]),{6:$V3,7:20,17:18},{8:[1,21],14:[1,22]},{2:$V0,4:$V2,6:$V6,10:25,13:23,14:$V7,15:24,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{8:[1,38]},o($Vi,[2,18],{17:18,7:39,6:$V3}),{18:[1,40]},{5:[1,41]},{2:$V0,4:$V2,6:$V6,10:25,13:42,14:$V7,15:43,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{8:[1,44]},{2:$V0,4:[1,45],10:46},{4:[1,47]},o($V4,[2,16]),{4:[2,33],6:$V6,14:$V7,15:48,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,34],6:$V6,14:$V7,15:49,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,35],6:$V6,14:$V7,15:50,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,37],6:$V6,14:$V7,15:51,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,38],6:$V6,14:$V7,15:52,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,39],6:$V6,14:$V7,15:53,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,40],6:$V6,14:$V7,15:54,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,41],6:$V6,14:$V7,15:55,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,36],6:$V6,14:$V7,15:56,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,42],6:$V6,14:$V7,15:57,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,43],6:$V6,14:$V7,15:58,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},{4:[2,44],6:$V6,14:$V7,15:59,18:$V8,19:$V9,20:$Va,21:$Vb,22:$Vc,23:$Vd,24:$Ve,25:$Vf,26:$Vg,27:$Vh},o($V5,[2,12]),o($Vi,[2,17]),{19:[1,60],20:[1,61]},{8:[1,62]},{2:$V0,4:[1,63],10:46},{4:[1,64]},o($V5,[2,9]),{6:$V1,14:[1,65]},o($V4,[2,15]),{14:[1,66]},{4:[2,21]},{4:[2,22]},{4:[2,23]},{4:[2,24]},{4:[2,25]},{4:[2,26]},{4:[2,27]},{4:[2,28]},{4:[2,29]},{4:[2,30]},{4:[2,31]},{4:[2,32]},o($Vj,[2,19]),o($Vj,[2,20]),{2:$V0,4:$V2,9:67,10:4},{6:$V1,14:[1,68]},{14:[1,69]},{6:[1,70]},{6:[1,71]},{1:[2,1]},{6:[1,72]},{6:[1,73]},{8:[1,74]},{8:[1,75]},{8:[1,76]},{8:[1,77]},o($V5,[2,10]),o($V5,[2,11]),o($V5,[2,7]),o($V5,[2,8])],\ndefaultActions: {3:[2,2],8:[2,3],9:[2,4],10:[2,5],48:[2,21],49:[2,22],50:[2,23],51:[2,24],52:[2,25],53:[2,26],54:[2,27],55:[2,28],56:[2,29],57:[2,30],58:[2,31],59:[2,32],67:[2,1]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse (input) {\n    var self = this,\n        stack = [0],\n        tstack = [], // token stack\n        vstack = [null], // semantic value stack\n        lstack = [], // location stack\n        table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n\n    var args = lstack.slice.call(arguments, 1);\n\n    //this.reductionCount = this.shiftCount = 0;\n\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    // copy state\n    for (var k in this.yy) {\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n        sharedState.yy[k] = this.yy[k];\n      }\n    }\n\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n\n    var ranges = lexer.options && lexer.options.ranges;\n\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n\n    function popStack (n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n_token_stack:\n    var lex = function () {\n        var token;\n        token = lexer.lex() || EOF;\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        // retreive state number from top of stack\n        state = stack[stack.length - 1];\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n_handle_error:\n        // handle parse error\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var error_rule_depth;\n            var errStr = '';\n\n            // Return the rule stack depth where the nearest error rule can be found.\n            // Return FALSE when no error recovery rule was found.\n            function locateNearestErrorRecoveryRule(state) {\n                var stack_probe = stack.length - 1;\n                var depth = 0;\n\n                // try to recover from error\n                for(;;) {\n                    // check for error recovery rule in this state\n                    if ((TERROR.toString()) in table[state]) {\n                        return depth;\n                    }\n                    if (state === 0 || stack_probe < 2) {\n                        return false; // No suitable error recovery rule available.\n                    }\n                    stack_probe -= 2; // popStack(1): [symbol, action]\n                    state = stack[stack_probe];\n                    ++depth;\n                }\n            }\n\n            if (!recovering) {\n                // first see if there's any chance at hitting an error recovery rule:\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n\n                // Report error\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\n                } else {\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                  (symbol == EOF ? \"end of input\" :\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected,\n                    recoverable: (error_rule_depth !== false)\n                });\n            } else if (preErrorSymbol !== EOF) {\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n            }\n\n            // just recovered from another error\n            if (recovering == 3) {\n                if (symbol === EOF || preErrorSymbol === EOF) {\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            if (error_rule_depth === false) {\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\n            }\n            popStack(error_rule_depth);\n\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\n            symbol = TERROR;         // insert generic error symbol as new lookahead\n            state = stack[stack.length-1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n        }\n\n        switch (action[0]) {\n            case 1: // shift\n                //this.shiftCount++;\n\n                stack.push(symbol);\n                vstack.push(lexer.yytext);\n                lstack.push(lexer.yylloc);\n                stack.push(action[1]); // push state\n                symbol = null;\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = lexer.yyleng;\n                    yytext = lexer.yytext;\n                    yylineno = lexer.yylineno;\n                    yyloc = lexer.yylloc;\n                    if (recovering > 0) {\n                        recovering--;\n                    }\n                } else {\n                    // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n\n            case 2:\n                // reduce\n                //this.reductionCount++;\n\n                len = this.productions_[action[1]][1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                // default location, uses first token for firsts, last for lasts\n                yyval._$ = {\n                    first_line: lstack[lstack.length-(len||1)].first_line,\n                    last_line: lstack[lstack.length-1].last_line,\n                    first_column: lstack[lstack.length-(len||1)].first_column,\n                    last_column: lstack[lstack.length-1].last_column\n                };\n                if (ranges) {\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\n                }\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n                if (typeof r !== 'undefined') {\n                    return r;\n                }\n\n                // pop off stack\n                if (len) {\n                    stack = stack.slice(0,-1*len*2);\n                    vstack = vstack.slice(0, -1*len);\n                    lstack = lstack.slice(0, -1*len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                stack.push(newState);\n                break;\n\n            case 3:\n                // accept\n                return true;\n        }\n\n    }\n\n    return true;\n}};\n\r\n    const {Entorno} = require(\"../xmlAST/Entorno\");\r\n    const {Simbolo} = require(\"../xmlAST/Simbolo\");\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n    var listaErrores = [];\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:/*skip comments*/\nbreak;\ncase 2:return 4;\nbreak;\ncase 3:return 8;\nbreak;\ncase 4:return 14;\nbreak;\ncase 5:return 18;\nbreak;\ncase 6:return 5;\nbreak;\ncase 7:return 20;\nbreak;\ncase 8:return 19;\nbreak;\ncase 9:return 6;\nbreak;\ncase 10:return 26;\nbreak;\ncase 11:return 21;\nbreak;\ncase 12:return 22;\nbreak;\ncase 13:return 23;\nbreak;\ncase 14:return 24;\nbreak;\ncase 15:return 25;\nbreak;\ncase 16:return 27;\nbreak;\ncase 17:return 12;\nbreak;\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \nbreak;\n}\n},\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú|')*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = xmlGrammarDesc;\nexports.Parser = xmlGrammarDesc.Parser;\nexports.parse = function () { return xmlGrammarDesc.parse.apply(xmlGrammarDesc, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar xmlReport = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,6],$V1=[1,8],$V2=[1,4],$V3=[1,16],$V4=[1,27],$V5=[1,35],$V6=[1,36],$V7=[1,26],$V8=[1,25],$V9=[1,29],$Va=[1,30],$Vb=[1,31],$Vc=[1,32],$Vd=[1,33],$Ve=[1,28],$Vf=[1,34],$Vg=[5,6,8,14],$Vh=[1,48],$Vi=[1,56],$Vj=[1,57],$Vk=[1,47],$Vl=[1,46],$Vm=[1,49],$Vn=[1,50],$Vo=[1,51],$Vp=[1,52],$Vq=[1,53],$Vr=[1,54],$Vs=[1,55],$Vt=[4,6,14,17,18,19,20,21,22,23,24,25,26],$Vu=[1,4,11];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"LISTAATRIBUTOS\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"EOF\":11,\"CHECK\":12,\"LISTANODOS\":13,\"/\":14,\"NODOTEXTO\":15,\"ATRIBUTO\":16,\"=\":17,\"sstring\":18,\"dstring\":19,\"lessthan\":20,\"greaterthan\":21,\"ampersand\":22,\"apostrophe\":23,\"quotmark\":24,\"number\":25,\"random\":26,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",11:\"EOF\",14:\"/\",17:\"=\",18:\"sstring\",19:\"dstring\",20:\"lessthan\",21:\"greaterthan\",22:\"ampersand\",23:\"apostrophe\",24:\"quotmark\",25:\"number\",26:\"random\"},\nproductions_: [0,[3,7],[3,1],[9,3],[9,2],[12,1],[12,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[13,2],[13,1],[7,2],[7,1],[16,3],[16,3],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\r\n        txtGramProd.push(\"INIT := menor ? id LISTAATRIBUTOS ? mayor INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"<\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"id\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"LISTAATRIBUTOS\",contador,$$[$0-3]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\">\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0]);\r\n        return {ReporteGramatical: [txtGramProd,txtGramRegSem],ReporteCST: raiz};\r\n    \nbreak;\ncase 2:\n\r\n        txtGramProd.push(\"INIT := INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0])\r\n        return {ReporteGramatical: texto,ReporteCST: raiz};\r\n    \nbreak;\ncase 3:\n\r\n        txtGramProd.push(\"INTRO := INTRO NODO EOF\");\r\n        txtGramRegSem.push(\"INTRO.push(NODOD.val); INTRO.val = INTRO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"INTRO\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 4:\n\r\n        txtGramProd.push(\"INTRO := NODO CHECK\");\r\n        txtGramRegSem.push(\"INTRO.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"CHECK\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 5:\n\r\n        txtGramProd.push(\"CHECK := EOF\");\r\n        txtGramRegSem.push(\"CHECK := EOF\");\r\n\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 6:\n\r\n        txtGramProd.push(\"CHECK := ε\");\r\n        txtGramRegSem.push(\"CHECK := ε\");\r\n\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ε\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 7:\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 8:\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,NODOTEXTO.val,line,column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 9:\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 10:\n\r\n        txtGramProd.push(\"NODO := menor id mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 11:\n\r\n        txtGramProd.push(\"NODO := menor id mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val := new Entorno(id,NODOTEXTO.val,line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 12:\n\r\n        txtGramProd.push(\"NODO := menor id / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 13:\n\r\n        txtGramProd.push(\"LISTANODOS := LISTANODOS NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.push(NODO.val); LISTANODOS.val := LISTANODOS.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 14:\n\r\n        txtGramProd.push(\"LISTANODOS := NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 15:\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := LISTAATRIBUTOS ATRIBUTO\");\r\n        txtGramRegSem.push(\"LISTAATRIBUTOS.push(ATRIBUTO.val);LISTAATRIBUTOS.val = LISTAATRIBUTOS.val;\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 16:\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := ATRIBUTO\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val = ATRIBUTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 17:\n\r\n        txtGramProd.push(\"ATRIBUTO := id = sstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := Simbolo(id,sstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 18:\n\r\n        txtGramProd.push(\"ATRIBUTO := id = dstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := new Simbolo(id,dstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 19:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 20:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 21:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 22:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 23:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 24:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 25:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 26:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 27:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 28:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 29:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 30:\n\r\n        txtGramProd.push(\"NODOTEXTO := NODOTEXTO =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := NODOTEXTO.val + =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 31:\n\r\n        txtGramProd.push(\"NODOTEXTO := dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 32:\n\r\n        txtGramProd.push(\"NODOTEXTO := sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 33:\n\r\n        txtGramProd.push(\"NODOTEXTO := id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 34:\n\r\n        txtGramProd.push(\"NODOTEXTO := number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 35:\n\r\n        txtGramProd.push(\"NODOTEXTO := lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 36:\n\r\n        txtGramProd.push(\"NODOTEXTO := greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 37:\n\r\n        txtGramProd.push(\"NODOTEXTO := ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 38:\n\r\n        txtGramProd.push(\"NODOTEXTO := apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 39:\n\r\n        txtGramProd.push(\"NODOTEXTO := quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 40:\n\r\n        txtGramProd.push(\"NODOTEXTO := random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 41:\n\r\n        txtGramProd.push(\"NODOTEXTO := /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 42:\n\r\n        txtGramProd.push(\"NODOTEXTO := =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\n}\n},\ntable: [{3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,5],6:$V0},{1:[2,2],4:$V1,10:7},o($V2,[2,6],{12:9,11:[1,10]}),{6:[1,11]},{6:$V3,7:12,8:[1,13],14:[1,14],16:15},{11:[1,17]},{6:$V0},o($V2,[2,4]),o($V2,[2,5]),{6:$V3,7:18,16:15},{6:$V3,8:[1,19],14:[1,20],16:21},{4:$V1,6:$V4,10:24,13:22,14:$V5,15:23,17:$V6,18:$V7,19:$V8,20:$V9,21:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf},{8:[1,37]},o($Vg,[2,16]),{17:[1,38]},o($V2,[2,3]),{5:[1,39],6:$V3,16:21},{4:$V1,6:$V4,10:24,13:40,14:$V5,15:41,17:$V6,18:$V7,19:$V8,20:$V9,21:$Va,22:$Vb,23:$Vc,24:$Vd,25:$Ve,26:$Vf},{8:[1,42]},o($Vg,[2,15]),{4:[1,43],10:44},{4:[1,45],6:$Vh,14:$Vi,17:$Vj,18:$Vk,19:$Vl,20:$Vm,21:$Vn,22:$Vo,23:$Vp,24:$Vq,25:$Vr,26:$Vs},{4:[2,14]},o($Vt,[2,31]),o($Vt,[2,32]),o($Vt,[2,33]),o($Vt,[2,34]),o($Vt,[2,35]),o($Vt,[2,36]),o($Vt,[2,37]),o($Vt,[2,38]),o($Vt,[2,39]),o($Vt,[2,40]),o($Vt,[2,41]),o($Vt,[2,42]),o($Vu,[2,12]),{18:[1,58],19:[1,59]},{8:[1,60]},{4:[1,61],10:44},{4:[1,62],6:$Vh,14:$Vi,17:$Vj,18:$Vk,19:$Vl,20:$Vm,21:$Vn,22:$Vo,23:$Vp,24:$Vq,25:$Vr,26:$Vs},o($Vu,[2,9]),{6:$V0,14:[1,63]},{4:[2,13]},{14:[1,64]},o($Vt,[2,19]),o($Vt,[2,20]),o($Vt,[2,21]),o($Vt,[2,22]),o($Vt,[2,23]),o($Vt,[2,24]),o($Vt,[2,25]),o($Vt,[2,26]),o($Vt,[2,27]),o($Vt,[2,28]),o($Vt,[2,29]),o($Vt,[2,30]),o($Vg,[2,17]),o($Vg,[2,18]),{4:$V1,9:65,10:4},{6:$V0,14:[1,66]},{14:[1,67]},{6:[1,68]},{6:[1,69]},{1:[2,1],4:$V1,10:7},{6:[1,70]},{6:[1,71]},{8:[1,72]},{8:[1,73]},{8:[1,74]},{8:[1,75]},o($Vu,[2,10]),o($Vu,[2,11]),o($Vu,[2,7]),o($Vu,[2,8])],\ndefaultActions: {24:[2,14],44:[2,13]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\r\n    const {NodoCST} = require(\"./NodoCST\");\r\n    var raiz = new NodoCST(\"INIT\",0,[]);\r\n    var nodoaux;\r\n    var lista = [];\r\n    var contador = 0;\r\n    var texto = \"\";\r\n    var txtGramProd = [];\r\n    var txtGramRegSem = [];\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:/*skip comments*/\nbreak;\ncase 2:return 4;\nbreak;\ncase 3:return 8;\nbreak;\ncase 4:return 14;\nbreak;\ncase 5:return 17;\nbreak;\ncase 6:return 5;\nbreak;\ncase 7:return 19;\nbreak;\ncase 8:return 18;\nbreak;\ncase 9:return 6;\nbreak;\ncase 10:return 25;\nbreak;\ncase 11:return 20;\nbreak;\ncase 12:return 21;\nbreak;\ncase 13:return 22;\nbreak;\ncase 14:return 23;\nbreak;\ncase 15:return 24;\nbreak;\ncase 16:return 26;\nbreak;\ncase 17:return 11;\nbreak;\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \nbreak;\n}\n},\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = xmlReport;\nexports.Parser = xmlReport.Parser;\nexports.parse = function () { return xmlReport.parse.apply(xmlReport, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar xmlReportDesc = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,6],$V1=[1,10],$V2=[1,16],$V3=[1,25],$V4=[1,33],$V5=[1,34],$V6=[1,24],$V7=[1,23],$V8=[1,26],$V9=[1,27],$Va=[1,28],$Vb=[1,29],$Vc=[1,30],$Vd=[1,31],$Ve=[1,32],$Vf=[5,8,14],$Vg=[1,4,12],$Vh=[5,6,8,14];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"LISTAATRIBUTOS\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"CHECK\":11,\"EOF\":12,\"LISTANODOS\":13,\"/\":14,\"NODOTEXTO\":15,\"ATRIBUTO\":16,\"=\":17,\"sstring\":18,\"dstring\":19,\"lessthan\":20,\"greaterthan\":21,\"ampersand\":22,\"apostrophe\":23,\"quotmark\":24,\"number\":25,\"random\":26,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",12:\"EOF\",14:\"/\",17:\"=\",18:\"sstring\",19:\"dstring\",20:\"lessthan\",21:\"greaterthan\",22:\"ampersand\",23:\"apostrophe\",24:\"quotmark\",25:\"number\",26:\"random\"},\nproductions_: [0,[3,7],[3,1],[9,2],[9,2],[11,1],[11,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[13,2],[13,1],[7,2],[7,1],[16,3],[16,3],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\r\n        txtGramProd.push(\"INIT := menor ? id LISTAATRIBUTOS ? mayor INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"<\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"id\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"LISTAATRIBUTOS\",contador,$$[$0-3]);\r\n        contador++;\r\n        raiz.crearNodo(\"?\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\">\",contador,[]);\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0]);\r\n        return {ReporteGramatical: [txtGramProd,txtGramRegSem],ReporteCST: raiz};\r\n    \nbreak;\ncase 2:\n\r\n        txtGramProd.push(\"INIT := INTRO\");\r\n        txtGramRegSem.push(\"INIT.val := INTRO.val\");\r\n        contador++;\r\n        raiz.crearNodo(\"INTRO\",contador,$$[$0])\r\n        return {ReporteGramatical: texto,ReporteCST: raiz};\r\n    \nbreak;\ncase 3:\n\r\n        txtGramProd.push(\"INTRO := NODO INTRO\");\r\n        txtGramRegSem.push(\"NODO.push(INTRO.val); INTRO.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"INTRO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 4:\n\r\n        txtGramProd.push(\"INTRO := NODO CHECK\");\r\n        txtGramRegSem.push(\"INTRO.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"CHECK\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 5:\n\r\n        txtGramProd.push(\"CHECK := EOF\");\r\n        txtGramRegSem.push(\"CHECK.val := EOF\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"EOF\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 6:\n\r\n        txtGramProd.push(\"CHECK := ε\");\r\n        txtGramRegSem.push(\"CHECK.val := ε\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ε\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 7:\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 8:\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,NODOTEXTO.val,line,column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-6]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 9:\n\r\n        txtGramProd.push(\"NODO := menor id LISTAATRIBUTOS / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,LISTAATRIBUTOS.val,[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0-2]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 10:\n\r\n        txtGramProd.push(\"NODO := menor id mayor LISTANODOS menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],LISTANODOS.val)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 11:\n\r\n        txtGramProd.push(\"NODO := menor id mayor NODOTEXTO menor / id mayor\");\r\n        txtGramRegSem.push(\"NODO.val := new Entorno(id,NODOTEXTO.val,line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0-4]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 12:\n\r\n        txtGramProd.push(\"NODO := menor id / mayor\");\r\n        txtGramRegSem.push(\"NODO.val = new Entorno(id,[],line, column,[],[])\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"<\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\">\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 13:\n\r\n        txtGramProd.push(\"LISTANODOS := NODO LISTANODOS\");\r\n        txtGramRegSem.push(\"LISTANODOS.push(NODO.val); LISTANODOS.val := LISTANODOS.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTANODOS\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 14:\n\r\n        txtGramProd.push(\"LISTANODOS := NODO\");\r\n        txtGramRegSem.push(\"LISTANODOS.val = NODO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 15:\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := ATRIBUTO LISTAATRIBUTOS\");\r\n        txtGramRegSem.push(\"ATRIBUTO.push(LISTAATRIBUTOS.val); LISTAATRIBUTOS.val = ATRIBUTO.val;\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0-1]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"LISTAATRIBUTOS\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 16:\n\r\n        txtGramProd.push(\"LISTAATRIBUTOS := ATRIBUTO\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val = ATRIBUTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ATRIBUTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 17:\n\r\n        txtGramProd.push(\"ATRIBUTO := id = sstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := Simbolo(id,sstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 18:\n\r\n        txtGramProd.push(\"ATRIBUTO := id = dstring\");\r\n        txtGramRegSem.push(\"ATRIBUTO.val := new Simbolo(id,dstring,line,column)\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 19:\n\r\n        txtGramProd.push(\"NODOTEXTO := dstring NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := dstring + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 20:\n\r\n        txtGramProd.push(\"NODOTEXTO := sstring NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := sstring + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 21:\n\r\n        txtGramProd.push(\"NODOTEXTO := id NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := id + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 22:\n\r\n        txtGramProd.push(\"NODOTEXTO := lessthan NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := lessthan + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 23:\n\r\n        txtGramProd.push(\"NODOTEXTO := greaterthan NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := greaterthan + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 24:\n\r\n        txtGramProd.push(\"NODOTEXTO := ampersand NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := ampersand + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 25:\n\r\n        txtGramProd.push(\"NODOTEXTO := apostrophe NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := apostrophe + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 26:\n\r\n        txtGramProd.push(\"NODOTEXTO := quotmark NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := quotmark + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 27:\n\r\n        txtGramProd.push(\"NODOTEXTO := number NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := number + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 28:\n\r\n        txtGramProd.push(\"NODOTEXTO := random NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := random + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 29:\n\r\n        txtGramProd.push(\"NODOTEXTO := '/' NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := '/' + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"'/'\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 30:\n\r\n        txtGramProd.push(\"NODOTEXTO := '=' NODOTEXTO\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := '=' + NODOTEXTO.val\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"'='\",contador,[]);\r\n        lista.push(nodoaux);\r\n        contador++;\r\n        nodoaux = new NodoCST(\"NODOTEXTO\",contador,$$[$0]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 31:\n\r\n        txtGramProd.push(\"NODOTEXTO := dstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := dstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"dstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 32:\n\r\n        txtGramProd.push(\"NODOTEXTO := sstring\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := sstring\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"sstring\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 33:\n\r\n        txtGramProd.push(\"NODOTEXTO := id\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := id\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"id\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 34:\n\r\n        txtGramProd.push(\"NODOTEXTO := number\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := number\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"number\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 35:\n\r\n        txtGramProd.push(\"NODOTEXTO := lessthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := lessthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"lessthans\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 36:\n\r\n        txtGramProd.push(\"NODOTEXTO := greaterthan\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := greaterthan\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"greaterthan\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 37:\n\r\n        txtGramProd.push(\"NODOTEXTO := ampersand\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := ampersand\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"ampersand\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 38:\n\r\n        txtGramProd.push(\"NODOTEXTO := apostrophe\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := apostrophe\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"apostrophe\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 39:\n\r\n        txtGramProd.push(\"NODOTEXTO := quotmark\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := quotmark\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"quotmark\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 40:\n\r\n        txtGramProd.push(\"NODOTEXTO := random\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := random\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"random\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 41:\n\r\n        txtGramProd.push(\"NODOTEXTO := /\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := /\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"/\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\ncase 42:\n\r\n        txtGramProd.push(\"NODOTEXTO := =\");\r\n        txtGramRegSem.push(\"NODOTEXTO.val := =\");\r\n        contador++;\r\n        nodoaux = new NodoCST(\"=\",contador,[]);\r\n        lista.push(nodoaux);\r\n        this.$ = lista;\r\n        lista = [];\r\n    \nbreak;\n}\n},\ntable: [{3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,5],6:$V0},{1:[2,2]},{1:[2,6],4:$V1,9:7,10:4,11:8,12:[1,9]},{6:[1,11]},{6:$V2,7:12,8:[1,13],14:[1,14],16:15},{1:[2,3]},{1:[2,4]},{1:[2,5]},{6:$V0},{6:$V2,7:17,16:15},{8:[1,18],14:[1,19]},{4:$V1,6:$V3,10:22,13:20,14:$V4,15:21,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{8:[1,35]},o($Vf,[2,16],{16:15,7:36,6:$V2}),{17:[1,37]},{5:[1,38]},{4:$V1,6:$V3,10:22,13:39,14:$V4,15:40,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{8:[1,41]},{4:[1,42],10:43},{4:[1,44]},{4:[2,14]},{4:[2,31],6:$V3,14:$V4,15:45,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,32],6:$V3,14:$V4,15:46,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,33],6:$V3,14:$V4,15:47,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,35],6:$V3,14:$V4,15:48,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,36],6:$V3,14:$V4,15:49,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,37],6:$V3,14:$V4,15:50,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,38],6:$V3,14:$V4,15:51,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,39],6:$V3,14:$V4,15:52,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,34],6:$V3,14:$V4,15:53,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,40],6:$V3,14:$V4,15:54,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,41],6:$V3,14:$V4,15:55,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},{4:[2,42],6:$V3,14:$V4,15:56,17:$V5,18:$V6,19:$V7,20:$V8,21:$V9,22:$Va,23:$Vb,24:$Vc,25:$Vd,26:$Ve},o($Vg,[2,12]),o($Vf,[2,15]),{18:[1,57],19:[1,58]},{8:[1,59]},{4:[1,60],10:43},{4:[1,61]},o($Vg,[2,9]),{6:$V0,14:[1,62]},{4:[2,13]},{14:[1,63]},{4:[2,19]},{4:[2,20]},{4:[2,21]},{4:[2,22]},{4:[2,23]},{4:[2,24]},{4:[2,25]},{4:[2,26]},{4:[2,27]},{4:[2,28]},{4:[2,29]},{4:[2,30]},o($Vh,[2,17]),o($Vh,[2,18]),{4:$V1,9:64,10:4},{6:$V0,14:[1,65]},{14:[1,66]},{6:[1,67]},{6:[1,68]},{1:[2,1]},{6:[1,69]},{6:[1,70]},{8:[1,71]},{8:[1,72]},{8:[1,73]},{8:[1,74]},o($Vg,[2,10]),o($Vg,[2,11]),o($Vg,[2,7]),o($Vg,[2,8])],\ndefaultActions: {3:[2,2],7:[2,3],8:[2,4],9:[2,5],22:[2,14],43:[2,13],45:[2,19],46:[2,20],47:[2,21],48:[2,22],49:[2,23],50:[2,24],51:[2,25],52:[2,26],53:[2,27],54:[2,28],55:[2,29],56:[2,30],64:[2,1]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\r\n    const {NodoCST} = require(\"./NodoCST\");\r\n    var raiz = new NodoCST(\"INIT\",0,[]);\r\n    var nodoaux;\r\n    var lista = [];\r\n    var contador = 0;\r\n    var texto = \"\";\r\n    var txtGramProd = [];\r\n    var txtGramRegSem = [];\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:/*skip comments*/\nbreak;\ncase 2:return 4;\nbreak;\ncase 3:return 8;\nbreak;\ncase 4:return 14;\nbreak;\ncase 5:return 17;\nbreak;\ncase 6:return 5;\nbreak;\ncase 7:return 19;\nbreak;\ncase 8:return 18;\nbreak;\ncase 9:return 6;\nbreak;\ncase 10:return 25;\nbreak;\ncase 11:return 20;\nbreak;\ncase 12:return 21;\nbreak;\ncase 13:return 22;\nbreak;\ncase 14:return 23;\nbreak;\ncase 15:return 24;\nbreak;\ncase 16:return 26;\nbreak;\ncase 17:return 12;\nbreak;\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \nbreak;\n}\n},\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú|')*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = xmlReportDesc;\nexports.Parser = xmlReportDesc.Parser;\nexports.parse = function () { return xmlReportDesc.parse.apply(xmlReportDesc, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","import {Entorno} from \"../xmlAST/Entorno\";\r\nimport { Simbolo } from \"../xmlAST/Simbolo\";\r\n\r\nexport class SimboloTabla{\r\n    linea:number;\r\n    columna:number;\r\n    nombre:string;\r\n    tipo:string;\r\n    ambito:string;\r\n    valor:string;\r\n\r\n\r\n    constructor(linea:number,columna:number,nombre:string,tipo:string,ambito:string,valor:string){\r\n        this.linea=linea;\r\n        this.columna=columna;\r\n        this.nombre=nombre;\r\n        this.tipo=tipo;\r\n        this.ambito=ambito;\r\n        this.valor=valor;\r\n    }\r\n}\r\n\r\nvar re = /\\\"/gi;\r\nvar re2 = /</gi;\r\nvar re3 = />/gi;\r\nvar newstr = \"\";\r\n\r\nexport function crearTablaSimbolos(raiz:Entorno,resultado:Array<SimboloTabla>,entorno:string){\r\n    newstr = raiz.texto.replace(re, \" COMILLAS \");\r\n    newstr = newstr.replace(re2,\" MENOR \");\r\n    newstr = newstr.replace(re3,\" MAYOR \");\r\n    resultado.push(new SimboloTabla(raiz.linea,raiz.columna,raiz.identificador,\"Entorno\",entorno,newstr));\r\n    for (const key in raiz.listaSimbolos) {\r\n        newstr = raiz.listaSimbolos[key].valor.replace(re, \" COMILLAS \");\r\n        newstr = newstr.replace(re2,\" MENOR \");\r\n        newstr = newstr.replace(re3,\" MAYOR \");\r\n        resultado.push(new SimboloTabla(raiz.listaSimbolos[key].linea,raiz.listaSimbolos[key].columna,raiz.listaSimbolos[key].identificador,\"Atributo\",raiz.identificador,newstr));\r\n    }\r\n    for (const key in raiz.listaEntornos) {\r\n        resultado = crearTablaSimbolos(raiz.listaEntornos[key],resultado,raiz.identificador);\r\n    }\r\n    return resultado;   \r\n}\r\n\r\nexport function crearTextoGraphvizTablaSimbolos(lista:Array<SimboloTabla>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Numero\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + key;\r\n    }\r\n    texto += \"}|{Linea\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].linea;\r\n    }\r\n    texto += \"}|{Columna\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].columna;\r\n    }\r\n    texto += \"}|{Nombre\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].nombre;\r\n    }\r\n    texto += \"}|{Tipo\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].tipo;\r\n    }\r\n    texto += \"}|{Ambito\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].ambito;\r\n    }\r\n    texto += \"}|{Valor\";\r\n    for (const key in lista) {\r\n        texto += \"|\" + lista[key].valor;\r\n    }\r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","import React, { Component } from 'react'\r\nimport { crearTextoGraphvizCST, crearTextoGraphvizRepGram } from \"../Reportes/NodoCST\";\r\nimport { FilePicker } from 'react-file-picker';\r\nimport { Nav, Navbar, Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { Graphviz } from 'graphviz-react';\r\nimport {crearTextoReporteErrorXML} from \"../xmlAST/ClaseError\";\r\nimport {crearTablaSimbolos,crearTextoGraphvizTablaSimbolos, SimboloTabla} from \"../Reportes/SimboloTabla\";\r\nimport { Entorno } from '../xmlAST/Entorno';\r\nconst parser = require('../Grammar/xmlGrammar')\r\nconst parserXmlDesc = require('../Grammar/xmlGrammarDesc')\r\nconst parserReport = require('../Reportes/xmlReport')\r\nconst parserReportDesc = require('../Reportes/xmlReportDesc')\r\n\r\nexport default class Main extends Component {\r\n\r\n    state = {\r\n        consoleResult: \"\",\r\n        xpath: \"\",\r\n        xml: \"\",\r\n        repcsttxt: '',\r\n        repgramtxt: '',\r\n        repErrorXML: '',\r\n        repTablaSimbolos: '',\r\n        graphvizContent: ''\r\n    }\r\n\r\n    parse = () => {\r\n\r\n        let ast;\r\n        let listaErrores;\r\n        let TablaSimbolos = [];\r\n\r\n\r\n\r\n        const result = parser.parse(this.state.xml)\r\n        ast = result.ast;\r\n        listaErrores = result.listaErrores;\r\n\r\n        let entornoGlobal = new Entorno('Global','',0, 0,[],ast);\r\n\r\n        console.log(ast)\r\n        console.log(listaErrores)\r\n\r\n\r\n        if (listaErrores.length === 0) {\r\n            const xmlResRep = parserReport.parse(this.state.xml);\r\n            this.setState({\r\n                repgramtxt: \"digraph G {\" + crearTextoGraphvizRepGram(xmlResRep.ReporteGramatical[0], xmlResRep.ReporteGramatical[1], this.state.repcsttxt) + \"}\",\r\n                repcsttxt: \"digraph G {\" + crearTextoGraphvizCST(xmlResRep.ReporteCST, this.state.repcsttxt) + \"}\",\r\n                repTablaSimbolos: \"digraph G {\"+crearTextoGraphvizTablaSimbolos(crearTablaSimbolos(entornoGlobal,TablaSimbolos,\"Global\"),this.state.repTablaSimbolos)+\"}\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                repErrorXML: \"digraph G {\" + crearTextoReporteErrorXML(listaErrores,this.state.repErrorXML) + \"}\"\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    parseDesc = () => {\r\n        let ast;\r\n        let listaErrores;\r\n        let TablaSimbolos = [];\r\n        const result = parserXmlDesc.parse(this.state.xml)\r\n        ast = result.ast;\r\n        listaErrores = result.listaErrores;\r\n        let entornoGlobal = new Entorno('Global','',0, 0,[],ast);\r\n        if (listaErrores.length === 0) {\r\n            const xmlResRep = parserReportDesc.parse(this.state.xml);\r\n            this.setState({\r\n                repgramtxt: \"digraph G {\" + crearTextoGraphvizRepGram(xmlResRep.ReporteGramatical[0], xmlResRep.ReporteGramatical[1], this.state.repcsttxt) + \"}\",\r\n                repcsttxt: \"digraph G {\" + crearTextoGraphvizCST(xmlResRep.ReporteCST, this.state.repcsttxt) + \"}\",\r\n                repTablaSimbolos: \"digraph G {\"+crearTextoGraphvizTablaSimbolos(crearTablaSimbolos(entornoGlobal,TablaSimbolos,\"Global\"),this.state.repTablaSimbolos)+\"}\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                repErrorXML: \"digraph G {\" + crearTextoReporteErrorXML(listaErrores,this.state.repErrorXML) + \"}\"\r\n            })\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    handleFileChange = file => {\r\n        const reader = new FileReader();\r\n        reader.readAsText(file);\r\n        reader.onload = (e: any) => {\r\n\r\n            try {\r\n                this.setState({\r\n                    xml: e.target.result\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n    };\r\n\r\n    onChangeReports = e => {\r\n        //console.log(this.state.graphvizContent)\r\n        if (e.target.value === \"Ocultar\") {\r\n            this.setState({\r\n                graphvizContent: ''\r\n            })\r\n        } else if (e.target.value === \"CST XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repcsttxt\r\n            })\r\n        } else if (e.target.value === \"Reporte gramatical XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repgramtxt\r\n            })\r\n        }else if (e.target.value === \"Reporte de errores XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repErrorXML\r\n            })\r\n        } else if (e.target.value === \"Tabla de simbolos XML\") {\r\n            this.setState({\r\n                graphvizContent: this.state.repTablaSimbolos\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"/py_compi2\">Home</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <FilePicker maxSize={2} onChange={this.handleFileChange} onError={errMsg => console.log(errMsg)}>\r\n                                <Button variant=\"link\">Open File</Button>\r\n                            </FilePicker>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n                <div className=\"mt-2 px-5\">\r\n                    <Row>\r\n                        <Col xs={12} md={8}>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Insert your commands here\"\r\n                                defaultValue={this.state.xpath}\r\n                                onChange={(e: any) => {\r\n                                    this.setState({\r\n                                        xpath: e.target.value\r\n                                    })\r\n                                }} />\r\n                        </Col>\r\n                        <Col xs={6} md={2}>\r\n                            <Button variant=\"primary\" onClick={this.parse}>RUN ASC</Button>\r\n                        </Col>\r\n                        <Col xs={6} md={2}>\r\n                            <Button variant=\"primary\" onClick={this.parseDesc}>RUN DESC</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Form.Control as=\"textarea\" rows={15} defaultValue={this.state.xml} onChange={(e: any) => {\r\n                        this.setState({\r\n                            xml: e.target.value\r\n                        })\r\n                    }} />\r\n                </div>\r\n\r\n                <div className=\"mt-3 px-5\">\r\n                    <Form.Group>\r\n                        <Form.Control as=\"select\" name=\"tier\" size=\"lg\" onChange={this.onChangeReports}>\r\n                            <option>Ocultar</option>\r\n                            <option>Tabla de simbolos XML</option>\r\n                            <option>Reporte de errores XML</option>\r\n                            <option>CST XML</option>\r\n                            <option>Reporte gramatical XML</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </div>\r\n\r\n\r\n                {\r\n                    this.state.graphvizContent !== '' ? (\r\n                        <div className=\"m-5  border border-primary\">\r\n                            <Graphviz className=\"m-1 d-flex justify-content-center\" dot={this.state.graphvizContent} options={{ height: 750, width: 1485, zoom: true }} />\r\n                        </div>\r\n                    ) : <div></div>\r\n                }\r\n\r\n\r\n                <div className=\"mt-3 px-5\">\r\n                    <Form.Control as=\"textarea\" rows={6} defaultValue={this.state.consoleResult} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Main from \"./components/main\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router basename=\"/tytusx/20211SVAC/G06\">\r\n        <Route path=\"/\" exact component={Main} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n/*<Router basename=\"/testPages/build\"></Router>*/","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","var nuevo;\r\nvar contact = 0;\r\nvar res;\r\n\r\nexport class NodoCST{\r\n    nombre:string;\r\n    indice:number;\r\n    listaNodos:Array<NodoCST>;\r\n\r\n    constructor(nombre:string,indice:number,listaNodos:Array<NodoCST>){\r\n        this.nombre=nombre;\r\n        this.indice=indice;\r\n        this.listaNodos=listaNodos;\r\n    }\r\n\r\n    crearNodo(Nombre:string,indice:number,lista:Array<NodoCST>){\r\n        nuevo = new NodoCST(Nombre,indice,lista);\r\n        this.listaNodos.push(nuevo);\r\n    }\r\n\r\n}\r\n\r\nexport function crearTextoGraphvizCST(padre:NodoCST,texto:string){\r\n    texto += \"nodo\" + padre.indice.toString() + \"[label=\\\"\" + padre.nombre + \"\\\"];\\n\";\r\n    if (padre.listaNodos.length > 0) {\r\n        for (const key in padre.listaNodos) {\r\n            texto += \"nodo\" + padre.listaNodos[key].indice.toString() + \"[label=\\\"\" + padre.listaNodos[key].nombre + \"\\\"];\\n\";\r\n            texto += \"nodo\" + padre.indice.toString() + \"->\" + \"nodo\" + padre.listaNodos[key].indice.toString() + \";\\n\";\r\n            if (padre.listaNodos[key].listaNodos.length > 0) {\r\n                //console.log(padre.listaNodos[key]);\r\n                texto = crearTextoGraphvizCST(padre.listaNodos[key],texto);\r\n            }\r\n        }\r\n    }\r\n    return texto;\r\n}\r\n\r\nexport function crearTextoGraphvizRepGram(producciones:Array<string>,reglas:Array<string>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Produccion\";\r\n    for (const key in producciones) {\r\n        texto += \"|\" + producciones[key];\r\n    }\r\n    texto += \"}|{Regla Semantica\";\r\n    for (const key in reglas) {\r\n        texto += \"|\" + reglas[key];\r\n    }\r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","export class ClaseError{\r\n    tipo:string;\r\n    error:string;\r\n    linea: number;\r\n    columna: number;\r\n\r\n    constructor(tipo:string, error:string, linea:number, columna:number){\r\n        this.tipo = tipo;\r\n        this.error = error;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n\r\n}\r\n\r\nexport function crearTextoReporteErrorXML(listaErr:Array<ClaseError>,texto:string) {\r\n    texto += \"node0[shape=record label=\\\"{Tipo\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].tipo;\r\n    }\r\n    texto += \"}|{Linea\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].linea;\r\n    }\r\n    texto += \"}|{Columna\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].columna;\r\n    }\r\n    texto += \"}|{Descripcion\";\r\n    for (const key in listaErr) {\r\n        texto += \"|\" + listaErr[key].error;\r\n    }\r\n    \r\n    texto += \"}\\\"];\";\r\n    return texto;\r\n}","import { Simbolo } from \"./Simbolo\";\r\n\r\nexport class Entorno{\r\n    identificador:string;\r\n    listaSimbolos:Array<Simbolo>;\r\n    texto:string;\r\n    listaEntornos: Array<Entorno>;\r\n    linea: number;\r\n    columna: number;\r\n\r\n    constructor(id:string, texto:string, linea:number, columna:number, listaSimbolos:Array<Simbolo>, listaE:Array<Entorno>){\r\n        this.identificador = id;\r\n        this.texto = texto;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.listaSimbolos = listaSimbolos;\r\n        this.listaEntornos = listaE\r\n    }\r\n\r\n    public getAtributos(idAtrubito: string) : Simbolo[] {\r\n\r\n        var L_atrubitos : Simbolo[] = []; //          \r\n\r\n        this.listaSimbolos.forEach(Simbolo => {\r\n            \r\n            if (Simbolo.identificador = idAtrubito){\r\n                L_atrubitos.push(Simbolo)\r\n            }\r\n        });\r\n\r\n        return L_atrubitos;\r\n    }\r\n\r\n    public getAtributo(idAtrubito: string) : Simbolo | null{\r\n\r\n        this.listaSimbolos.forEach(Simbolo => {\r\n            \r\n            if (Simbolo.identificador = idAtrubito){\r\n                return Simbolo;\r\n            }\r\n        });\r\n\r\n        return null;\r\n    }\r\n\r\n}","export class Simbolo{\r\n    identificador:string;\r\n    valor:string;\r\n    linea: number;\r\n    columna: number;\r\n\r\n    constructor(id:string, valor:string, linea:number, columna:number){\r\n        this.identificador = id;\r\n        this.valor = valor;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar xmlGrammar = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,7],$V2=[1,9],$V3=[1,2,4],$V4=[1,19],$V5=[2,4],$V6=[1,2,4,11],$V7=[1,30],$V8=[1,38],$V9=[1,39],$Va=[1,29],$Vb=[1,28],$Vc=[1,32],$Vd=[1,33],$Ve=[1,34],$Vf=[1,35],$Vg=[1,36],$Vh=[1,31],$Vi=[1,37],$Vj=[5,6,8,14],$Vk=[1,51],$Vl=[1,59],$Vm=[1,60],$Vn=[1,50],$Vo=[1,49],$Vp=[1,52],$Vq=[1,53],$Vr=[1,54],$Vs=[1,55],$Vt=[1,56],$Vu=[1,57],$Vv=[1,58],$Vw=[4,6,14,18,19,20,21,22,23,24,25,26,27];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"INIT\":3,\"menor\":4,\"?\":5,\"id\":6,\"LISTAATRIBUTOS\":7,\"mayor\":8,\"INTRO\":9,\"NODO\":10,\"EOF\":11,\"CHECK\":12,\"LISTANODOS\":13,\"/\":14,\"NODOTEXTO\":15,\"FINDERROR\":16,\"ATRIBUTO\":17,\"=\":18,\"sstring\":19,\"dstring\":20,\"lessthan\":21,\"greaterthan\":22,\"ampersand\":23,\"apostrophe\":24,\"quotmark\":25,\"number\":26,\"random\":27,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"menor\",5:\"?\",6:\"id\",8:\"mayor\",11:\"EOF\",14:\"/\",18:\"=\",19:\"sstring\",20:\"dstring\",21:\"lessthan\",22:\"greaterthan\",23:\"ampersand\",24:\"apostrophe\",25:\"quotmark\",26:\"number\",27:\"random\"},\nproductions_: [0,[3,7],[3,1],[9,3],[9,2],[12,1],[12,0],[10,9],[10,9],[10,5],[10,8],[10,8],[10,4],[10,2],[16,1],[13,2],[13,1],[7,2],[7,1],[17,3],[17,3],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,2],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1],[15,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: case 2:\n\r\n        var listaErroresTemp = listaErrores;\r\n        listaErrores = [];\r\n        return {ast: $$[$0], listaErrores : listaErroresTemp};\r\n    \nbreak;\ncase 3:\n$$[$0-2].push($$[$0-1]); this.$ = $$[$0-2];\nbreak;\ncase 4:\nthis.$ = [$$[$0-1]];\nbreak;\ncase 7:\n\r\n        if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n        this.$ = new Entorno($$[$0-7],'',_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],$$[$0-4]);\r\n    \nbreak;\ncase 8:\n\r\n        if($$[$0-7]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-7]+' no esta cerrada',_$[$0-8].first_line, _$[$0-8].first_column));}\r\n        this.$ = new Entorno($$[$0-7],$$[$0-4],_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],[]);\r\n    \nbreak;\ncase 9:\nthis.$ = new Entorno($$[$0-3],'',_$[$0-4].first_line, _$[$0-4].first_column,$$[$0-2],[]);\nbreak;\ncase 10:\n\r\n        if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n        this.$ = new Entorno($$[$0-6],'',_$[$0-7].first_line, _$[$0-7].first_column,[],$$[$0-4]);\r\n    \nbreak;\ncase 11:\n\r\n        if($$[$0-6]!==$$[$0-1]){listaErrores.push(new ClaseError('Semantico','La etiqueta '+$$[$0-6]+' no esta cerrada',_$[$0-7].first_line, _$[$0-7].first_column))}\r\n        this.$ = new Entorno($$[$0-6],$$[$0-4],_$[$0-7].first_line, _$[$0-7].first_column,[],[]);\r\n    \nbreak;\ncase 12:\nthis.$ = new Entorno($$[$0-2],'',_$[$0-3].first_line, _$[$0-3].first_column,[],[]);\nbreak;\ncase 13:\nlistaErrores.push(new ClaseError('Sintactico','Se esperaba la definicion de una etiqueta',_$[$0-1].first_line, _$[$0-1].first_column))\nbreak;\ncase 15: case 17:\n$$[$0-1].push($$[$0]); this.$ = $$[$0-1];\nbreak;\ncase 16: case 18:\nthis.$ = [$$[$0]];\nbreak;\ncase 19: case 20:\nthis.$ = new Simbolo($$[$0-2], $$[$0], _$[$0-2].first_line, _$[$0-2].first_column);\nbreak;\ncase 21: case 22: case 23: case 29: case 30: case 31: case 32:\nthis.$ = $$[$0-1] +\" \"+ $$[$0]\nbreak;\ncase 24:\nthis.$ = $$[$0-1] +\" \"+ \"<\"\nbreak;\ncase 25:\nthis.$ = $$[$0-1] +\" \"+ \">\"\nbreak;\ncase 26:\nthis.$ = $$[$0-1] +\" \"+ \"&\"\nbreak;\ncase 27:\nthis.$ = $$[$0-1] +\" \"+ \"\\'\"\nbreak;\ncase 28:\nthis.$ = $$[$0-1] +\" \"+ \"\\\"\"\nbreak;\ncase 33: case 34: case 35: case 36: case 42: case 43: case 44:\nthis.$ = $$[$0]\nbreak;\ncase 37:\nthis.$ = \"<\"\nbreak;\ncase 38:\nthis.$ = \">\"\nbreak;\ncase 39:\nthis.$ = \"&\"\nbreak;\ncase 40:\nthis.$ = \"\\'\"\nbreak;\ncase 41:\nthis.$ = \"\\\"\"\nbreak;\n}\n},\ntable: [{2:$V0,3:1,4:[1,2],9:3,10:4},{1:[3]},{5:[1,6],6:$V1},{1:[2,2],2:$V0,4:$V2,10:8},o($V3,[2,6],{12:10,11:[1,11]}),{8:[1,13],16:12},{6:[1,14]},{6:$V4,7:15,8:[1,16],14:[1,17],17:18},{11:[1,20]},{6:$V1},o($V3,$V5),o($V3,[2,5]),o($V6,[2,13]),o($V6,[2,14]),{6:$V4,7:21,17:18},{6:$V4,8:[1,22],14:[1,23],17:24},{2:$V0,4:$V2,6:$V7,10:27,13:25,14:$V8,15:26,18:$V9,19:$Va,20:$Vb,21:$Vc,22:$Vd,23:$Ve,24:$Vf,25:$Vg,26:$Vh,27:$Vi},{8:[1,40]},o($Vj,[2,18]),{18:[1,41]},o($V3,[2,3]),{5:[1,42],6:$V4,17:24},{2:$V0,4:$V2,6:$V7,10:27,13:43,14:$V8,15:44,18:$V9,19:$Va,20:$Vb,21:$Vc,22:$Vd,23:$Ve,24:$Vf,25:$Vg,26:$Vh,27:$Vi},{8:[1,45]},o($Vj,[2,17]),{2:$V0,4:[1,46],10:47},{4:[1,48],6:$Vk,14:$Vl,18:$Vm,19:$Vn,20:$Vo,21:$Vp,22:$Vq,23:$Vr,24:$Vs,25:$Vt,26:$Vu,27:$Vv},o($V5,[2,16]),o($Vw,[2,33]),o($Vw,[2,34]),o($Vw,[2,35]),o($Vw,[2,36]),o($Vw,[2,37]),o($Vw,[2,38]),o($Vw,[2,39]),o($Vw,[2,40]),o($Vw,[2,41]),o($Vw,[2,42]),o($Vw,[2,43]),o($Vw,[2,44]),o($V6,[2,12]),{19:[1,61],20:[1,62]},{8:[1,63]},{2:$V0,4:[1,64],10:47},{4:[1,65],6:$Vk,14:$Vl,18:$Vm,19:$Vn,20:$Vo,21:$Vp,22:$Vq,23:$Vr,24:$Vs,25:$Vt,26:$Vu,27:$Vv},o($V6,[2,9]),{6:$V1,14:[1,66]},o($V5,[2,15]),{14:[1,67]},o($Vw,[2,21]),o($Vw,[2,22]),o($Vw,[2,23]),o($Vw,[2,24]),o($Vw,[2,25]),o($Vw,[2,26]),o($Vw,[2,27]),o($Vw,[2,28]),o($Vw,[2,29]),o($Vw,[2,30]),o($Vw,[2,31]),o($Vw,[2,32]),o($Vj,[2,19]),o($Vj,[2,20]),{2:$V0,4:$V2,9:68,10:4},{6:$V1,14:[1,69]},{14:[1,70]},{6:[1,71]},{6:[1,72]},{1:[2,1],2:$V0,4:$V2,10:8},{6:[1,73]},{6:[1,74]},{8:[1,75]},{8:[1,76]},{8:[1,77]},{8:[1,78]},o($V6,[2,10]),o($V6,[2,11]),o($V6,[2,7]),o($V6,[2,8])],\ndefaultActions: {},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse (input) {\n    var self = this,\n        stack = [0],\n        tstack = [], // token stack\n        vstack = [null], // semantic value stack\n        lstack = [], // location stack\n        table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n\n    var args = lstack.slice.call(arguments, 1);\n\n    //this.reductionCount = this.shiftCount = 0;\n\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    // copy state\n    for (var k in this.yy) {\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n        sharedState.yy[k] = this.yy[k];\n      }\n    }\n\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n\n    var ranges = lexer.options && lexer.options.ranges;\n\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n\n    function popStack (n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n_token_stack:\n    var lex = function () {\n        var token;\n        token = lexer.lex() || EOF;\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        // retreive state number from top of stack\n        state = stack[stack.length - 1];\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n_handle_error:\n        // handle parse error\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var error_rule_depth;\n            var errStr = '';\n\n            // Return the rule stack depth where the nearest error rule can be found.\n            // Return FALSE when no error recovery rule was found.\n            function locateNearestErrorRecoveryRule(state) {\n                var stack_probe = stack.length - 1;\n                var depth = 0;\n\n                // try to recover from error\n                for(;;) {\n                    // check for error recovery rule in this state\n                    if ((TERROR.toString()) in table[state]) {\n                        return depth;\n                    }\n                    if (state === 0 || stack_probe < 2) {\n                        return false; // No suitable error recovery rule available.\n                    }\n                    stack_probe -= 2; // popStack(1): [symbol, action]\n                    state = stack[stack_probe];\n                    ++depth;\n                }\n            }\n\n            if (!recovering) {\n                // first see if there's any chance at hitting an error recovery rule:\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n\n                // Report error\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\n                } else {\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                  (symbol == EOF ? \"end of input\" :\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected,\n                    recoverable: (error_rule_depth !== false)\n                });\n            } else if (preErrorSymbol !== EOF) {\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n            }\n\n            // just recovered from another error\n            if (recovering == 3) {\n                if (symbol === EOF || preErrorSymbol === EOF) {\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            if (error_rule_depth === false) {\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\n            }\n            popStack(error_rule_depth);\n\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\n            symbol = TERROR;         // insert generic error symbol as new lookahead\n            state = stack[stack.length-1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n        }\n\n        switch (action[0]) {\n            case 1: // shift\n                //this.shiftCount++;\n\n                stack.push(symbol);\n                vstack.push(lexer.yytext);\n                lstack.push(lexer.yylloc);\n                stack.push(action[1]); // push state\n                symbol = null;\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = lexer.yyleng;\n                    yytext = lexer.yytext;\n                    yylineno = lexer.yylineno;\n                    yyloc = lexer.yylloc;\n                    if (recovering > 0) {\n                        recovering--;\n                    }\n                } else {\n                    // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n\n            case 2:\n                // reduce\n                //this.reductionCount++;\n\n                len = this.productions_[action[1]][1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                // default location, uses first token for firsts, last for lasts\n                yyval._$ = {\n                    first_line: lstack[lstack.length-(len||1)].first_line,\n                    last_line: lstack[lstack.length-1].last_line,\n                    first_column: lstack[lstack.length-(len||1)].first_column,\n                    last_column: lstack[lstack.length-1].last_column\n                };\n                if (ranges) {\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\n                }\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n                if (typeof r !== 'undefined') {\n                    return r;\n                }\n\n                // pop off stack\n                if (len) {\n                    stack = stack.slice(0,-1*len*2);\n                    vstack = vstack.slice(0, -1*len);\n                    lstack = lstack.slice(0, -1*len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                stack.push(newState);\n                break;\n\n            case 3:\n                // accept\n                return true;\n        }\n\n    }\n\n    return true;\n}};\n\r\n    const {Entorno} = require(\"../xmlAST/Entorno\");\r\n    const {Simbolo} = require(\"../xmlAST/Simbolo\");\r\n    const {ClaseError} = require(\"../xmlAST/ClaseError\");\r\n    var listaErrores = [];\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:/*skip comments*/\nbreak;\ncase 2:return 4;\nbreak;\ncase 3:return 8;\nbreak;\ncase 4:return 14;\nbreak;\ncase 5:return 18;\nbreak;\ncase 6:return 5;\nbreak;\ncase 7:return 20;\nbreak;\ncase 8:return 19;\nbreak;\ncase 9:return 6;\nbreak;\ncase 10:return 26;\nbreak;\ncase 11:return 21;\nbreak;\ncase 12:return 22;\nbreak;\ncase 13:return 23;\nbreak;\ncase 14:return 24;\nbreak;\ncase 15:return 25;\nbreak;\ncase 16:return 27;\nbreak;\ncase 17:return 11;\nbreak;\ncase 18:\r\n                                        console.log('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \nbreak;\n}\n},\nrules: [/^(?:\\s+)/i,/^(?:[<][!][-][-][^-<]*[-][-][>])/i,/^(?:<)/i,/^(?:>)/i,/^(?:\\/)/i,/^(?:=)/i,/^(?:\\?)/i,/^(?:(\"([^\\\"\\\\])*\"))/i,/^(?:('([^\\'\\\\])*'))/i,/^(?:([a-zA-Z_]|á|é|í|ó|ú|Á|É|Í|Ó|Ú)(-|[a-zA-Z0-9_ñÑ]|á|é|í|ó|ú|Á|É|Í|Ó|Ú|')*)/i,/^(?:(([0-9]+\\.[0-9]+)|(\\.[0-9]+)|([0-9]+)))/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:[^<> ]+)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = xmlGrammar;\nexports.Parser = xmlGrammar.Parser;\nexports.parse = function () { return xmlGrammar.parse.apply(xmlGrammar, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}"],"sourceRoot":""}