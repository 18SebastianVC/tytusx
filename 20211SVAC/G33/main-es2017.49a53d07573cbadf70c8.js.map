{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/paginas/bnf/bnf.component.html","./src/app/paginas/grafico/grafico.component.html","./src/app/paginas/principal/home.component.html","./src/app/paginas/tabla-xml/tabla-xml.component.html","./src/analizadorXML/AST/CST.ts","./src/analizadorXML/AST/Entorno.ts","./src/analizadorXML/AST/GramaticaBNF.ts","./src/analizadorXML/AST/SalidaGramatica.ts","./src/analizadorXML/AST/TablaSimbolos.ts","./src/analizadorXML/Expresiones/Atributo.ts","./src/analizadorXML/Expresiones/Objeto.ts","./src/analizadorXML/Gramatica/gramatica.js","./src/analizadorXML/index.ts","./src/analizadores/AST/SalidaGramatica.ts","./src/analizadores/Expresiones/Nodo.ts","./src/analizadores/index.ts","./src/analizadores/xpathAsc.js","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/paginas/bnf/bnf.component.css","./src/app/paginas/bnf/bnf.component.ts","./src/app/paginas/grafico/grafico.component.css","./src/app/paginas/grafico/grafico.component.ts","./src/app/paginas/principal/home.component.css","./src/app/paginas/principal/home.component.ts","./src/app/paginas/tabla-xml/tabla-xml.component.css","./src/app/paginas/tabla-xml/tabla-xml.component.ts","./src/app/reporte.service.ts","./src/environments/environment.ts","./src/main.ts","webpack:///fs (ignored)?c296","webpack:///path (ignored)?5d6a","fs (ignored)","path (ignored)"],"names":[],"mappings":"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A,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+DAA+D;AAC/D;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,qCAAqC;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gEAAgE;AAChE,4BAA4B;AAC5B;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,WAAW,OAAO,GAAG,mBAAO,CAAC,wEAAuB;AACpD,WAAW,SAAS,GAAG,mBAAO,CAAC,4EAAyB;AACxD,WAAW,gBAAgB,GAAG,mBAAO,CAAC,0EAAwB;;AAE9D;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iCAAiC;AACjC,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL,qDAAqD;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL,UAAU,wBAAwB;AAClaAAa,cAAc,eAAe,eAAe,uRAAuR,sDAAsD,WAAW;AAChe,aAAa,WAAW,iKAAiK,YAAY;AACrM,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,CAAC;;;AAGD,IAAI,IAAgE;AACpE;AACA;AACA,6BAA6B,oDAAoD;AACjF;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,WAAI,eAAe,mBAAO,CAAC,aAAM;AAC1D;AACA;AACA,IAAI,KAA6B,IAAI,4CAAY;AACjD;AACA;AACA,C;;;;;;;;;;;;;ACl7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AAEkB;AACE;AAGD;AAU5C,MAAM,gBAAgB;IAElB,cAAc,CAAC,OAAe;QACjC,MAAM,KAAK,GAAkB,IAAI,gEAAa,EAAE,CAAC;QACjD,MAAM,OAAO,GAAG,0DAAe,CAAC,OAAO,CAAC,CAAC;QACzC,MAAM,QAAQ,GAAG,IAAI,4CAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAE1C,iBAAiB;QACjB,I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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,kBAAkB,GAAG,mBAAO,CAAC,wEAAuB;AAC/D,WAAW,OAAO,GAAG,mBAAO,CAAC,kEAAoB;AACjD,aAAa,WAAW;;AAExB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iCAAiC;AACjC,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL,qDAAqD;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"main-es2017.49a53d07573cbadf70c8.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<router-outlet></router-outlet>\";","export default \"<p>bnf works!</p>\\r\\n\";","export default \"<div id = \\\"vis\\\"></div>\";","export default \"<div id = \\\"barra\\\">\\r\\n  <mat-toolbar color = \\\"warn\\\">\\r\\n    <span>Tytus X</span>\\r\\n\\r\\n    <div class = \\\"spacer\\\"></div>\\r\\n\\r\\n    <button mat-raised-button color = \\\"accent\\\" [matMenuTriggerFor] = \\\"archivo\\\">Archivo</button>\\r\\n    <mat-menu #archivo = \\\"matMenu\\\">\\r\\n        <button mat-menu-item>\\r\\n            <mat-icon>attach_file</mat-icon>\\r\\n            <label for = \\\"file\\\">Abrir XML</label>\\r\\n            <input type = \\\"file\\\"\\r\\n            id = \\\"file\\\"\\r\\n            class = \\\"hidend\\\"\\r\\n            (change) = \\\"abrirXML($event.target.files)\\\">\\r\\n        </button>\\r\\n        <button mat-menu-item>\\r\\n            <mat-icon>attach_file</mat-icon>\\r\\n            <span>Abrir XPath</span>\\r\\n        </button>\\r\\n        <button mat-menu-item>\\r\\n            <mat-icon>delete</mat-icon>\\r\\n            <span>Limpiar</span>\\r\\n        </button>\\r\\n    </mat-menu>\\r\\n\\r\\n    <button mat-raised-button color = \\\"accent\\\" [matMenuTriggerFor] = \\\"ejecutar\\\">Ejecutar</button>\\r\\n    <mat-menu #ejecutar = \\\"matMenu\\\">\\r\\n        <button mat-menu-item (click) = \\\"ejecutarAscendente()\\\">\\r\\n            <mat-icon>keyboard_arrow_up</mat-icon>\\r\\n            <span>Ascendete</span>\\r\\n        </button>\\r\\n        <button mat-menu-item>\\r\\n            <mat-icon>keyboard_arrow_down</mat-icon>\\r\\n            <span>Descendente</span>\\r\\n        </button>\\r\\n    </mat-menu>\\r\\n\\r\\n    <button mat-raised-button color = \\\"accent\\\" [matMenuTriggerFor] = \\\"reporte\\\">Reportes</button>\\r\\n    <mat-menu #reporte = \\\"matMenu\\\">\\r\\n        <button mat-menu-item (click) = \\\"reporteTablaSimbolosXML()\\\">\\r\\n            <span>Tabla de simbolos XML</span>\\r\\n        </button>\\r\\n        <button mat-menu-item (click) = \\\"reporteCSTXML()\\\">\\r\\n          <span>CST XML</span>\\r\\n        </button>\\r\\n        <button mat-menu-item (click) = \\\"reporteBNFXML()\\\">\\r\\n          <span>BNF XML</span>\\r\\n        </button>  \\r\\n        <button mat-menu-item (click) = \\\"reporteBNFXPATH()\\\">\\r\\n          <span>BNF XPATH</span>\\r\\n        </button>  \\r\\n      </mat-menu>\\r\\n</mat-toolbar>\\r\\n</div>\\r\\n\\r\\n<div id = \\\"superior\\\">\\r\\n  <ngx-codemirror\\r\\n    [options] = \\\"editorQueryOptions\\\"\\r\\n    [(ngModel)] = \\\"querys\\\">\\r\\n  </ngx-codemirror>\\r\\n</div>\\r\\n\\r\\n<div id = \\\"separador1\\\"></div>\\r\\n\\r\\n<div id = \\\"inferior\\\">\\r\\n  <div id = \\\"izquierda\\\">\\r\\n    <ngx-codemirror\\r\\n      [options] = \\\"editorXMLEntradaOptions\\\"\\r\\n      [(ngModel)] = \\\"xmlEntrada\\\">\\r\\n    </ngx-codemirror>\\r\\n  </div>\\r\\n  <div id = \\\"separador2\\\"></div>\\r\\n  <div id = \\\"derecha\\\">\\r\\n    <ngx-codemirror\\r\\n      [options] = \\\"editorXMLSalidaOptions\\\"\\r\\n      [(ngModel)] = \\\"xmlSalida\\\">\\r\\n    </ngx-codemirror>\\r\\n  </div> \\r\\n</div>\";","export default \"<table mat-table [dataSource]=\\\"simbolos\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n    <!--- Note that these columns can be defined in any order.\\r\\n    The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n    <!-- Position Column -->\\r\\n    <ng-container matColumnDef=\\\"no\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> No. </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.no}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"nombre\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Nombre </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.nombre}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Weight Column -->\\r\\n    <ng-container matColumnDef=\\\"tipo\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Tipo </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.tipo}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Symbol Column -->\\r\\n    <ng-container matColumnDef=\\\"valor\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Valor </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.valor}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"ambito\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Ambito </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.ambito}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"fila\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Fila </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.linea}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"columna\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Columna </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.columna}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\";","import { Atributo } from './../Expresiones/Atributo';\r\nimport { Objeto } from './../Expresiones/Objeto';\r\n\r\nexport class CST {\r\n\r\n    cuerpoDot: string = '';\r\n    public objetos: any;\r\n\r\n    constructor(objetos: any) {\r\n        this.objetos = objetos;\r\n    }\r\n\r\n    generarArbolCST(objetos: any): string {\r\n        var num;\r\n        this.cuerpoDot = 'digraph D { \\n ';\r\n        objetos.forEach((object: any) => {\r\n            num = `${object.linea.toString()}_${object.columna.toString()}`;\r\n            this.cuerpoDot += this.generarNodoObjeto(object, num, null);\r\n            num = num + 1000;\r\n        });\r\n        this.cuerpoDot += '} \\n ';\r\n        this.generateDot(this.cuerpoDot);\r\n        return this.cuerpoDot;\r\n    }\r\n\r\n    generarNodoObjeto(objeto: any, pos: any, padre: any): string {\r\n        var nodo = `nodo${pos} [label = \r\n        \\\"ETIQUETA\r\n${objeto.identificador}\\\" ]\\n`;\r\n        /*var nodo = `nodo${pos} [shape=plaintext ` +\r\n            `label=<` +\r\n            `<table border=\"0\" cellborder=\"1\" cellspacing=\"0\">` +\r\n            `<tr><td bgcolor=\"red\">ETIQUETA</td></tr>` +\r\n            `<tr><td bgcolor=\"lightblue\">${objeto.identificador}</td></tr>` +\r\n            `</table>> ]\\n`;\r\n*/\r\n        if (padre !== null) {\r\n            nodo += `nodo${padre} -> nodo${pos}\\n`;\r\n        }\r\n        if (objeto.texto !== '') {\r\n            nodo += `nodo${pos}_t [label =\\\"${objeto.texto}\\\" ]\\n`;\r\n            nodo += `nodo${pos} -> nodo${pos}_t [label=\\\"txt\\\"]\\n`;\r\n        }\r\n\r\n        objeto.listaAtributos.forEach((atribute: any) => {\r\n            var num = `${atribute.linea.toString()}_${atribute.columna.toString()}`;\r\n            nodo += this.generarNodoAtributo(atribute, num, pos);\r\n        });\r\n        objeto.listaObjetos.forEach((obj: any) => {\r\n            var num = `${obj.linea.toString()}_${obj.columna.toString()}`;\r\n            nodo += this.generarNodoObjeto(obj, num, pos);\r\n        });\r\n\r\n        return nodo;\r\n    }\r\n\r\n    generarNodoAtributo(objeto: any, pos: any, padre: any): string {\r\n        var nodo = `nodo${pos} [label =\r\n        \\\"ATRIBUTO\r\n${objeto.identificador}\\\"]\\n`//+\r\n       /* var nodo = `nodo${pos} [shape=plaintext ` +\r\n            `label=<` +\r\n            `<table border=\"0\" cellborder=\"1\" cellspacing=\"0\">` +\r\n            `<tr><td bgcolor=\"yellow\">ATRIBUTO</td></tr>` +\r\n            `<tr><td bgcolor=\"lightblue\">${objeto.identificador}</td></tr>` +\r\n            `</table>> ]\\n`;*/\r\n        nodo += `nodo${padre} -> nodo${pos}\\n`;\r\n        nodo += `nodo${pos}_a [label=${objeto.valor}]\\n`;\r\n        nodo += `nodo${pos} -> nodo${pos}_a [label=\\\"valor\\\"]\\n`;\r\n        return nodo;\r\n    }\r\n\r\n    generateDot(cuerpo: any) {\r\n        console.log('Cuerpo', cuerpo);\r\n    }\r\n\r\n}\r\n","import { Simbolo } from \"./Simbolo\";\r\n\r\n\r\nexport class Entorno{\r\n    private anterior:Entorno;\r\n    private tabla:{[id:string] : Simbolo};\r\n\r\n    constructor(anterior:any){\r\n        this.tabla = {};\r\n        this.anterior = anterior;\r\n    }\r\n\r\n    agregar(id:string, simbolo:Simbolo){\r\n        id = id.toLowerCase();\r\n        simbolo.indentificador = simbolo.indentificador.toLowerCase();\r\n        this.tabla[id] = simbolo;\r\n    }\r\n\r\n    eliminar(id:string):boolean{\r\n        id = id.toLowerCase();\r\n        for (let e:Entorno = this; e != null; e = e.anterior)\r\n        {   \r\n            const value = e.tabla[id]\r\n            if (value!==undefined)\r\n            {\r\n                delete e.tabla[id];\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    existe(id:string):boolean{\r\n        id = id.toLowerCase();\r\n        for (let e:Entorno = this; e != null; e = e.anterior)\r\n        {\r\n            const value = e.tabla[id]\r\n            if (value!==undefined)\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    existeEnActual(id:string):boolean{\r\n        id = id.toLowerCase();\r\n        if (this.tabla[id]!==undefined)\r\n        {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getSimbolo(id:string):any{\r\n        id = id.toLowerCase();\r\n        for (let e:Entorno = this; e != null; e = e.anterior)\r\n        {\r\n            if (e.tabla[id]!==undefined)\r\n            {\r\n                return e.tabla[id];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    reemplazar(id:string, nuevoValor:Simbolo){\r\n        id = id.toLowerCase();\r\n        for (let e:Entorno = this; e != null; e = e.anterior)\r\n        {\r\n            const value = e.tabla[id]\r\n            if (value!==undefined)\r\n            {\r\n                e.tabla[id] = nuevoValor;\r\n            }\r\n        }\r\n    }\r\n\r\n}","\r\nexport class GramaticaBNF {\r\n\r\n    public reporte: any;\r\n    public reporte2: any;\r\n\r\n    constructor(repo: any, repo2: any) {\r\n        this.reporte = repo;\r\n        this.reporte2 = repo2;\r\n    }\r\n\r\n    getBNFReport(): string {\r\n        var reportBody = `<TABLE BORDER> \\n`;\r\n        reportBody += `    <thead> \\n`;\r\n        reportBody += `        <tr> \\n`;\r\n        reportBody += `        <th>Producción</th> \\n`;\r\n        reportBody += `        <th>Regla Semantica</th> \\n`;\r\n        reportBody += `        </tr> \\n`;\r\n        reportBody += `    </thead> \\n`;\r\n        reportBody += `    <tbody> \\n`;\r\n\r\n        for (let i = 0; i < this.reporte.length; i++) {\r\n            reportBody += this.generarBodyReporte(this.reporte[i], this.reporte2[i]);\r\n        }\r\n\r\n        reportBody += `    </tbody> \\n`;\r\n        reportBody += `</TABLE> \\n`;\r\n        return reportBody;\r\n    }\r\n\r\n    generarBodyReporte(object: any, object2: any): string {\r\n        var fila = `  <tr> \\n`;\r\n        fila += `      <td class=\"text-left\">${object}</td>\\n`;\r\n        fila += `      <td class=\"text-left\">${object2}</td>\\n`;\r\n        fila += `  </tr> \\n`;\r\n        return fila;\r\n    }\r\n\r\n}\r\n\r\n","\r\nexport class SalidaGramatica {\r\n\r\n    public objetos: any;\r\n    public reporteBNF: any;\r\n    public reporteBNF2: any;\r\n    public encoding: any;\r\n\r\n    constructor(objetos: any, reporte: any, reporte2: any, encoding: any) {\r\n        this.objetos = objetos;\r\n        this.reporteBNF = reporte;\r\n        this.reporteBNF2 = reporte2;\r\n        this.encoding = encoding;\r\n    }\r\n}\r\n\r\n","import { ArrayType, ThisReceiver } from \"@angular/compiler\";\r\nimport { ObjectUnsubscribedError } from \"rxjs\";\r\nimport { Objeto } from \"../Expresiones/Objeto\";\r\n\r\ninterface elementoTabla {\r\n    no: number,\r\n    nombre: string,\r\n    tipo: string,\r\n    valor: string,\r\n    linea: number,\r\n    columna: number,\r\n    ambito: string\r\n}\r\n\r\nexport class TablaSimbolos {\r\n    contador: number = 1;\r\n\r\n    constructor() { this.contador = 1;}\r\n\r\n    generarReporteTablaObjetos(objetos: any): elementoTabla[] {\r\n        var arrayCuerpo: elementoTabla[] = [];\r\n        objetos.forEach((object: any) => {\r\n            this.generarFilaObjeto(object, null, 'Etiqueta', arrayCuerpo);\r\n        });\r\n        return arrayCuerpo;\r\n    }\r\n\r\n    generarFilaObjeto(objeto: any, ambito: any, tipo: any, array: Array<elementoTabla>) {\r\n        let valor: any;\r\n        objeto.texto === '' ? valor = \"Etiqueta raiz\" : valor = objeto.texto;\r\n    \r\n        let ambitoElemento: any;\r\n        ambito === null ? ambitoElemento = \"Global\" : ambitoElemento = ambito\r\n\r\n        let fila: elementoTabla = {no: this.contador,\r\n            nombre: objeto.identificador,\r\n            tipo: tipo,\r\n            valor: valor,\r\n            linea: objeto.linea,\r\n            columna: objeto.columna,\r\n            ambito: ambitoElemento\r\n        }\r\n        array.push(fila)\r\n\r\n        this.contador++;\r\n\r\n        objeto.listaAtributos.forEach((atribute: any) => {\r\n            this.generarFilaAtributo(atribute, objeto.identificador, 'Atributo', array);\r\n        });\r\n        objeto.listaObjetos.forEach((atribute: any) => {\r\n            this.generarFilaObjeto(atribute, objeto.identificador, 'Etiqueta', array);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    generarFilaAtributo(objeto: any, ambito: any, tipo: any, array: Array<elementoTabla>) {\r\n        let fila: elementoTabla = {\r\n            no: this.contador,\r\n            nombre: objeto.identificador,\r\n            tipo: tipo,\r\n            valor: objeto.valor,\r\n            linea: objeto.linea,\r\n            columna: objeto.columna,\r\n            ambito: ambito\r\n        }\r\n        array.push(fila)\r\n        this.contador++;\r\n    }\r\n}","export class Atributo{\r\n    identificador:string;\r\n    valor:string;\r\n    linea: number;\r\n    columna: number;\r\n\r\n    constructor(id:string, valor:string, linea:number, columna:number){\r\n        this.identificador = id;\r\n        this.valor = valor;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n}","import { Entorno } from \"../AST/Entorno\";\r\nimport { Atributo } from \"./Atributo\";\r\n\r\nexport class Objeto{\r\n    identificador:string;\r\n    texto:string;\r\n    listaAtributos:Array<Atributo>;\r\n    listaObjetos: Array<Objeto>;\r\n    linea: number;\r\n    columna: number;\r\n    entorno: Entorno;\r\n    completa: number;\r\n    cierre: string;\r\n\r\n    constructor(id:string, texto:string, linea:number, columna:number, listaAtributos:Array<Atributo>, listaO:Array<Objeto>,\r\n                completa:number, cierre:string){\r\n        this.identificador = id;\r\n        this.texto = texto;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n        this.listaAtributos = listaAtributos;\r\n        this.listaObjetos = listaO;\r\n        this.entorno = new Entorno(null);\r\n        this.completa = completa;\r\n        this.cierre =  cierre;\r\n    }\r\n}","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar gramatica = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,9],$V1=[1,8],$V2=[2,6,7],$V3=[1,14],$V4=[1,15],$V5=[2,7],$V6=[14,20],$V7=[1,21],$V8=[1,20],$V9=[2,14,17,20],$Va=[1,40],$Vb=[1,47],$Vc=[1,38],$Vd=[1,37],$Ve=[1,45],$Vf=[1,35],$Vg=[1,36],$Vh=[1,39],$Vi=[1,42],$Vj=[1,43],$Vk=[1,44],$Vl=[1,46],$Vm=[1,48],$Vn=[1,49],$Vo=[1,50],$Vp=[1,51],$Vq=[1,52],$Vr=[1,53],$Vs=[1,54],$Vt=[1,55],$Vu=[1,56],$Vv=[1,57],$Vw=[1,58],$Vx=[1,59],$Vy=[1,60],$Vz=[1,61],$VA=[1,62],$VB=[1,63],$VC=[1,64],$VD=[1,65],$VE=[1,66],$VF=[2,7,9,11,12,17,20,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],$VG=[2,29];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"START\":3,\"ENCODING\":4,\"RAICES\":5,\"EOF\":6,\"lt\":7,\"interC\":8,\"xml\":9,\"version\":10,\"asig\":11,\"StringLiteral\":12,\"encoding\":13,\"gt\":14,\"RAIZ\":15,\"OBJETO\":16,\"identifier\":17,\"LATRIBUTOS\":18,\"OBJETOS\":19,\"div\":20,\"LISTA_ID_OBJETO\":21,\"ATRIBUTOS\":22,\"ATRIBUTO\":23,\"LISTA_VALORES\":24,\"IntegerLiteral\":25,\"DoubleLiteral\":26,\"CharLiteral\":27,\"CARACTERES\":28,\"plus\":29,\"minus\":30,\"times\":31,\"mod\":32,\"equal\":33,\"nequal\":34,\"and\":35,\"or\":36,\"not\":37,\"semicolon\":38,\"lparen\":39,\"rparen\":40,\"lcurly\":41,\"rcurly\":42,\"lbracket\":43,\"rbracket\":44,\"period\":45,\"coma\":46,\"lesst\":47,\"greatert\":48,\"ampersand\":49,\"apostro\":50,\"quotation\":51,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",6:\"EOF\",7:\"lt\",8:\"interC\",9:\"xml\",10:\"version\",11:\"asig\",12:\"StringLiteral\",13:\"encoding\",14:\"gt\",17:\"identifier\",20:\"div\",25:\"IntegerLiteral\",26:\"DoubleLiteral\",27:\"CharLiteral\",29:\"plus\",30:\"minus\",31:\"times\",32:\"mod\",33:\"equal\",34:\"nequal\",35:\"and\",36:\"or\",37:\"not\",38:\"semicolon\",39:\"lparen\",40:\"rparen\",41:\"lcurly\",42:\"rcurly\",43:\"lbracket\",44:\"rbracket\",45:\"period\",46:\"coma\",47:\"lesst\",48:\"greatert\",49:\"ampersand\",50:\"apostro\",51:\"quotation\"},\nproductions_: [0,[3,3],[4,11],[4,2],[5,2],[5,1],[15,1],[16,9],[16,9],[16,5],[16,2],[18,1],[18,0],[22,2],[22,1],[23,3],[23,2],[23,2],[19,2],[19,1],[21,2],[21,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[28,1],[28,1],[28,1],[28,1],[28,1],[28,1],[28,1],[28,1],[28,1],[28,1],[28,1],[28,1],[28,1],[28,1],[28,1],[28,1],[28,1],[28,1],[28,1],[28,1],[28,1],[28,1],[28,1],[28,1],[28,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n   \r\n                                        reportBNF.push('&lt;START&gt; ::= &lt;RAICES&gt; EOF');\r\n                                        reportBNF2.push('Start.val = Raiz.val. // Fin del documento');\r\n                                        this.$ = $$[$0-1];\r\n                                        return new SalidaGramatica(this.$, reportBNF, reportBNF2,$$[$0-2]);\r\n                                    \nbreak;\ncase 2:\n   this.$ = $$[$0-2]; \nbreak;\ncase 4:\n   \r\n                                reportBNF.push('&lt;RAICES&gt; ::= &lt;RAICES&gt; &lt;RAIZ&gt;');\r\n                                reportBNF2.push('Raices.val = Raices.push(Raiz)');\r\n                                $$[$0-1].push($$[$0]);\r\n                                this.$ = $$[$0-1];\r\n                            \nbreak;\ncase 5:\n \r\n                                reportBNF.push('&lt;RAICES&gt; ::= &lt;RAIZ&gt;');\r\n                                reportBNF2.push('Raices.val = Raiz.val');\r\n                                this.$ = [$$[$0]];\r\n                            \nbreak;\ncase 6:\n \r\n                                reportBNF.push('&lt;RAIZ&gt; ::= &lt;OBJETO&gt;');\r\n                                reportBNF2.push('Raiz.val = Objeto.val');\r\n                                this.$ = $$[$0];\r\n                            \nbreak;\ncase 7:\n \r\n                                                                                    reportBNF.push('&lt;OBJETO&gt; ::= lt identifier &lt;LATRIBUTOS&gt; gt &lt;OBJETOS&gt; lt div identifier gt');\r\n                                                                                    reportBNF2.push('Objeto = new Objeto(id,\\'\\',linea, columna, atributos, objetos)');\r\n                                                                                    this.$ = new Objeto($$[$0-7],'',_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],$$[$0-4],1,$$[$0-1]);\r\n                                                                                \nbreak;\ncase 8:\n \r\n                                                                                    reportBNF.push('&lt;OBJETO&gt; ::= lt identifier &lt;LATRIBUTOS&gt; gt &lt;LISTA_ID_OBJETO&gt; lt div identifier gt');\r\n                                                                                    reportBNF2.push('Objeto = new Objeto(id,texto,linea, columna,atributos,[])');\r\n                                                                                    this.$ = new Objeto($$[$0-7],$$[$0-4],_$[$0-8].first_line, _$[$0-8].first_column,$$[$0-6],[],1,$$[$0-1]);\r\n                                                                                \nbreak;\ncase 9:\n \r\n                                                                                    reportBNF.push('&lt;OBJETO&gt; ::= lt identifier &lt;LATRIBUTOS&gt; div gt');\r\n                                                                                    reportBNF2.push('Objeto = new Objeto(id,\\'\\',linea, columna,atributos,[])');\r\n                                                                                    this.$ = new Objeto($$[$0-3],'',_$[$0-4].first_line, _$[$0-4].first_column,$$[$0-2],[],0,'');\r\n                                                                                \nbreak;\ncase 10:\n\r\n\r\n                                                                                \nbreak;\ncase 11:\n \r\n                                                    reportBNF.push('&lt;LATRIBUTOS&gt; ::= &lt;ATRIBUTOS&gt;');\r\n                                                    reportBNF2.push('Lista_Atributos.val = Atributos.val');\r\n                                                    this.$ = $$[$0];\r\n                                                \nbreak;\ncase 12:\n \r\n                                                    reportBNF.push('&lt;LATRIBUTOS&gt; ::= /*vacio*/');\r\n                                                    reportBNF2.push('Lista_Atributos.val = [] ');\r\n                                                    this.$ = [];\r\n                                                \nbreak;\ncase 13:\n   \r\n                                                    reportBNF.push('&lt;ATRIBUTOS&gt; ::= &lt;ATRIBUTOS&gt; &lt;ATRIBUTO&gt;');\r\n                                                    reportBNF2.push('Atributos.val = Atributos.push(Atributo)');\r\n                                                    $$[$0-1].push($$[$0]);\r\n                                                    this.$ = $$[$0-1];/*revisar*/\r\n                                                \nbreak;\ncase 14:\n \r\n                                                    reportBNF.push('&lt;ATRIBUTOS&gt; ::= &lt;ATRIBUTO&gt;');\r\n                                                    reportBNF2.push('Atributos.val = Atributo.val');\r\n                                                    this.$ = [$$[$0]];\r\n                                                \nbreak;\ncase 15:\n   \r\n                                                    reportBNF.push('&lt;ATRIBUTO&gt; ::= identifier asig StringLiteral');\r\n                                                    reportBNF2.push('Atributo = new Atributo(id, valor, fila, columna)');\r\n                                                    this.$ = new Atributo($$[$0-2], $$[$0], _$[$0-2].first_line, _$[$0-2].first_column);\r\n                                                \nbreak;\ncase 18:\n   reportBNF.push('&lt;OBJETOS&gt; ::= &lt;OBJETOS&gt; &lt;OBJETO&gt;');\r\n                                reportBNF2.push('Objetos.val = Objetos.push(Objeto)');\r\n                                $$[$0-1].push($$[$0]);\r\n                                this.$ = $$[$0-1];\r\n                            \nbreak;\ncase 19:\n \r\n                                reportBNF.push('&lt;OBJETOS&gt; ::= &lt;OBJETO&gt;');\r\n                                reportBNF2.push('Objetos.val = Objeto.val');\r\n                                this.$ = [$$[$0]];\r\n                            \nbreak;\ncase 20:\n \r\n                                                        reportBNF.push('&lt;LISTA_ID_OBJETO&gt; ::= &lt;LISTA_ID_OBJETO&gt; &lt;LISTA_VALORES&gt;');\r\n                                                        reportBNF2.push('Lista_Id_Objeto.val = Lista_Id_Objeto.val + \\' \\' + Lista_Id_Objeto.val');\r\n                                                        this.$ = $$[$0-1] + ' ' + $$[$0];\r\n                                                    \nbreak;\ncase 21:\n   \r\n                                                        reportBNF.push('&lt;LISTA_ID_OBJETO&gt; ::= &lt;LISTA_VALORES&gt;');\r\n                                                        reportBNF2.push('Lista_Id_Objeto.val = Lista_valores.val');\r\n                                                        this.$ = $$[$0];\r\n                                                    \nbreak;\ncase 22: case 23: case 24: case 25: case 26: case 27: case 28:\n\r\n                                    this.$ = $$[$0];\r\n                                \nbreak;\ncase 30: case 31: case 32: case 33: case 34: case 35: case 36: case 37: case 38: case 39: case 40: case 41: case 42: case 43: case 44: case 45: case 46: case 47: case 48: case 49:\n this.$ = $$[$0];\nbreak;\ncase 50:\n this.$ = '<';\nbreak;\ncase 51:\n this.$ = '>';\nbreak;\ncase 52:\n this.$ = '&';\nbreak;\ncase 53:\n this.$ = '\\'';\nbreak;\ncase 54:\n this.$ = '\"';\nbreak;\n}\n},\ntable: [{2:[1,4],3:1,4:2,7:[1,3]},{1:[3]},{2:$V0,5:5,7:$V1,15:6,16:7},{8:[1,10]},{14:[1,11]},{2:$V0,6:[1,12],7:$V1,15:13,16:7},o($V2,[2,5]),o($V2,[2,6]),{17:$V3},{14:$V4},{9:[1,16]},o($V5,[2,3]),{1:[2,1]},o($V2,[2,4]),o($V6,[2,12],{18:17,22:18,23:19,2:$V7,17:$V8}),o($V2,[2,10]),{10:[1,22]},{14:[1,23],20:[1,24]},o($V6,[2,11],{23:25,2:$V7,17:$V8}),o($V9,[2,14]),{11:[1,26]},{7:[1,28],14:[1,27]},{11:[1,29]},{2:[1,34],7:$V1,9:$Va,11:$Vb,12:$Vc,16:32,17:$Vd,19:30,20:$Ve,21:31,24:33,25:$Vf,26:$Vg,27:$Vh,28:41,29:$Vi,30:$Vj,31:$Vk,32:$Vl,33:$Vm,34:$Vn,35:$Vo,36:$Vp,37:$Vq,38:$Vr,39:$Vs,40:$Vt,41:$Vu,42:$Vv,43:$Vw,44:$Vx,45:$Vy,46:$Vz,47:$VA,48:$VB,49:$VC,50:$VD,51:$VE},{14:[1,67]},o($V9,[2,13]),{12:[1,68]},o($V9,[2,16]),o($V9,[2,17]),{12:[1,69]},{2:$V0,7:[1,70],16:71},{2:[1,74],7:[1,72],9:$Va,11:$Vb,12:$Vc,17:$Vd,20:$Ve,24:73,25:$Vf,26:$Vg,27:$Vh,28:41,29:$Vi,30:$Vj,31:$Vk,32:$Vl,33:$Vm,34:$Vn,35:$Vo,36:$Vp,37:$Vq,38:$Vr,39:$Vs,40:$Vt,41:$Vu,42:$Vv,43:$Vw,44:$Vx,45:$Vy,46:$Vz,47:$VA,48:$VB,49:$VC,50:$VD,51:$VE},o($V5,[2,19]),o($VF,[2,21]),o($VF,$VG,{14:$V4}),o($VF,[2,22]),o($VF,[2,23]),o($VF,[2,24]),o($VF,[2,25]),o($VF,[2,26]),o($VF,[2,27]),o($VF,[2,28]),o($VF,[2,30]),o($VF,[2,31]),o($VF,[2,32]),o($VF,[2,33]),o($VF,[2,34]),o($VF,[2,35]),o($VF,[2,36]),o($VF,[2,37]),o($VF,[2,38]),o($VF,[2,39]),o($VF,[2,40]),o($VF,[2,41]),o($VF,[2,42]),o($VF,[2,43]),o($VF,[2,44]),o($VF,[2,45]),o($VF,[2,46]),o($VF,[2,47]),o($VF,[2,48]),o($VF,[2,49]),o($VF,[2,50]),o($VF,[2,51]),o($VF,[2,52]),o($VF,[2,53]),o($VF,[2,54]),o($V2,[2,9]),o($V9,[2,15]),{13:[1,75]},{17:$V3,20:[1,76]},o($V5,[2,18]),{20:[1,77]},o($VF,[2,20]),o($VF,$VG),{11:[1,78]},{17:[1,79]},{17:[1,80]},{12:[1,81]},{14:[1,82]},{14:[1,83]},{8:[1,84]},o($V2,$V5),o($V2,[2,8]),{14:[1,85]},o($V5,[2,2])],\ndefaultActions: {12:[2,1]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse (input) {\n    var self = this,\n        stack = [0],\n        tstack = [], // token stack\n        vstack = [null], // semantic value stack\n        lstack = [], // location stack\n        table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n\n    var args = lstack.slice.call(arguments, 1);\n\n    //this.reductionCount = this.shiftCount = 0;\n\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    // copy state\n    for (var k in this.yy) {\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n        sharedState.yy[k] = this.yy[k];\n      }\n    }\n\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n\n    var ranges = lexer.options && lexer.options.ranges;\n\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n\n    function popStack (n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n_token_stack:\n    var lex = function () {\n        var token;\n        token = lexer.lex() || EOF;\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        // retreive state number from top of stack\n        state = stack[stack.length - 1];\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n_handle_error:\n        // handle parse error\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var error_rule_depth;\n            var errStr = '';\n\n            // Return the rule stack depth where the nearest error rule can be found.\n            // Return FALSE when no error recovery rule was found.\n            function locateNearestErrorRecoveryRule(state) {\n                var stack_probe = stack.length - 1;\n                var depth = 0;\n\n                // try to recover from error\n                for(;;) {\n                    // check for error recovery rule in this state\n                    if ((TERROR.toString()) in table[state]) {\n                        return depth;\n                    }\n                    if (state === 0 || stack_probe < 2) {\n                        return false; // No suitable error recovery rule available.\n                    }\n                    stack_probe -= 2; // popStack(1): [symbol, action]\n                    state = stack[stack_probe];\n                    ++depth;\n                }\n            }\n\n            if (!recovering) {\n                // first see if there's any chance at hitting an error recovery rule:\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n\n                // Report error\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\n                } else {\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                  (symbol == EOF ? \"end of input\" :\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected,\n                    recoverable: (error_rule_depth !== false)\n                });\n            } else if (preErrorSymbol !== EOF) {\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n            }\n\n            // just recovered from another error\n            if (recovering == 3) {\n                if (symbol === EOF || preErrorSymbol === EOF) {\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            if (error_rule_depth === false) {\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\n            }\n            popStack(error_rule_depth);\n\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\n            symbol = TERROR;         // insert generic error symbol as new lookahead\n            state = stack[stack.length-1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n        }\n\n        switch (action[0]) {\n            case 1: // shift\n                //this.shiftCount++;\n\n                stack.push(symbol);\n                vstack.push(lexer.yytext);\n                lstack.push(lexer.yylloc);\n                stack.push(action[1]); // push state\n                symbol = null;\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = lexer.yyleng;\n                    yytext = lexer.yytext;\n                    yylineno = lexer.yylineno;\n                    yyloc = lexer.yylloc;\n                    if (recovering > 0) {\n                        recovering--;\n                    }\n                } else {\n                    // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n\n            case 2:\n                // reduce\n                //this.reductionCount++;\n\n                len = this.productions_[action[1]][1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                // default location, uses first token for firsts, last for lasts\n                yyval._$ = {\n                    first_line: lstack[lstack.length-(len||1)].first_line,\n                    last_line: lstack[lstack.length-1].last_line,\n                    first_column: lstack[lstack.length-(len||1)].first_column,\n                    last_column: lstack[lstack.length-1].last_column\n                };\n                if (ranges) {\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\n                }\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n                if (typeof r !== 'undefined') {\n                    return r;\n                }\n\n                // pop off stack\n                if (len) {\n                    stack = stack.slice(0,-1*len*2);\n                    vstack = vstack.slice(0, -1*len);\n                    lstack = lstack.slice(0, -1*len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                stack.push(newState);\n                break;\n\n            case 3:\n                // accept\n                return true;\n        }\n\n    }\n\n    return true;\n}};\n\r\n    const {Objeto} = require(\"../Expresiones/Objeto\");\r\n    const {Atributo} = require(\"../Expresiones/Atributo\");\r\n    const {SalidaGramatica} = require(\"../AST/SalidaGramatica\");\r\n    \r\n    var reportBNF = [];\r\n    var reportBNF2 = [];\r\n\r\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip comments */\nbreak;\ncase 1:this.begin('comment');\nbreak;\ncase 2:this.popState();\nbreak;\ncase 3:/* skip comment content*/\nbreak;\ncase 4:/* skip whitespace */\nbreak;\ncase 5:return 47\nbreak;\ncase 6:return 48\nbreak;\ncase 7:return 49\nbreak;\ncase 8:return 50\nbreak;\ncase 9:return 51\nbreak;\ncase 10:return 'null';\nbreak;\ncase 11:return 'true';\nbreak;\ncase 12:return 'false';\nbreak;\ncase 13:return 9;\nbreak;\ncase 14:return 10;\nbreak;\ncase 15:return 13;\nbreak;\ncase 16:return 29;\nbreak;\ncase 17:return 30;\nbreak;\ncase 18:return 31;\nbreak;\ncase 19:return 20;\nbreak;\ncase 20:return 32;\nbreak;\ncase 21:return 'lte';\nbreak;\ncase 22:return 'gte';\nbreak;\ncase 23:return 7;\nbreak;\ncase 24:return 14;\nbreak;\ncase 25:return 11;\nbreak;\ncase 26:return 33;\nbreak;\ncase 27:return 34;\nbreak;\ncase 28:return 35;\nbreak;\ncase 29:return 36;\nbreak;\ncase 30:return 37;\nbreak;\ncase 31:return 8;\nbreak;\ncase 32:return 38;\nbreak;\ncase 33:return 46;\nbreak;\ncase 34:return 45;\nbreak;\ncase 35:return 39;\nbreak;\ncase 36:return 40;\nbreak;\ncase 37:return 41;\nbreak;\ncase 38:return 42;\nbreak;\ncase 39:return 43;\nbreak;\ncase 40:return 44;\nbreak;\ncase 41:return 26;\nbreak;\ncase 42:return 25;\nbreak;\ncase 43:return 17;\nbreak;\ncase 44:return 12;\nbreak;\ncase 45:return 27;\nbreak;\ncase 46:\r\n                                        console.error('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column);\r\n                                    \nbreak;\ncase 47:return 6\nbreak;\n}\n},\nrules: [/^(?:\\/\\/.*)/i,/^(?:<!--)/i,/^(?:-->)/i,/^(?:.)/i,/^(?:\\s+)/i,/^(?:&lt;)/i,/^(?:&gt;)/i,/^(?:&amp;)/i,/^(?:&apos;)/i,/^(?:&quot;)/i,/^(?:null\\b)/i,/^(?:true\\b)/i,/^(?:false\\b)/i,/^(?:xml\\b)/i,/^(?:version\\b)/i,/^(?:encoding\\b)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:\\/)/i,/^(?:%)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:=)/i,/^(?:==)/i,/^(?:!=)/i,/^(?:&&)/i,/^(?:\\|\\|)/i,/^(?:!)/i,/^(?:\\?)/i,/^(?:;)/i,/^(?:,)/i,/^(?:\\.)/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:\\{)/i,/^(?:\\})/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:(([0-9]+\\.[0-9]*)|(\\.[0-9]+)))/i,/^(?:[0-9]+)/i,/^(?:[a-zA-Z_áÁéÉíÍóÓ][a-zA-Z0-9_ñÑ]*)/i,/^(?:(\"((\\\\([\\'\\\"\\\\bfnrtv]))|([^\\\"\\\\]+))*\"))/i,/^(?:('((\\\\([\\'\\\"\\\\bfnrtv]))|([^\\'\\\\]))'))/i,/^(?:.)/i,/^(?:$)/i],\nconditions: {\"comment\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = gramatica;\nexports.Parser = gramatica.Parser;\nexports.parse = function () { return gramatica.parse.apply(gramatica, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","import { AST } from './AST/AST';\r\nimport { CST } from './AST/CST';\r\nimport { Entorno } from './AST/Entorno';\r\nimport { GramaticaBNF } from './AST/GramaticaBNF';\r\nimport { TablaSimbolos } from './AST/TablaSimbolos';\r\nimport { SalidaGramatica } from './AST/SalidaGramatica';\r\n\r\nimport * as gramatica from './Gramatica/gramatica';\r\nimport { RepositionScrollStrategy } from '@angular/cdk/overlay';\r\nimport { emitWarning } from 'process';\r\n\r\ninterface retorno {\r\n    tablaRep: any,\r\n    bnfRep: any,\r\n    cstRep: any\r\n}\r\n\r\nexport class AnalizadorASCXML  {\r\n\r\n    public ejecutarCodigo(entrada: string): retorno {\r\n        const tabla: TablaSimbolos = new TablaSimbolos();\r\n        const salidaG = gramatica.parse(entrada);\r\n        const arbolCST = new CST(salidaG.objetos);\r\n\r\n        // TABLA SIMBOLOS\r\n        let reporteTabla = tabla.generarReporteTablaObjetos(salidaG.objetos); \r\n        // BNF\r\n        let gramBnf = new GramaticaBNF(salidaG.reporteBNF, salidaG.reporteBNF2);\r\n        let reporteBNF = gramBnf.getBNFReport();\r\n        //console.log('--------', gramBnf.getBNFReport() );\r\n        // DOT CST\r\n        let reporteCST = arbolCST.generarArbolCST(salidaG.objetos); \r\n\r\n        let ret: retorno = {\r\n            tablaRep: reporteTabla,\r\n            bnfRep: reporteBNF,\r\n            cstRep: reporteCST\r\n        };\r\n\r\n        return ret;\r\n    }\r\n\r\n/*ejecutarCodigo(`    \r\n<bookstore>\r\n    <book>\r\n        <title lang=\"en\">Harry Potter</title>\r\n        <price>29.99</price>\r\n    </book>\r\n\r\n    <book1>\r\n        <title lang=\"en\">Learning XML</title>\r\n        <price>39.95</price>\r\n    </book1>\r\n</bookstore>\r\n\r\n<bookstore>\r\n    <book>\r\n        <title lang=\"en\">El principito</title>\r\n        <price>9.99</price>\r\n    </book>\r\n\r\n    <book1>\r\n        <title lang=\"en\">Pinocho</title>\r\n        <price>9.95</price>\r\n    </book1>\r\n</bookstore>\r\n`);*/\r\n}","export class SalidaGramatica {\r\n\r\n    public objetos: any;\r\n    public reporteBNF: any;\r\n    public reporteBNF2: any;\r\n\r\n    constructor(objetos: any, reporte: any, reporte2: any) {\r\n        this.objetos = objetos;\r\n        this.reporteBNF = reporte;\r\n        this.reporteBNF2 = reporte2;\r\n    }\r\n}","export class Nodo{\r\n\r\n    estado: string;\r\n    identificador:any;\r\n    predicado: Array<any>;\r\n    linea: number;\r\n    columna: number;\r\n\r\n    constructor(estado:string, identificador:any, predicado: Array<any>, linea:number, columna:number) {\r\n        this.estado = estado;\r\n        this.identificador = identificador;\r\n        this.predicado = predicado;\r\n        this.linea = linea;\r\n        this.columna = columna;\r\n    }\r\n}","import { SalidaGramatica } from './AST/SalidaGramatica';\r\nimport { Nodo } from './Expresiones/Nodo';\r\n\r\nimport * as gramatica from './xpathAsc';\r\n\r\ninterface retorno {\r\n    objetos: Nodo[],\r\n    bnf1: string[],\r\n    bnf2: string[]\r\n}\r\n\r\nexport class AnalizadosAscXpath {\r\n    \r\n    public ejecutarCodigo(entrada: string): retorno {\r\n\r\n        const salidaG = gramatica.parse(entrada);\r\n\r\n        let a: retorno = {\r\n            objetos: salidaG.objetos,\r\n            bnf1: salidaG.reporteBNF,\r\n            bnf2: salidaG.reporteBNF2\r\n        }\r\n\r\n        return a;\r\n    }\r\n}","/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar xpathAsc = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,4],$V1=[1,5],$V2=[1,6],$V3=[1,7],$V4=[1,8],$V5=[5,6],$V6=[1,12],$V7=[5,6,14],$V8=[2,41],$V9=[1,14],$Va=[1,17],$Vb=[1,19],$Vc=[1,20],$Vd=[1,21],$Ve=[1,22],$Vf=[1,24],$Vg=[1,25],$Vh=[1,26],$Vi=[1,27],$Vj=[1,28],$Vk=[1,29],$Vl=[1,30],$Vm=[1,31],$Vn=[1,32],$Vo=[1,33],$Vp=[1,34],$Vq=[1,35],$Vr=[8,12,16,17,20,26,29,30,31,32,33,34,35,36,37,38,39],$Vs=[2,13],$Vt=[1,47],$Vu=[1,51],$Vv=[1,46],$Vw=[1,50],$Vx=[1,44],$Vy=[1,45],$Vz=[1,48],$VA=[1,49],$VB=[1,60],$VC=[1,59],$VD=[1,61],$VE=[1,81],$VF=[1,90],$VG=[1,79],$VH=[1,80],$VI=[1,82],$VJ=[1,83],$VK=[1,84],$VL=[1,85],$VM=[1,86],$VN=[1,87],$VO=[1,88],$VP=[1,89],$VQ=[1,91],$VR=[16,19,24,43,44,45,46,47,48,49,50,51,52,53,54],$VS=[5,6,14,16,19,24,43,44,45,46,47,48,49,50,51,52,53,54],$VT=[1,134],$VU=[1,132],$VV=[1,133],$VW=[1,135],$VX=[16,19,24,43,46,47,48,49,50,51,52,53,54],$VY=[19,24,43,47,48,49,50,51,52,53,54],$VZ=[19,24,43,51,52,53,54];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"INICIOPURO\":3,\"INICIO\":4,\"EOF\":5,\"tk_barra\":6,\"INICIALES\":7,\"tk_punto\":8,\"DIAGONALES\":9,\"DERIVADOSLIMITADO\":10,\"DERIVACIONDIAGONAL\":11,\"tk_identificador\":12,\"PREDICATE\":13,\"tk_diagonal\":14,\"DERIVADOS\":15,\"tk_asterisco\":16,\"tk_node\":17,\"tk_parA\":18,\"tk_parC\":19,\"tk_arroba\":20,\"ATRIBUTO\":21,\"AXES\":22,\"COMPLEMENTOATRIBUTO\":23,\"tk_igual\":24,\"tk_stringTexto\":25,\"tk_child\":26,\"tk_dosPuntos\":27,\"NODETEST\":28,\"tk_descendant\":29,\"tk_descendatOr\":30,\"tk_ancestor\":31,\"tk_ancestorOr\":32,\"tk_attribute\":33,\"tk_following\":34,\"tk_followingSi\":35,\"tk_parent\":36,\"tk_preceding\":37,\"tk_precedingSi\":38,\"tk_self\":39,\"tk_text\":40,\"tk_llaveA\":41,\"EXPRESION\":42,\"tk_llaveC\":43,\"tk_mas\":44,\"tk_menos\":45,\"tk_div\":46,\"tk_menor\":47,\"tk_mayor\":48,\"tk_menorIgual\":49,\"tk_mayorIgual\":50,\"tk_or\":51,\"tk_and\":52,\"tk_mod\":53,\"tk_distinto\":54,\"tk_entero\":55,\"tk_decimal\":56,\"tk_position\":57,\"tk_last\":58,\"tk_ParC\":59,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",6:\"tk_barra\",8:\"tk_punto\",12:\"tk_identificador\",14:\"tk_diagonal\",16:\"tk_asterisco\",17:\"tk_node\",18:\"tk_parA\",19:\"tk_parC\",20:\"tk_arroba\",24:\"tk_igual\",25:\"tk_stringTexto\",26:\"tk_child\",27:\"tk_dosPuntos\",29:\"tk_descendant\",30:\"tk_descendatOr\",31:\"tk_ancestor\",32:\"tk_ancestorOr\",33:\"tk_attribute\",34:\"tk_following\",35:\"tk_followingSi\",36:\"tk_parent\",37:\"tk_preceding\",38:\"tk_precedingSi\",39:\"tk_self\",40:\"tk_text\",41:\"tk_llaveA\",43:\"tk_llaveC\",44:\"tk_mas\",45:\"tk_menos\",46:\"tk_div\",47:\"tk_menor\",48:\"tk_mayor\",49:\"tk_menorIgual\",50:\"tk_mayorIgual\",51:\"tk_or\",52:\"tk_and\",53:\"tk_mod\",54:\"tk_distinto\",55:\"tk_entero\",56:\"tk_decimal\",57:\"tk_position\",58:\"tk_last\",59:\"tk_ParC\"},\r\nproductions_: [0,[3,2],[4,3],[4,1],[7,4],[7,3],[7,3],[7,4],[7,3],[7,5],[9,1],[9,2],[11,3],[11,0],[10,2],[10,2],[10,4],[10,2],[10,1],[15,1],[15,2],[15,1],[23,2],[23,0],[22,4],[22,4],[22,4],[22,4],[22,4],[22,4],[22,4],[22,4],[22,4],[22,4],[22,4],[22,4],[28,2],[28,4],[28,2],[28,3],[13,3],[13,0],[42,3],[42,3],[42,3],[42,3],[42,3],[42,3],[42,3],[42,3],[42,3],[42,3],[42,3],[42,3],[42,3],[42,1],[42,1],[42,2],[42,1],[42,3],[42,3],[42,1],[42,3],[21,1],[21,1],[21,3]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n\r\n            produccion.push('&lt;INICIOPURO&gt; ::= &lt;INICIO&gt; EOF');\r\n            accion.push('INICIOPURO.Val = INICIO.val //fin del documento');\r\n            this.$ = $$[$0-1];\r\n            return new SalidaGramatica(this.$, produccion, accion);\r\n        \r\nbreak;\r\ncase 2:\r\n \r\n            produccion.push('&lt;INICIO&gt; ::= &lt;INICIO&gt; | &lt;INICIALES&gt;');\r\n            accion.push('INICIO.Val = INICIO.push(INICIALES)');\r\n            $$[$0-2].push($$[$0]); \r\n            this.$ = $$[$0-2]; \r\n        \r\nbreak;\r\ncase 3:\r\n\r\n            produccion.push('&lt;INICIO&gt; ::= &lt;INICIALES&gt;');\r\n            accion.push('INICIO.Val = INICIALES.Val');\r\n            this.$ = $$[$0]; \r\n        \r\nbreak;\r\ncase 4:\r\n\r\n            produccion.push(`&lt;INICIALES&gt; ::= punto &lt;DIAGONALES&gt; &lt;DERIVADOSLIMITADO&gt; &lt;DERIVAIONDIAGONAL&gt;`);\r\n            accion.push('INICIALES.Val = []; INICIALES.Val.push(new Nodo(tipo, id, predicado, fila, columna)); INICIALES.Val.push(new Nodo(tipo, id, predicado, fila, columna)); INICIALES.push(DERIVACIONDIAGONAL)'); \r\n            this.$ = new Array();\r\n            this.$.push(new Nodo(\"\", \".\", [], _$[$0-3].first_line, _$[$0-3].first_column))\r\n            this.$.push(new Nodo($$[$0-2], $$[$0-1], [], _$[$0-3].first_line, _$[$0-3].first_column))\r\n            this.$.push(...$$[$0])\r\n        \r\nbreak;\r\ncase 5:\r\n\r\n            produccion.push(`&lt;INICIALES&gt; ::= identificador &lt;PREDICATE&gt; &lt;DERIVACIONDIAGONAL&gt;`);\r\n            accion.push('INICIALES.Val = []; INICIALES.Val.push(new Nodo(tipo, id, predicado, fila, columna)); INICIALES.push(DERIVACIONDIAGONAL)'); \r\n            this.$ = new Array();\r\n            this.$.push(new Nodo(\"\", $$[$0-2], [], _$[$0-2].first_line, _$[$0-2].first_column))\r\n            this.$.push(...$$[$0])\r\n        \r\nbreak;\r\ncase 6:\r\n\r\n            produccion.push(`&lt;INICIALES&gt; ::= / &lt;DERIVADOS&gt; &lt;DERIVACIONDIAGONAL&gt;`);\r\n            accion.push('INICIALES.Val = []; INICIALES.Val.push(new Nodo(tipo, id, predicado, fila, columna)); INICIALES.push(DERIVACIONDIAGONAL)'); \r\n            this.$ = new Array();\r\n            this.$.push(new Nodo($$[$0-2], $$[$0-1], [], _$[$0-2].first_line, _$[$0-2].first_column))\r\n            this.$.push(...$$[$0])\r\n        \r\nbreak;\r\ncase 7:\r\n\r\n            produccion.push('&lt;INICIALES&gt; ::= // &lt;DERIVADOS&gt; &lt;DERIVACIONDIAGONAL&gt;');\r\n            accion.push('INICIALES.Val = []; INICIALES.Val.push(new Nodo(tipo, id, predicado, fila, columna)); INICIALES.push(DERIVACIONDIAGONAL)'); \r\n            this.$ = new Array();\r\n            this.$.push(new Nodo(\"//\", $$[$0-1], [], _$[$0-3].first_line, _$[$0-3].first_column))\r\n            this.$.push(...$$[$0])\r\n        \r\nbreak;\r\ncase 8:\r\n\r\n            produccion.push(`&lt;INICIALES&gt; ::= asterisco &lt;PREDICATE&gt; &lt;DERIVACIONDIAGONAL&gt;`);\r\n            accion.push('INICIALES.Val = []; INICIALES.Val.push(new Nodo(tipo, id, predicado, fila, columna)); INICIALES.push(DERIVACIONDIAGONAL)'); \r\n            this.$ = new Array();\r\n            this.$.push(new Nodo(\"\", $$[$0-2], [], _$[$0-2].first_line, _$[$0-2].first_column))\r\n            this.$.push(...$$[$0])\r\n        \r\nbreak;\r\ncase 9:\r\n\r\n            produccion.push(`&lt;INICIALES&gt; ::= node() &lt;PREDICATE&gt; &lt;DERIVACIONDIAGONAL&gt;`);\r\n            accion.push('INICIALES.Val = []; INICIALES.Val.push(new Nodo(tipo, id, predicado, fila, columna)); INICIALES.push(DERIVACIONDIAGONAL)'); \r\n            this.$ = new Array();\r\n            this.$.push(new Nodo(\"\", \"node()\", [], _$[$0-4].first_line, _$[$0-4].first_column))\r\n            this.$.push(...$$[$0-2])\r\n        \r\nbreak;\r\ncase 10:\r\n\r\n            produccion.push('&lt;DIAGONALES&gt; ::= /');\r\n            accion.push('DIAGONALES.Val = \\\"/\\\"'); \r\n            this.$ = $$[$0] \r\n        \r\nbreak;\r\ncase 11:\r\n\r\n            produccion.push(`&lt;DIAGONALES&gt; ::= //`);\r\n            accion.push('DIAGONALES.Val = \\\"//\\\"'); \r\n            this.$ = \"//\" \r\n        \r\nbreak;\r\ncase 12:\r\n\r\n            produccion.push(`&lt;DERIVACIONDIAGONAL&gt; ::= &lt;DIAGONALES&gt; &lt;DERIVADOS&gt; &lt;DERIVACIONDIAGONAL&gt;`);\r\n            accion.push('DERIVACIONDIAGONAL.Val = []; DERIVACIONDIAGONAL.Val.push(new Nodo(tipo, id, predicado, fila, columna)); DERIVACIONDIAGONAL.push(DERIVACIONDIAGONAL)'); \r\n            this.$ = new Array();\r\n            this.$.push(new Nodo($$[$0-2], $$[$0-1], [], _$[$0-2].first_line, _$[$0-2].first_column)) \r\n            this.$.push(...$$[$0])\r\n        \r\nbreak;\r\ncase 13:\r\n this.$ = [null] \r\nbreak;\r\ncase 14: case 15:\r\nthis.$ = $$[$0-1]\r\nbreak;\r\ncase 16:\r\nthis.$ = $$[$0-3]\r\nbreak;\r\ncase 17:\r\n\r\n            produccion.push(`&lt;DERIVADOSLIMIADO&gt; ::= arroba &lt;ATRIBUTO&gt;`);\r\n            accion.push('DERIVADOSLIMITADO.Val = \\\"@\\\" + ATRIBUTO.Val'); \r\n            this.$ = $$[$0-1] + \"\" + $$[$0]; \r\n        \r\nbreak;\r\ncase 18:\r\nthis.$ = $$[$0]\r\nbreak;\r\ncase 19:\r\n \r\n            produccion.push(`&lt;DERIVADOS&gt; ::= punto`);\r\n            accion.push(\"DERIVADOS.Val = \\\".\\\" \");\r\n            this.$ = $$[$0]; \r\n        \r\nbreak;\r\ncase 20:\r\n\r\n            produccion.push(`&lt;DERIVADOS&gt; ::= doblePunto`);\r\n            accion.push('DERIVADOS.Val = \\\"..\\\"');\r\n            this.$ = \"..\"; \r\nbreak;\r\ncase 21:\r\n \r\n            produccion.push(`&lt;DERIVADOS&gt; ::= &lt;DERIVADOSLIMITADO&gt;`);\r\n            accion.push('DERIVADOS.Val = DERIVADOSLIMITADO.Val'); \r\n            this.$ = $$[$0]; \r\n        \r\nbreak;\r\ncase 22: case 63:\r\n this.$ = $$[$0]; \r\nbreak;\r\ncase 23:\r\n this.$ = \"\" \r\nbreak;\r\ncase 64:\r\n this.$ = $$[$0] \r\nbreak;\r\ncase 65:\r\n this.$ = \"node()\"\r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,7:3,8:$V0,12:$V1,14:$V2,16:$V3,17:$V4},{1:[3]},{5:[1,9],6:[1,10]},o($V5,[2,3]),{9:11,14:$V6},o($V7,$V8,{13:13,41:$V9}),{8:$Va,10:18,12:$Vb,14:[1,16],15:15,16:$Vc,17:$Vd,20:$Ve,22:23,26:$Vf,29:$Vg,30:$Vh,31:$Vi,32:$Vj,33:$Vk,34:$Vl,35:$Vm,36:$Vn,37:$Vo,38:$Vp,39:$Vq},o($V7,$V8,{13:36,41:$V9}),{18:[1,37]},{1:[2,1]},{7:38,8:$V0,12:$V1,14:$V2,16:$V3,17:$V4},{10:39,12:$Vb,16:$Vc,17:$Vd,20:$Ve,22:23,26:$Vf,29:$Vg,30:$Vh,31:$Vi,32:$Vj,33:$Vk,34:$Vl,35:$Vm,36:$Vn,37:$Vo,38:$Vp,39:$Vq},o($Vr,[2,10],{14:[1,40]}),o($V5,$Vs,{11:41,9:42,14:$V6}),{12:$Vt,18:$Vu,20:$Vv,25:$Vw,42:43,55:$Vx,56:$Vy,57:$Vz,58:$VA},o($V5,$Vs,{9:42,11:52,14:$V6}),{8:$Va,10:18,12:$Vb,15:53,16:$Vc,17:$Vd,20:$Ve,22:23,26:$Vf,29:$Vg,30:$Vh,31:$Vi,32:$Vj,33:$Vk,34:$Vl,35:$Vm,36:$Vn,37:$Vo,38:$Vp,39:$Vq},o($V7,[2,19],{8:[1,54]}),o($V7,[2,21]),o($V7,$V8,{13:55,41:$V9}),o($V7,$V8,{13:56,41:$V9}),{18:[1,57]},{12:$VB,16:$VC,17:$VD,21:58},o($V7,[2,18]),{27:[1,62]},{27:[1,63]},{27:[1,64]},{27:[1,65]},{27:[1,66]},{27:[1,67]},{27:[1,68]},{27:[1,69]},{27:[1,70]},{27:[1,71]},{27:[1,72]},{27:[1,73]},o($V5,$Vs,{9:42,11:74,14:$V6}),{19:[1,75]},o($V5,[2,2]),o($V5,$Vs,{9:42,11:76,14:$V6}),o($Vr,[2,11]),o($V5,[2,5]),{8:$Va,10:18,12:$Vb,15:77,16:$Vc,17:$Vd,20:$Ve,22:23,26:$Vf,29:$Vg,30:$Vh,31:$Vi,32:$Vj,33:$Vk,34:$Vl,35:$Vm,36:$Vn,37:$Vo,38:$Vp,39:$Vq},{16:$VE,24:$VF,43:[1,78],44:$VG,45:$VH,46:$VI,47:$VJ,48:$VK,49:$VL,50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ},o($VR,[2,55]),o($VR,[2,56]),{12:$VB,16:$VC,17:$VD,21:92},o($VR,[2,58]),{18:[1,93]},{18:[1,94]},o($VR,[2,61]),{12:$Vt,18:$Vu,20:$Vv,25:$Vw,42:95,55:$Vx,56:$Vy,57:$Vz,58:$VA},o($V5,[2,6]),o($V5,$Vs,{9:42,11:96,14:$V6}),o($V7,[2,20]),o($V7,[2,14]),o($V7,[2,15]),{19:[1,97]},o($V7,[2,17]),o($VS,[2,63]),o($VS,[2,64]),{18:[1,98]},{27:[1,99]},{27:[1,100]},{27:[1,101]},{27:[1,102]},{27:[1,103]},{27:[1,104]},{27:[1,105]},{27:[1,106]},{27:[1,107]},{27:[1,108]},{27:[1,109]},{27:[1,110]},o($V5,[2,8]),o($V7,$V8,{13:111,41:$V9}),o($V5,[2,4]),o($V5,$Vs,{9:42,11:112,14:$V6}),o($V7,[2,40]),{12:$Vt,18:$Vu,20:$Vv,25:$Vw,42:113,55:$Vx,56:$Vy,57:$Vz,58:$VA},{12:$Vt,18:$Vu,20:$Vv,25:$Vw,42:114,55:$Vx,56:$Vy,57:$Vz,58:$VA},{12:$Vt,18:$Vu,20:$Vv,25:$Vw,42:115,55:$Vx,56:$Vy,57:$Vz,58:$VA},{12:$Vt,18:$Vu,20:$Vv,25:$Vw,42:116,55:$Vx,56:$Vy,57:$Vz,58:$VA},{12:$Vt,18:$Vu,20:$Vv,25:$Vw,42:117,55:$Vx,56:$Vy,57:$Vz,58:$VA},{12:$Vt,18:$Vu,20:$Vv,25:$Vw,42:118,55:$Vx,56:$Vy,57:$Vz,58:$VA},{12:$Vt,18:$Vu,20:$Vv,25:$Vw,42:119,55:$Vx,56:$Vy,57:$Vz,58:$VA},{12:$Vt,18:$Vu,20:$Vv,25:$Vw,42:120,55:$Vx,56:$Vy,57:$Vz,58:$VA},{12:$Vt,18:$Vu,20:$Vv,25:$Vw,42:121,55:$Vx,56:$Vy,57:$Vz,58:$VA},{12:$Vt,18:$Vu,20:$Vv,25:$Vw,42:122,55:$Vx,56:$Vy,57:$Vz,58:$VA},{12:$Vt,18:$Vu,20:$Vv,25:$Vw,42:123,55:$Vx,56:$Vy,57:$Vz,58:$VA},{12:$Vt,18:$Vu,20:$Vv,25:$Vw,42:124,55:$Vx,56:$Vy,57:$Vz,58:$VA},{12:$Vt,18:$Vu,20:$Vv,25:$Vw,42:125,55:$Vx,56:$Vy,57:$Vz,58:$VA},o($VR,[2,57]),{19:[1,126]},{19:[1,127]},{16:$VE,19:[1,128],24:$VF,44:$VG,45:$VH,46:$VI,47:$VJ,48:$VK,49:$VL,50:$VM,51:$VN,52:$VO,53:$VP,54:$VQ},o($V5,[2,7]),o($V7,$V8,{13:129,41:$V9}),{59:[1,130]},{12:$VT,16:$VU,17:$VV,28:131,40:$VW},{12:$VT,16:$VU,17:$VV,28:136,40:$VW},{12:$VT,16:$VU,17:$VV,28:137,40:$VW},{12:$VT,16:$VU,17:$VV,28:138,40:$VW},{12:$VT,16:$VU,17:$VV,28:139,40:$VW},{12:$VT,16:$VU,17:$VV,28:140,40:$VW},{12:$VT,16:$VU,17:$VV,28:141,40:$VW},{12:$VT,16:$VU,17:$VV,28:142,40:$VW},{12:$VT,16:$VU,17:$VV,28:143,40:$VW},{12:$VT,16:$VU,17:$VV,28:144,40:$VW},{12:$VT,16:$VU,17:$VV,28:145,40:$VW},{12:$VT,16:$VU,17:$VV,28:146,40:$VW},o($V5,$Vs,{9:42,11:147,14:$V6}),o($V5,[2,12]),o($VR,[2,42]),o($VR,[2,43]),o($VX,[2,44],{44:$VG,45:$VH}),o($VX,[2,45],{44:$VG,45:$VH}),o($VY,[2,46],{16:$VE,44:$VG,45:$VH,46:$VI}),o($VY,[2,47],{16:$VE,44:$VG,45:$VH,46:$VI}),o($VY,[2,48],{16:$VE,44:$VG,45:$VH,46:$VI}),o($VY,[2,49],{16:$VE,44:$VG,45:$VH,46:$VI}),o([19,43,51,53],[2,50],{16:$VE,24:$VF,44:$VG,45:$VH,46:$VI,47:$VJ,48:$VK,49:$VL,50:$VM,52:$VO,54:$VQ}),o([19,43,51,52,53],[2,51],{16:$VE,24:$VF,44:$VG,45:$VH,46:$VI,47:$VJ,48:$VK,49:$VL,50:$VM,54:$VQ}),o([19,43,53],[2,52],{16:$VE,24:$VF,44:$VG,45:$VH,46:$VI,47:$VJ,48:$VK,49:$VL,50:$VM,51:$VN,52:$VO,54:$VQ}),o($VZ,[2,53],{16:$VE,44:$VG,45:$VH,46:$VI,47:$VJ,48:$VK,49:$VL,50:$VM}),o($VZ,[2,54],{16:$VE,44:$VG,45:$VH,46:$VI,47:$VJ,48:$VK,49:$VL,50:$VM}),o($VR,[2,59]),o($VR,[2,60]),o($VR,[2,62]),o($V7,[2,16]),o($VS,[2,65]),o($V7,[2,24]),o($V7,$V8,{13:148,41:$V9}),{18:[1,149]},o($V7,$V8,{13:150,41:$V9}),{18:[1,151]},o($V7,[2,25]),o($V7,[2,26]),o($V7,[2,27]),o($V7,[2,28]),o($V7,[2,29]),o($V7,[2,30]),o($V7,[2,31]),o($V7,[2,32]),o($V7,[2,33]),o($V7,[2,34]),o($V7,[2,35]),o($V5,[2,9]),o($V7,[2,36]),{19:[1,152]},o($V7,[2,38]),{19:[1,153]},o($V7,$V8,{13:154,41:$V9}),o($V7,[2,39]),o($V7,[2,37])],\r\ndefaultActions: {9:[2,1]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n    _token_stack:\r\n        var lex = function () {\r\n            var token;\r\n            token = lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        };\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n                var errStr = '';\r\n                expected = [];\r\n                for (p in table[state]) {\r\n                    if (this.terminals_[p] && p > TERROR) {\r\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                    }\r\n                }\r\n                if (lexer.showPosition) {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n                } else {\r\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n                }\r\n                this.parseError(errStr, {\r\n                    text: lexer.match,\r\n                    token: this.terminals_[symbol] || symbol,\r\n                    line: lexer.yylineno,\r\n                    loc: yyloc,\r\n                    expected: expected\r\n                });\r\n            }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n    const { SalidaGramatica } = require(\"./AST/SalidaGramatica\");\r\n    const { Nodo } = require('./Expresiones/Nodo');\r\n    //const { Atributo } = require('./Expresiones/Atributo');\r\n\r\n    var produccion = [];\r\n    var accion = [];\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:return \"tk_decimal\";\r\nbreak;\r\ncase 1:return \"tk_entero\";\r\nbreak;\r\ncase 2:return \"tk_node\";\r\nbreak;\r\ncase 3:return \"tk_child\";\r\nbreak;\r\ncase 4:return \"tk_descendant\";\r\nbreak;\r\ncase 5:return \"tk_descendatOr\"\r\nbreak;\r\ncase 6:return \"tk_ancestor\";\r\nbreak;\r\ncase 7:return \"tk_ancestorOr\";\r\nbreak;\r\ncase 8:return \"tk_attribute\";\r\nbreak;\r\ncase 9:return \"tk_following\";\r\nbreak;\r\ncase 10:return \"tk_followingSi\"\r\nbreak;\r\ncase 11:return \"tk_parent\"\r\nbreak;\r\ncase 12:return \"tk_preceding\"\r\nbreak;\r\ncase 13:return \"tk_precedingSi\"\r\nbreak;\r\ncase 14:return \"tk_self\"\r\nbreak;\r\ncase 15:return \"tk_text\"\r\nbreak;\r\ncase 16:return \"tk_position\"\r\nbreak;\r\ncase 17:return \"tk_last\"\r\nbreak;\r\ncase 18:return \"tk_div\"\r\nbreak;\r\ncase 19:return \"tk_and\"\r\nbreak;\r\ncase 20:return \"tk_or\"\r\nbreak;\r\ncase 21:return \"tk_mod\"\r\nbreak;\r\ncase 22:return \"tk_barra\"\r\nbreak;\r\ncase 23:return \"tk_punto\"\r\nbreak;\r\ncase 24:return \"tk_diagonal\"\r\nbreak;\r\ncase 25:return \"tk_asterisco\"\r\nbreak;\r\ncase 26:return \"tk_dosPuntos\"\r\nbreak;\r\ncase 27:return \"tk_mas\"\r\nbreak;\r\ncase 28:return \"tk_menos\"\r\nbreak;\r\ncase 29:return \"tk_menorIgual\"\r\nbreak;\r\ncase 30:return \"tk_mayorIgual\"\r\nbreak;\r\ncase 31:return \"tk_menor\"\r\nbreak;\r\ncase 32:return \"tk_mayor\"\r\nbreak;\r\ncase 33:return \"tk_distinto\"\r\nbreak;\r\ncase 34:return \"tk_igual\"\r\nbreak;\r\ncase 35:return \"tk_llaveA\"\r\nbreak;\r\ncase 36:return \"tk_llaveC\"\r\nbreak;\r\ncase 37:return \"tk_arroba\"\r\nbreak;\r\ncase 38:return \"tk_parA\"\r\nbreak;\r\ncase 39:return \"tk_parC\"\r\nbreak;\r\ncase 40:return \"tk_stringTexto\";\r\nbreak;\r\ncase 41:return \"tk_stringTexto\";\r\nbreak;\r\ncase 42:return \"tk_stringTexto\";\r\nbreak;\r\ncase 43:return \"tk_stringTexto\";\r\nbreak;\r\ncase 44:return \"tk_identificador\";\r\nbreak;\r\ncase 45:return \"EOF\";\r\nbreak;\r\ncase 46:\r\nbreak;\r\ncase 47:\r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:[0-9]+(\\.[0-9]+)\\b)/,/^(?:[0-9]+\\b)/,/^(?:node\\b)/,/^(?:child\\b)/,/^(?:descendant\\b)/,/^(?:descendant-or-self\\b)/,/^(?:ancestor\\b)/,/^(?:ancestor-or-self\\b)/,/^(?:attribute\\b)/,/^(?:following\\b)/,/^(?:following-sibling\\b)/,/^(?:parent\\b)/,/^(?:preceding\\b)/,/^(?:preceding-sibling\\b)/,/^(?:self\\b)/,/^(?:text\\b)/,/^(?:position\\b)/,/^(?:last\\b)/,/^(?:div\\b)/,/^(?:and\\b)/,/^(?:or\\b)/,/^(?:mod\\b)/,/^(?:\\|)/,/^(?:\\.)/,/^(?:\\/)/,/^(?:\\*)/,/^(?::)/,/^(?:\\+)/,/^(?:-)/,/^(?:<=)/,/^(?:>=)/,/^(?:<)/,/^(?:>)/,/^(?:!=)/,/^(?:=)/,/^(?:\\[)/,/^(?:\\])/,/^(?:@)/,/^(?:\\()/,/^(?:\\))/,/^(?:\"[^\\\"]*\")/,/^(?:“[^\\“]*“)/,/^(?:'[^\\']*')/,/^(?:‘[^\\‘]*‘)/,/^(?:[a-zA-Z]([a-zA-Z0-9_])*)/,/^(?:$)/,/^(?:[ \\t\\r\\n\\f])/,/^(?:.)/],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\n\r\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\r\nexports.parser = xpathAsc;\r\nexports.Parser = xpathAsc.Parser;\r\nexports.parse = function () { return xpathAsc.parse.apply(xpathAsc, arguments); };\r\nexports.main = function commonjsMain (args) {\r\n    if (!args[1]) {\r\n        console.log('Usage: '+args[0]+' FILE');\r\n        process.exit(1);\r\n    }\r\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\r\n    return exports.parser.parse(source);\r\n};\r\nif (typeof module !== 'undefined' && require.main === module) {\r\n  exports.main(process.argv.slice(1));\r\n}\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { TablaXMLComponent } from './paginas/tabla-xml/tabla-xml.component';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './paginas/principal/home.component';\r\nimport { GraficoComponent } from './paginas/grafico/grafico.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'prefix', redirectTo: 'home' },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'tablaSimbolosXML', component: TablaXMLComponent },\r\n  { path: 'grafico', component: GraficoComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  constructor() { }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { ReporteService } from './reporte.service';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './paginas/principal/home.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { TablaXMLComponent } from './paginas/tabla-xml/tabla-xml.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { GraficoComponent } from './paginas/grafico/grafico.component';\r\nimport { BnfComponent } from './paginas/bnf/bnf.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TablaXMLComponent,\r\n    HomeComponent,\r\n    GraficoComponent,\r\n    BnfComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    CodemirrorModule,\r\n    FormsModule,\r\n    MaterialFileInputModule,\r\n    MatTableModule\r\n  ],\r\n  providers: [\r\n    ReporteService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2luYXMvYm5mL2JuZi5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-bnf',\r\n  templateUrl: './bnf.component.html',\r\n  styleUrls: ['./bnf.component.css']\r\n})\r\nexport class BnfComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"#vis {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnaW5hcy9ncmFmaWNvL2dyYWZpY28uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvcGFnaW5hcy9ncmFmaWNvL2dyYWZpY28uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiN2aXMge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn0iXX0= */\";","import { Component } from '@angular/core';\r\n\r\nimport * as vis from 'vis';\r\n\r\n@Component({\r\n  selector: 'app-grafico',\r\n  templateUrl: './grafico.component.html',\r\n  styleUrls: ['./grafico.component.css']\r\n})\r\nexport class GraficoComponent {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    var container = document.getElementById(\"vis\");\r\n    console.log(localStorage.getItem(\"CSTxml\"));\r\n    var DOTstring = localStorage.getItem(\"CSTxml\");;\r\n    var parsedData = vis.network.convertDot(DOTstring);\r\n  \r\n    var data = {\r\n      nodes: parsedData.nodes,\r\n      edges: parsedData.edges\r\n    };\r\n\r\n    var options = parsedData.options;\r\n\r\n    // you can extend the options like a normal JSON variable:\r\n  options = {\r\n    layout: {\r\n      hierarchical: {\r\n        sortMethod: 'directed',  // hubsize, directed\r\n        direction: 'UD'   // UD, DU, LR, RL\r\n      }\r\n    },\r\n    nodes: {\r\n      color: 'skyblue',\r\n      shape: 'box'\r\n    }\r\n  }\r\n\r\n  // create a network\r\n  var network = new vis.Network(container, data, options);\r\n  }\r\n}\r\n","export default \"#barra {\\r\\n    height: 06vh;\\r\\n}\\r\\n\\r\\n.spacer {\\r\\n    flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n#superior { \\r\\n    height: 24vh;\\r\\n}\\r\\n\\r\\n#separador1 {\\r\\n    height: 01vh;\\r\\n    background-color: #f44336;\\r\\n}\\r\\n\\r\\n#inferior {\\r\\n    height: 69vh;\\r\\n    width: 100vw;\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n#izquierda {\\r\\n    width: 49.50vw;\\r\\n}\\r\\n\\r\\n#separador2 {\\r\\n    width: 01vw;\\r\\n    background-color: #f44336;\\r\\n}\\r\\n\\r\\n#derecha {\\r\\n    width: 49.50vw;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnaW5hcy9wcmluY2lwYWwvaG9tZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLFlBQVk7SUFDWixZQUFZO0lBQ1osYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksY0FBYztBQUNsQiIsImZpbGUiOiJzcmMvYXBwL3BhZ2luYXMvcHJpbmNpcGFsL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNiYXJyYSB7XHJcbiAgICBoZWlnaHQ6IDA2dmg7XHJcbn1cclxuXHJcbi5zcGFjZXIge1xyXG4gICAgZmxleDogMSAxIGF1dG87XHJcbn1cclxuXHJcbiNzdXBlcmlvciB7IFxyXG4gICAgaGVpZ2h0OiAyNHZoO1xyXG59XHJcblxyXG4jc2VwYXJhZG9yMSB7XHJcbiAgICBoZWlnaHQ6IDAxdmg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2O1xyXG59XHJcblxyXG4jaW5mZXJpb3Ige1xyXG4gICAgaGVpZ2h0OiA2OXZoO1xyXG4gICAgd2lkdGg6IDEwMHZ3O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxufVxyXG5cclxuI2l6cXVpZXJkYSB7XHJcbiAgICB3aWR0aDogNDkuNTB2dztcclxufVxyXG5cclxuI3NlcGFyYWRvcjIge1xyXG4gICAgd2lkdGg6IDAxdnc7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2O1xyXG59XHJcblxyXG4jZGVyZWNoYSB7XHJcbiAgICB3aWR0aDogNDkuNTB2dztcclxufVxyXG5cclxuIl19 */\";","import { Component } from '@angular/core';\r\n\r\nimport * as XMLasc from '../../../analizadorXML/index';\r\nimport * as XPATHasc from '../../../analizadores/index';\r\nimport { ReporteService } from '../../reporte.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'home-root',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n\r\n  constructor(public _servicio: ReporteService, private _router: Router) { }\r\n\r\n  title = 'interfaz';\r\n\r\n  //editor query\r\n  querys: any = \"Ingrese una query\";\r\n  editorQueryOptions: any = {\r\n    theme: 'gruvbox-dark',\r\n    mode: \"application/xquery\",\r\n    lineNumbers: true,\r\n    lineWrapping: true,\r\n    foldGutter: true,\r\n    gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter', 'CodeMirror-lint-markers'],\r\n    autoCloseBrackets: true,\r\n    matchBrackets: true,\r\n    lint: true\r\n  }\r\n\r\n  //editor XML entrada\r\n  xmlEntrada: any = `<bookstore>\r\n  <book>\r\n    <title lang=\"en\">Harry Potter</title>\r\n    <price>29.99</price>\r\n  </book>\r\n  <book1>\r\n    <title lang=\"en\">Learning XML</title>\r\n    <price>39.95</price>\r\n  </book1>\r\n</bookstore>`;\r\n  editorXMLEntradaOptions: any = {\r\n    theme: 'gruvbox-dark',\r\n    mode: \"application/xml\",\r\n    lineNumbers: true,\r\n    lineWrapping: true,\r\n    foldGutter: true,\r\n    gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter', 'CodeMirror-lint-markers'],\r\n    autoCloseBrackets: true,\r\n    matchBrackets: true,\r\n    lint: true\r\n  }\r\n\r\n  //editor XML Salida\r\n  xmlSalida: any = \"XML Salida\";\r\n  editorXMLSalidaOptions: any = {\r\n    theme: 'gruvbox-dark',\r\n    mode: \"application/xml\",\r\n    lineNumbers: true,\r\n    lineWrapping: true,\r\n    foldGutter: true,\r\n    gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter', 'CodeMirror-lint-markers'],\r\n    autoCloseBrackets: true,\r\n    matchBrackets: true,\r\n    lint: true\r\n  }\r\n\r\n  //reportes\r\n  tablaXML: any[] = [];\r\n  cstXML: string = \"\";\r\n  bnfXML: any[] = [];\r\n\r\n  queryMod: string = \"\";\r\n\r\n  ngOnInit(){\r\n    let ascXpath = new XPATHasc.AnalizadosAscXpath();\r\n    console.log(ascXpath.ejecutarCodigo(\"//hola/hola//adios/pero\"));\r\n    localStorage.clear();\r\n  }\r\n\r\n  abrirXML(files: FileList) {\r\n    this.xmlEntrada = files.item(0);\r\n    let fileReader = new FileReader();\r\n    fileReader.onload = (e) => {\r\n      this.xmlEntrada = fileReader.result;\r\n      console.log(fileReader.result);\r\n    }\r\n    fileReader.readAsText(this.xmlEntrada);\r\n  }\r\n\r\n  ejecutarAscendente(){\r\n    localStorage.clear();\r\n    let ascXML = new XMLasc.AnalizadorASCXML();\r\n    let ascXpath = new XPATHasc.AnalizadosAscXpath();\r\n\r\n    let ret = ascXML.ejecutarCodigo(this.xmlEntrada);\r\n    let ret1 = ascXpath.ejecutarCodigo(this.querys);\r\n    this.queryMod = \"\";\r\n    for (let i = 0; i < ret1.objetos.length ; i++ ){\r\n      if (ret1.objetos[i] != null){\r\n        this.queryMod += ret1.objetos[i].estado + ret1.objetos[i].identificador;\r\n      }\r\n    }\r\n    console.log(this.queryMod)\r\n    console.log(ret1.objetos);\r\n    this.tablaXML = ret.tablaRep;\r\n    this.cstXML = ret.cstRep;\r\n    this.bnfXML = ret.bnfRep;\r\n    alert(\"Analisis concluido\");\r\n  }\r\n\r\n  reporteTablaSimbolosXML() {\r\n    localStorage.clear();\r\n    localStorage.setItem('tablaXML', JSON.stringify(this.tablaXML));\r\n    window.open(\"tablaSimbolosXML\", \"_blank\")\r\n  }\r\n\r\n  reporteCSTXML() {\r\n    localStorage.clear();\r\n    localStorage.setItem('CSTxml', this.cstXML);\r\n    window.open(\"grafico\", \"_blank\")\r\n  }\r\n\r\n  reporteBNFXML() {\r\n\r\n  }\r\n\r\n  reproteBNFXPATH() {\r\n\r\n  }\r\n\r\n}\r\n","export default \"table {\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnaW5hcy90YWJsYS14bWwvdGFibGEteG1sLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9wYWdpbmFzL3RhYmxhLXhtbC90YWJsYS14bWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59Il19 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ReporteService } from '../../reporte.service';\r\n\r\n@Component({\r\n  selector: 'app-tabla-xml',\r\n  templateUrl: './tabla-xml.component.html',\r\n  styleUrls: ['./tabla-xml.component.css']\r\n})\r\n\r\nexport class TablaXMLComponent implements OnInit {\r\n  displayedColumns: string[] = ['no', 'nombre', 'tipo', 'valor', 'ambito', 'fila', 'columna'];\r\n  simbolos: any;\r\n\r\nconstructor(_servicio: ReporteService) {this.simbolos = localStorage.getItem('tablaXML'); }\r\n\r\n  ngOnInit(): void {\r\n    this.simbolos = JSON.parse(this.simbolos);\r\n    console.log(this.simbolos, \"vacia?\")\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ReporteService {\r\n\r\n  tablaSimbolosXML: any[] = [];\r\n\r\n  llenarTablaXML(array: any[]) {\r\n    this.tablaSimbolosXML = array;\r\n    console.log(this.tablaSimbolosXML)\r\n  }\r\n\r\n  obtenerTablaXML() {\r\n    return this.tablaSimbolosXML;\r\n  }\r\n}\r\n","export const environment = {\r\n  production: true\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/addon/fold/foldgutter';\r\nimport 'codemirror/addon/fold/brace-fold';\r\nimport 'codemirror/lib/codemirror';\r\nimport 'codemirror/addon/edit/closebrackets';\r\nimport 'codemirror/addon/edit/matchbrackets';\r\nimport 'codemirror/addon/lint/lint';\r\nimport 'codemirror/addon/lint/json-lint';\r\nimport 'codemirror/mode/xquery/xquery';\r\nimport 'codemirror/mode/xml/xml';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}